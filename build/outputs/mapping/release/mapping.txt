com.easemob.redpacketsdk.RPADPacketCallback -> com.easemob.redpacketsdk.RPADPacketCallback:
    void onReceivePacketSuccess(java.lang.String) -> onReceivePacketSuccess
    void onDetailSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onDetailSuccess
    void shareToFriends(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.String,java.lang.String) -> shareToFriends
    void loadLandingPage(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.String) -> loadLandingPage
    void showLoading() -> showLoading
    void hideLoading() -> hideLoading
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketsdk.RPBuild -> com.easemob.redpacketsdk.RPBuild:
    void <init>() -> <init>
com.easemob.redpacketsdk.RPBuild$VERSION -> com.easemob.redpacketsdk.RPBuild$VERSION:
    int SDK_INT -> SDK_INT
    void <init>() -> <init>
com.easemob.redpacketsdk.RPBuild$VERSION_CODES -> com.easemob.redpacketsdk.RPBuild$VERSION_CODES:
    int SDK_ALI_1_0_0 -> SDK_ALI_1_0_0
    int SDK_ALI_1_0_1 -> SDK_ALI_1_0_1
    int SDK_ALI_1_1_0 -> SDK_ALI_1_1_0
    int SDK_ALI_1_1_1 -> SDK_ALI_1_1_1
    int SDK_ALI_1_1_2 -> SDK_ALI_1_1_2
    int SDK_ALI_1_1_3 -> SDK_ALI_1_1_3
    void <init>() -> <init>
com.easemob.redpacketsdk.RPCallback -> com.easemob.redpacketsdk.RPCallback:
    void onSuccess() -> onSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketsdk.RPGroupMemberListener -> com.easemob.redpacketsdk.RPGroupMemberListener:
    void getGroupMember(java.lang.String,com.easemob.redpacketsdk.RPValueCallback) -> getGroupMember
com.easemob.redpacketsdk.RPInitRedPacketCallback -> com.easemob.redpacketsdk.RPInitRedPacketCallback:
    void initTokenData(com.easemob.redpacketsdk.RPValueCallback) -> initTokenData
    com.easemob.redpacketsdk.bean.RedPacketInfo initCurrentUserSync() -> initCurrentUserSync
com.easemob.redpacketsdk.RPOnClickListener -> com.easemob.redpacketsdk.RPOnClickListener:
    void onClosedButtonClick() -> onClosedButtonClick
com.easemob.redpacketsdk.RPSendPacketCallback -> com.easemob.redpacketsdk.RPSendPacketCallback:
    void onGenerateRedPacketId(java.lang.String) -> onGenerateRedPacketId
    void onSendPacketSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onSendPacketSuccess
com.easemob.redpacketsdk.RPTokenCallback -> com.easemob.redpacketsdk.RPTokenCallback:
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketsdk.RPValueCallback -> com.easemob.redpacketsdk.RPValueCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketsdk.RedPacket -> com.easemob.redpacketsdk.RedPacket:
    java.lang.String a -> a
    java.lang.String b -> b
    com.android.volley.RequestQueue c -> c
    com.easemob.redpacketsdk.RPADPacketCallback d -> d
    com.easemob.redpacketsdk.RPGroupMemberListener e -> e
    com.easemob.redpacketsdk.RPSendPacketCallback f -> f
    com.easemob.redpacketsdk.RPInitRedPacketCallback g -> g
    com.easemob.redpacketsdk.RPOnClickListener h -> h
    com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter i -> i
    com.easemob.redpacketsdk.presenter.impl.RPTokenPresenter j -> j
    java.lang.String k -> k
    boolean l -> l
    void <init>() -> <init>
    com.easemob.redpacketsdk.RedPacket getInstance() -> getInstance
    void addToRequestQueue(com.android.volley.Request,java.lang.String) -> addToRequestQueue
    void initRPToken(java.lang.String,com.easemob.redpacketsdk.RPTokenCallback) -> initRPToken
    void a(com.easemob.redpacketsdk.RPTokenCallback) -> a
    void a(java.lang.String,com.easemob.redpacketsdk.RPTokenCallback) -> a
    void a(com.easemob.redpacketsdk.bean.TokenData,java.lang.String,com.easemob.redpacketsdk.RPTokenCallback) -> a
    void b(com.easemob.redpacketsdk.RPTokenCallback) -> b
    void c(com.easemob.redpacketsdk.RPTokenCallback) -> c
    void setDebugMode(boolean) -> setDebugMode
    void a(android.content.Context,java.lang.String) -> a
    void initRedPacket(android.content.Context,java.lang.String,com.easemob.redpacketsdk.RPInitRedPacketCallback) -> initRedPacket
    void setRPADPacketCallback(com.easemob.redpacketsdk.RPADPacketCallback) -> setRPADPacketCallback
    com.easemob.redpacketsdk.RPADPacketCallback getRPADPacketCallback() -> getRPADPacketCallback
    com.easemob.redpacketsdk.RPGroupMemberListener getRPGroupMemberListener() -> getRPGroupMemberListener
    void setRPGroupMemberListener(com.easemob.redpacketsdk.RPGroupMemberListener) -> setRPGroupMemberListener
    com.easemob.redpacketsdk.RPSendPacketCallback getRPSendPacketCallback() -> getRPSendPacketCallback
    void setRPSendPacketCallback(com.easemob.redpacketsdk.RPSendPacketCallback) -> setRPSendPacketCallback
    com.easemob.redpacketsdk.RPInitRedPacketCallback getRPInitRedPacketCallback() -> getRPInitRedPacketCallback
    void a(com.easemob.redpacketsdk.RPInitRedPacketCallback) -> a
    com.easemob.redpacketsdk.RPOnClickListener getRPOnClickListener() -> getRPOnClickListener
    void setRPOnClickListener(com.easemob.redpacketsdk.RPOnClickListener) -> setRPOnClickListener
    void detachCallback() -> detachCallback
    void detachTokenPresenter() -> detachTokenPresenter
    java.lang.String a(com.easemob.redpacketsdk.RedPacket) -> a
    java.lang.String b(com.easemob.redpacketsdk.RedPacket) -> b
    void a(com.easemob.redpacketsdk.RedPacket,com.easemob.redpacketsdk.bean.TokenData,java.lang.String,com.easemob.redpacketsdk.RPTokenCallback) -> a
    boolean c(com.easemob.redpacketsdk.RedPacket) -> c
    void a(com.easemob.redpacketsdk.RedPacket,com.easemob.redpacketsdk.RPTokenCallback) -> a
    com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter a(com.easemob.redpacketsdk.RedPacket,com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter) -> a
    com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter d(com.easemob.redpacketsdk.RedPacket) -> d
com.easemob.redpacketsdk.RedPacket$1 -> com.easemob.redpacketsdk.RedPacket$1:
    java.lang.String a -> a
    com.easemob.redpacketsdk.RPTokenCallback b -> b
    com.easemob.redpacketsdk.RedPacket c -> c
    void <init>(com.easemob.redpacketsdk.RedPacket,java.lang.String,com.easemob.redpacketsdk.RPTokenCallback) -> <init>
    void a(com.easemob.redpacketsdk.bean.TokenData) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.RedPacket$2 -> com.easemob.redpacketsdk.RedPacket$2:
    java.lang.String a -> a
    com.easemob.redpacketsdk.bean.TokenData b -> b
    com.easemob.redpacketsdk.RPTokenCallback c -> c
    com.easemob.redpacketsdk.RedPacket d -> d
    void <init>(com.easemob.redpacketsdk.RedPacket,java.lang.String,com.easemob.redpacketsdk.bean.TokenData,com.easemob.redpacketsdk.RPTokenCallback) -> <init>
    void onTokenSuccess(java.lang.String) -> onTokenSuccess
    void onTokenError(java.lang.String,java.lang.String) -> onTokenError
com.easemob.redpacketsdk.RedPacket$3 -> com.easemob.redpacketsdk.RedPacket$3:
    com.easemob.redpacketsdk.RPTokenCallback a -> a
    com.easemob.redpacketsdk.RedPacket b -> b
    void <init>(com.easemob.redpacketsdk.RedPacket,com.easemob.redpacketsdk.RPTokenCallback) -> <init>
    void a(com.easemob.redpacketsdk.bean.TokenData) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.RedPacket$3$1 -> com.easemob.redpacketsdk.RedPacket$3$1:
    com.easemob.redpacketsdk.bean.TokenData a -> a
    com.easemob.redpacketsdk.RedPacket$3 b -> b
    void <init>(com.easemob.redpacketsdk.RedPacket$3,com.easemob.redpacketsdk.bean.TokenData) -> <init>
    void onAuthTokenSuccess(java.lang.String) -> onAuthTokenSuccess
    void onAuthTokenError(java.lang.String,java.lang.String) -> onAuthTokenError
com.easemob.redpacketsdk.RedPacket$4 -> com.easemob.redpacketsdk.RedPacket$4:
    com.easemob.redpacketsdk.RPTokenCallback a -> a
    com.easemob.redpacketsdk.RedPacket b -> b
    void <init>(com.easemob.redpacketsdk.RedPacket,com.easemob.redpacketsdk.RPTokenCallback) -> <init>
    void onSettingSuccess() -> onSettingSuccess
    void onSettingError(java.lang.String,java.lang.String) -> onSettingError
com.easemob.redpacketsdk.RedPacket$a -> com.easemob.redpacketsdk.RedPacket$a:
    com.easemob.redpacketsdk.RedPacket a -> a
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.a.a -> com.easemob.redpacketsdk.a.a:
    java.lang.Object a -> a
    void <init>() -> <init>
    void a(java.lang.Object) -> a
    void a() -> a
    boolean b() -> b
com.easemob.redpacketsdk.a.a.a -> com.easemob.redpacketsdk.a.a.a:
    void <init>() -> <init>
    void a(java.lang.String) -> a
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
    void b(java.lang.String,java.lang.String) -> b
com.easemob.redpacketsdk.a.a.a$1 -> com.easemob.redpacketsdk.a.a.a$1:
com.easemob.redpacketsdk.a.a.a$a -> com.easemob.redpacketsdk.a.a.a$a:
    void onDetailSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onDetailSuccess
    void onDetailError(java.lang.String,java.lang.String) -> onDetailError
    void onReceiveSuccess(java.util.Map) -> onReceiveSuccess
    void onReceiveError(java.lang.String,java.lang.String) -> onReceiveError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
com.easemob.redpacketsdk.a.a.a$b -> com.easemob.redpacketsdk.a.a.a$b:
    com.easemob.redpacketsdk.a.a.a a -> a
    void <init>(com.easemob.redpacketsdk.a.a.a) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.a,com.easemob.redpacketsdk.a.a.a$1) -> <init>
com.easemob.redpacketsdk.a.a.a$c -> com.easemob.redpacketsdk.a.a.a$c:
    com.easemob.redpacketsdk.a.a.a a -> a
    void <init>(com.easemob.redpacketsdk.a.a.a) -> <init>
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.a,com.easemob.redpacketsdk.a.a.a$1) -> <init>
com.easemob.redpacketsdk.a.a.a$d -> com.easemob.redpacketsdk.a.a.a$d:
    com.easemob.redpacketsdk.a.a.a a -> a
    void <init>(com.easemob.redpacketsdk.a.a.a) -> <init>
    void a(java.util.Map) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.a,com.easemob.redpacketsdk.a.a.a$1) -> <init>
com.easemob.redpacketsdk.a.a.a$e -> com.easemob.redpacketsdk.a.a.a$e:
    com.easemob.redpacketsdk.a.a.a a -> a
    void <init>(com.easemob.redpacketsdk.a.a.a) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.a,com.easemob.redpacketsdk.a.a.a$1) -> <init>
com.easemob.redpacketsdk.a.a.b -> com.easemob.redpacketsdk.a.a.b:
    void <init>() -> <init>
    void a(java.lang.String) -> a
    void c() -> c
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void d() -> d
    void e() -> e
    void c(java.lang.String) -> c
    java.lang.String a(java.lang.String,boolean) -> a
com.easemob.redpacketsdk.a.a.b$1 -> com.easemob.redpacketsdk.a.a.b$1:
com.easemob.redpacketsdk.a.a.b$a -> com.easemob.redpacketsdk.a.a.b$a:
    void onOrderInfoSuccess(java.lang.String,java.lang.String) -> onOrderInfoSuccess
    void onOrderInfoError(java.lang.String,java.lang.String) -> onOrderInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void onVerifyAliPaySuccess(int) -> onVerifyAliPaySuccess
    void onVerifyAliPayError(java.lang.String,java.lang.String) -> onVerifyAliPayError
    void onGenerateIdSuccess(java.lang.String) -> onGenerateIdSuccess
    void onGenerateIdError(java.lang.String,java.lang.String) -> onGenerateIdError
    void onSendPacketSuccess(java.lang.String) -> onSendPacketSuccess
    void onSendPacketError(java.lang.String,java.lang.String) -> onSendPacketError
    void onStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onStatusSuccess
    void onStatusError(java.lang.String,java.lang.String) -> onStatusError
com.easemob.redpacketsdk.a.a.b$b -> com.easemob.redpacketsdk.a.a.b$b:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$c -> com.easemob.redpacketsdk.a.a.b$c:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$d -> com.easemob.redpacketsdk.a.a.b$d:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$e -> com.easemob.redpacketsdk.a.a.b$e:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.util.HashMap) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$f -> com.easemob.redpacketsdk.a.a.b$f:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$g -> com.easemob.redpacketsdk.a.a.b$g:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.b$h -> com.easemob.redpacketsdk.a.a.b$h:
    com.easemob.redpacketsdk.a.a.b a -> a
    void <init>(com.easemob.redpacketsdk.a.a.b) -> <init>
    void a(java.lang.Integer) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.b,com.easemob.redpacketsdk.a.a.b$1) -> <init>
com.easemob.redpacketsdk.a.a.c -> com.easemob.redpacketsdk.a.a.c:
    void <init>() -> <init>
    void a(java.lang.String) -> a
com.easemob.redpacketsdk.a.a.c$1 -> com.easemob.redpacketsdk.a.a.c$1:
com.easemob.redpacketsdk.a.a.c$a -> com.easemob.redpacketsdk.a.a.c$a:
    void onCheckStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onCheckStatusSuccess
    void onCheckStatusError(java.lang.String,java.lang.String) -> onCheckStatusError
com.easemob.redpacketsdk.a.a.c$b -> com.easemob.redpacketsdk.a.a.c$b:
    com.easemob.redpacketsdk.a.a.c a -> a
    void <init>(com.easemob.redpacketsdk.a.a.c) -> <init>
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.c,com.easemob.redpacketsdk.a.a.c$1) -> <init>
com.easemob.redpacketsdk.a.a.d -> com.easemob.redpacketsdk.a.a.d:
    void <init>() -> <init>
    void a(java.lang.String) -> a
com.easemob.redpacketsdk.a.a.d$1 -> com.easemob.redpacketsdk.a.a.d$1:
com.easemob.redpacketsdk.a.a.d$a -> com.easemob.redpacketsdk.a.a.d$a:
    com.easemob.redpacketsdk.a.a.d a -> a
    void <init>(com.easemob.redpacketsdk.a.a.d) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.d,com.easemob.redpacketsdk.a.a.d$1) -> <init>
com.easemob.redpacketsdk.a.a.d$b -> com.easemob.redpacketsdk.a.a.d$b:
    void onLogSuccess(java.lang.String) -> onLogSuccess
    void onLogError(java.lang.String,java.lang.String) -> onLogError
com.easemob.redpacketsdk.a.a.e -> com.easemob.redpacketsdk.a.a.e:
    void <init>() -> <init>
    void a(java.lang.String,java.lang.String,int,int) -> a
com.easemob.redpacketsdk.a.a.e$1 -> com.easemob.redpacketsdk.a.a.e$1:
com.easemob.redpacketsdk.a.a.e$a -> com.easemob.redpacketsdk.a.a.e$a:
    com.easemob.redpacketsdk.a.a.e a -> a
    void <init>(com.easemob.redpacketsdk.a.a.e) -> <init>
    void a(java.util.HashMap) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.e,com.easemob.redpacketsdk.a.a.e$1) -> <init>
com.easemob.redpacketsdk.a.a.e$b -> com.easemob.redpacketsdk.a.a.e$b:
    void onPacketDetailSuccess(java.util.HashMap) -> onPacketDetailSuccess
    void onPacketDetailError(java.lang.String,java.lang.String) -> onPacketDetailError
com.easemob.redpacketsdk.a.a.f -> com.easemob.redpacketsdk.a.a.f:
    void <init>() -> <init>
    void a(com.easemob.redpacketsdk.bean.TokenData) -> a
com.easemob.redpacketsdk.a.a.f$1 -> com.easemob.redpacketsdk.a.a.f$1:
com.easemob.redpacketsdk.a.a.f$a -> com.easemob.redpacketsdk.a.a.f$a:
    com.easemob.redpacketsdk.a.a.f a -> a
    void <init>(com.easemob.redpacketsdk.a.a.f) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.f,com.easemob.redpacketsdk.a.a.f$1) -> <init>
com.easemob.redpacketsdk.a.a.f$b -> com.easemob.redpacketsdk.a.a.f$b:
    void onAuthTokenSuccess(java.lang.String) -> onAuthTokenSuccess
    void onAuthTokenError(java.lang.String,java.lang.String) -> onAuthTokenError
com.easemob.redpacketsdk.a.a.g -> com.easemob.redpacketsdk.a.a.g:
    int b -> b
    void <init>(int) -> <init>
    void c() -> c
    void d() -> d
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    void e() -> e
com.easemob.redpacketsdk.a.a.g$1 -> com.easemob.redpacketsdk.a.a.g$1:
com.easemob.redpacketsdk.a.a.g$a -> com.easemob.redpacketsdk.a.a.g$a:
    com.easemob.redpacketsdk.a.a.g a -> a
    void <init>(com.easemob.redpacketsdk.a.a.g) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.a.a.g$b -> com.easemob.redpacketsdk.a.a.g$b:
    com.easemob.redpacketsdk.a.a.g a -> a
    void <init>(com.easemob.redpacketsdk.a.a.g) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.a.a.g$c -> com.easemob.redpacketsdk.a.a.g$c:
    com.easemob.redpacketsdk.a.a.g a -> a
    void <init>(com.easemob.redpacketsdk.a.a.g) -> <init>
    void a(java.util.Map) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.g,com.easemob.redpacketsdk.a.a.g$1) -> <init>
com.easemob.redpacketsdk.a.a.g$d -> com.easemob.redpacketsdk.a.a.g$d:
    void onAliUserInfoSuccess(java.lang.String) -> onAliUserInfoSuccess
    void onAliUserInfoError(java.lang.String,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void onRecordListSuccess(java.util.Map) -> onRecordListSuccess
    void onRecordListError(java.lang.String,java.lang.String) -> onRecordListError
    void onUnbindAliSuccess() -> onUnbindAliSuccess
    void onUnbindAliError(java.lang.String,java.lang.String) -> onUnbindAliError
com.easemob.redpacketsdk.a.a.g$e -> com.easemob.redpacketsdk.a.a.g$e:
    com.easemob.redpacketsdk.a.a.g a -> a
    void <init>(com.easemob.redpacketsdk.a.a.g) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.a.a.g$f -> com.easemob.redpacketsdk.a.a.g$f:
    com.easemob.redpacketsdk.a.a.g a -> a
    void <init>(com.easemob.redpacketsdk.a.a.g) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketsdk.a.a.h -> com.easemob.redpacketsdk.a.a.h:
    void <init>() -> <init>
    void c() -> c
com.easemob.redpacketsdk.a.a.h$1 -> com.easemob.redpacketsdk.a.a.h$1:
com.easemob.redpacketsdk.a.a.h$a -> com.easemob.redpacketsdk.a.a.h$a:
    com.easemob.redpacketsdk.a.a.h a -> a
    void <init>(com.easemob.redpacketsdk.a.a.h) -> <init>
    void a(java.lang.String[]) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.h,com.easemob.redpacketsdk.a.a.h$1) -> <init>
com.easemob.redpacketsdk.a.a.h$b -> com.easemob.redpacketsdk.a.a.h$b:
    void onSettingSuccess(java.lang.String[]) -> onSettingSuccess
    void onSettingError(java.lang.String,java.lang.String) -> onSettingError
com.easemob.redpacketsdk.a.a.i -> com.easemob.redpacketsdk.a.a.i:
    void <init>() -> <init>
    void a(com.easemob.redpacketsdk.bean.TokenData) -> a
com.easemob.redpacketsdk.a.a.i$1 -> com.easemob.redpacketsdk.a.a.i$1:
com.easemob.redpacketsdk.a.a.i$a -> com.easemob.redpacketsdk.a.a.i$a:
    com.easemob.redpacketsdk.a.a.i a -> a
    void <init>(com.easemob.redpacketsdk.a.a.i) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.i,com.easemob.redpacketsdk.a.a.i$1) -> <init>
com.easemob.redpacketsdk.a.a.i$b -> com.easemob.redpacketsdk.a.a.i$b:
    void onRPTokenSuccess(java.lang.String) -> onRPTokenSuccess
    void onRPTokenError(java.lang.String,java.lang.String) -> onRPTokenError
com.easemob.redpacketsdk.a.a.j -> com.easemob.redpacketsdk.a.a.j:
    void <init>() -> <init>
    void a(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void c() -> c
    void a(java.lang.String,java.lang.String) -> a
com.easemob.redpacketsdk.a.a.j$1 -> com.easemob.redpacketsdk.a.a.j$1:
com.easemob.redpacketsdk.a.a.j$a -> com.easemob.redpacketsdk.a.a.j$a:
    com.easemob.redpacketsdk.a.a.j a -> a
    void <init>(com.easemob.redpacketsdk.a.a.j) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.j,com.easemob.redpacketsdk.a.a.j$1) -> <init>
com.easemob.redpacketsdk.a.a.j$b -> com.easemob.redpacketsdk.a.a.j$b:
    com.easemob.redpacketsdk.a.a.j a -> a
    void <init>(com.easemob.redpacketsdk.a.a.j) -> <init>
    void a(java.util.Map) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.j,com.easemob.redpacketsdk.a.a.j$1) -> <init>
com.easemob.redpacketsdk.a.a.j$c -> com.easemob.redpacketsdk.a.a.j$c:
    void onUnfoldSuccess(java.util.Map) -> onUnfoldSuccess
    void onUnfoldError(java.lang.String,java.lang.String) -> onUnfoldError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
com.easemob.redpacketsdk.a.a.j$d -> com.easemob.redpacketsdk.a.a.j$d:
    com.easemob.redpacketsdk.a.a.j a -> a
    void <init>(com.easemob.redpacketsdk.a.a.j) -> <init>
    void a(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    void <init>(com.easemob.redpacketsdk.a.a.j,com.easemob.redpacketsdk.a.a.j$1) -> <init>
com.easemob.redpacketsdk.b.a -> com.easemob.redpacketsdk.b.a:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.a.a -> com.easemob.redpacketsdk.b.a.a:
    org.json.JSONObject a(com.android.volley.VolleyError) -> a
    boolean b(com.android.volley.VolleyError) -> b
    boolean c(com.android.volley.VolleyError) -> c
    org.json.JSONObject d(com.android.volley.VolleyError) -> d
com.easemob.redpacketsdk.b.a.b -> com.easemob.redpacketsdk.b.a.b:
    java.util.Map a -> a
    com.android.volley.Response$Listener b -> b
    com.android.volley.Response$ErrorListener c -> c
    void <init>(int,java.lang.String,com.android.volley.RetryPolicy,java.util.Map,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> parseNetworkError
    void deliverError(com.android.volley.VolleyError) -> deliverError
    void a(org.json.JSONObject) -> a
    java.util.Map getParams() -> getParams
    java.util.Map getHeaders() -> getHeaders
    void deliverResponse(java.lang.Object) -> deliverResponse
com.easemob.redpacketsdk.b.a.c -> com.easemob.redpacketsdk.b.a.c:
    com.easemob.redpacketsdk.RPValueCallback a -> a
    java.lang.String b -> b
    void <init>() -> <init>
    void a(com.easemob.redpacketsdk.RPValueCallback) -> a
    com.easemob.redpacketsdk.b.a.b a(java.lang.String) -> a
    com.easemob.redpacketsdk.b.a.b a(java.lang.String,java.util.Map) -> a
    com.easemob.redpacketsdk.b.a.b b(java.lang.String) -> b
    com.easemob.redpacketsdk.b.a.b a(java.lang.String,com.android.volley.RetryPolicy,java.util.Map) -> a
    com.android.volley.toolbox.JsonObjectRequest a(java.lang.String,org.json.JSONObject) -> a
    com.android.volley.toolbox.JsonObjectRequest a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void b(java.lang.String,java.util.Map) -> b
    void b(java.lang.String,com.android.volley.RetryPolicy,java.util.Map) -> b
    void b(java.lang.String,org.json.JSONObject) -> b
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.Object) -> a
    void c(java.lang.String,java.lang.String) -> c
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.easemob.redpacketsdk.b.a.c$1 -> com.easemob.redpacketsdk.b.a.c$1:
    com.easemob.redpacketsdk.b.a.c a -> a
    void <init>(com.easemob.redpacketsdk.b.a.c,int,java.lang.String,org.json.JSONObject,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    java.util.Map getHeaders() -> getHeaders
com.easemob.redpacketsdk.b.a.c$2 -> com.easemob.redpacketsdk.b.a.c$2:
    com.easemob.redpacketsdk.b.a.c a -> a
    void <init>(com.easemob.redpacketsdk.b.a.c,int,java.lang.String,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    java.util.Map getHeaders() -> getHeaders
com.easemob.redpacketsdk.b.b -> com.easemob.redpacketsdk.b.b:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.c -> com.easemob.redpacketsdk.b.c:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.d -> com.easemob.redpacketsdk.b.d:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.e -> com.easemob.redpacketsdk.b.e:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.f -> com.easemob.redpacketsdk.b.f:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.g -> com.easemob.redpacketsdk.b.g:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.h -> com.easemob.redpacketsdk.b.h:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.i -> com.easemob.redpacketsdk.b.i:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.j -> com.easemob.redpacketsdk.b.j:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.k -> com.easemob.redpacketsdk.b.k:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.l -> com.easemob.redpacketsdk.b.l:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.m -> com.easemob.redpacketsdk.b.m:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.n -> com.easemob.redpacketsdk.b.n:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.o -> com.easemob.redpacketsdk.b.o:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.p -> com.easemob.redpacketsdk.b.p:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.q -> com.easemob.redpacketsdk.b.q:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.r -> com.easemob.redpacketsdk.b.r:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.b.s -> com.easemob.redpacketsdk.b.s:
    void <init>() -> <init>
    void a(org.json.JSONObject) -> a
com.easemob.redpacketsdk.bean.ErrorLogBean -> com.easemob.redpacketsdk.bean.ErrorLogBean:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void <init>() -> <init>
    java.lang.String toString() -> toString
    java.lang.String getTimestamp() -> getTimestamp
    void setTimestamp(java.lang.String) -> setTimestamp
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getErrorMsg() -> getErrorMsg
    void setErrorMsg(java.lang.String) -> setErrorMsg
    void setRequestId(java.lang.String) -> setRequestId
    java.lang.String getRequestId() -> getRequestId
com.easemob.redpacketsdk.bean.PageInfo -> com.easemob.redpacketsdk.bean.PageInfo:
    int offset -> offset
    int length -> length
    int total -> total
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.bean.PageInfo$1 -> com.easemob.redpacketsdk.bean.PageInfo$1:
    void <init>() -> <init>
    com.easemob.redpacketsdk.bean.PageInfo a(android.os.Parcel) -> a
    com.easemob.redpacketsdk.bean.PageInfo[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketsdk.bean.RPUserBean -> com.easemob.redpacketsdk.bean.RPUserBean:
    java.lang.String userId -> userId
    java.lang.String userNickname -> userNickname
    java.lang.String userAvatar -> userAvatar
    java.lang.String sortLetters -> sortLetters
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    void <init>() -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    int compare(com.easemob.redpacketsdk.bean.RPUserBean,com.easemob.redpacketsdk.bean.RPUserBean) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.bean.RPUserBean$1 -> com.easemob.redpacketsdk.bean.RPUserBean$1:
    void <init>() -> <init>
    com.easemob.redpacketsdk.bean.RPUserBean a(android.os.Parcel) -> a
    com.easemob.redpacketsdk.bean.RPUserBean[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketsdk.bean.RedPacketInfo -> com.easemob.redpacketsdk.bean.RedPacketInfo:
    java.lang.String fromUserId -> fromUserId
    java.lang.String toUserId -> toUserId
    java.lang.String fromNickName -> fromNickName
    java.lang.String toNickName -> toNickName
    java.lang.String fromAvatarUrl -> fromAvatarUrl
    java.lang.String toAvatarUrl -> toAvatarUrl
    java.lang.String redPacketAmount -> redPacketAmount
    java.lang.String redPacketGreeting -> redPacketGreeting
    java.lang.String payPwd -> payPwd
    java.lang.String redPacketId -> redPacketId
    java.lang.String date -> date
    java.lang.String totalMoney -> totalMoney
    java.lang.String moneyMessage -> moneyMessage
    int totalCount -> totalCount
    int takenCount -> takenCount
    int status -> status
    java.lang.String tradeNo -> tradeNo
    java.lang.String messageDirect -> messageDirect
    int itemType -> itemType
    java.lang.String toGroupId -> toGroupId
    int chatType -> chatType
    java.lang.String redPacketType -> redPacketType
    int groupMemberCount -> groupMemberCount
    boolean isBest -> isBest
    java.lang.String myAmount -> myAmount
    java.lang.String timeLength -> timeLength
    java.lang.String takenMoney -> takenMoney
    int bestCount -> bestCount
    java.lang.String specialUserId -> specialUserId
    java.lang.String specialNickname -> specialNickname
    java.lang.String specialAvatarUrl -> specialAvatarUrl
    java.lang.String bannerURL1st -> bannerURL1st
    java.lang.String bannerURL2nd -> bannerURL2nd
    java.lang.String bannerURL3rd -> bannerURL3rd
    java.lang.String landingPage -> landingPage
    java.lang.String logoURL -> logoURL
    java.lang.String ownerName -> ownerName
    java.lang.String adBgColor -> adBgColor
    java.lang.String transferTime -> transferTime
    java.lang.String shareMsg -> shareMsg
    java.lang.String shareUrl -> shareUrl
    java.lang.String campaignCode -> campaignCode
    boolean isPlaySound -> isPlaySound
    int recordHeadStatus -> recordHeadStatus
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    void <init>() -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.bean.RedPacketInfo$1 -> com.easemob.redpacketsdk.bean.RedPacketInfo$1:
    void <init>() -> <init>
    com.easemob.redpacketsdk.bean.RedPacketInfo a(android.os.Parcel) -> a
    com.easemob.redpacketsdk.bean.RedPacketInfo[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketsdk.bean.TokenData -> com.easemob.redpacketsdk.bean.TokenData:
    java.lang.String orgName -> orgName
    java.lang.String appName -> appName
    java.lang.String imUserId -> imUserId
    java.lang.String appUserId -> appUserId
    java.lang.String imToken -> imToken
    java.lang.String authPartner -> authPartner
    java.lang.String autoRegister -> autoRegister
    java.lang.String timestamp -> timestamp
    java.lang.String authSign -> authSign
    java.lang.String authMethod -> authMethod
    java.lang.String appId -> appId
    java.lang.String userName -> userName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.bean.TokenData$1 -> com.easemob.redpacketsdk.bean.TokenData$1:
    void <init>() -> <init>
    com.easemob.redpacketsdk.bean.TokenData a(android.os.Parcel) -> a
    com.easemob.redpacketsdk.bean.TokenData[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketsdk.constant.RPConstant -> com.easemob.redpacketsdk.constant.RPConstant:
    java.lang.String EXTRA_CHAT_TYPE -> EXTRA_CHAT_TYPE
    java.lang.String EXTRA_GROUP_MEMBERS -> EXTRA_GROUP_MEMBERS
    java.lang.String EXTRA_GROUP_USER -> EXTRA_GROUP_USER
    java.lang.String EXTRA_GROUP_ID -> EXTRA_GROUP_ID
    java.lang.String EXTRA_TRANSFER_AMOUNT -> EXTRA_TRANSFER_AMOUNT
    java.lang.String MESSAGE_ATTR_IS_TRANSFER_PACKET_MESSAGE -> MESSAGE_ATTR_IS_TRANSFER_PACKET_MESSAGE
    java.lang.String EXTRA_SPONSOR_NAME -> EXTRA_SPONSOR_NAME
    java.lang.String EXTRA_RED_PACKET_GREETING -> EXTRA_RED_PACKET_GREETING
    java.lang.String EXTRA_RED_PACKET_SENDER_ID -> EXTRA_RED_PACKET_SENDER_ID
    java.lang.String EXTRA_RED_PACKET_RECEIVER_ID -> EXTRA_RED_PACKET_RECEIVER_ID
    java.lang.String MESSAGE_ATTR_IS_RED_PACKET_MESSAGE -> MESSAGE_ATTR_IS_RED_PACKET_MESSAGE
    java.lang.String MESSAGE_ATTR_IS_RED_PACKET_ACK_MESSAGE -> MESSAGE_ATTR_IS_RED_PACKET_ACK_MESSAGE
    java.lang.String MESSAGE_ATTR_RED_PACKET_TYPE -> MESSAGE_ATTR_RED_PACKET_TYPE
    java.lang.String MESSAGE_ATTR_SPECIAL_RECEIVER_ID -> MESSAGE_ATTR_SPECIAL_RECEIVER_ID
    java.lang.String EXTRA_RED_PACKET_SENDER_NAME -> EXTRA_RED_PACKET_SENDER_NAME
    java.lang.String EXTRA_RED_PACKET_RECEIVER_NAME -> EXTRA_RED_PACKET_RECEIVER_NAME
    java.lang.String EXTRA_RED_PACKET_ID -> EXTRA_RED_PACKET_ID
    java.lang.String REFRESH_GROUP_RED_PACKET_ACTION -> REFRESH_GROUP_RED_PACKET_ACTION
    java.lang.String EXTRA_RED_PACKET_GROUP_ID -> EXTRA_RED_PACKET_GROUP_ID
    java.lang.String EXTRA_RED_PACKET_TYPE -> EXTRA_RED_PACKET_TYPE
    java.lang.String EXTRA_RED_PACKET_INFO -> EXTRA_RED_PACKET_INFO
    java.lang.String EXTRA_MESSAGE_DIRECT -> EXTRA_MESSAGE_DIRECT
    java.lang.String HEADER_KEY_AUTH_TOKEN -> HEADER_KEY_AUTH_TOKEN
    java.lang.String HEADER_KEY_DEVICE_ID -> HEADER_KEY_DEVICE_ID
    java.lang.String HEADER_KEY_VERSION_CODE -> HEADER_KEY_VERSION_CODE
    java.lang.String HEADER_KEY_REQUEST_ID -> HEADER_KEY_REQUEST_ID
    java.lang.String MESSAGE_DIRECT_SEND -> MESSAGE_DIRECT_SEND
    java.lang.String MESSAGE_DIRECT_RECEIVE -> MESSAGE_DIRECT_RECEIVE
    int CHATTYPE_SINGLE -> CHATTYPE_SINGLE
    int CHATTYPE_GROUP -> CHATTYPE_GROUP
    java.lang.String REQUEST_CODE_SUCCESS -> REQUEST_CODE_SUCCESS
    java.lang.String EXTRA_WEBVIEW_FROM -> EXTRA_WEBVIEW_FROM
    java.lang.String EXTRA_SWITCH_RECORD -> EXTRA_SWITCH_RECORD
    int FROM_QA -> FROM_QA
    int EVENT_REFRESH_DATA -> EVENT_REFRESH_DATA
    int EVENT_LOAD_MORE_DATA -> EVENT_LOAD_MORE_DATA
    java.lang.String GROUP_RED_PACKET_TYPE_RANDOM -> GROUP_RED_PACKET_TYPE_RANDOM
    java.lang.String GROUP_RED_PACKET_TYPE_AVERAGE -> GROUP_RED_PACKET_TYPE_AVERAGE
    java.lang.String GROUP_RED_PACKET_TYPE_EXCLUSIVE -> GROUP_RED_PACKET_TYPE_EXCLUSIVE
    java.lang.String GROUP_RED_PACKET_TYPE_PRI -> GROUP_RED_PACKET_TYPE_PRI
    java.lang.String GROUP_RED_PACKET_TYPE -> GROUP_RED_PACKET_TYPE
    java.lang.String AD_RED_PACKET_TYPE -> AD_RED_PACKET_TYPE
    java.lang.String RED_PACKET_TYPE_RANDOM -> RED_PACKET_TYPE_RANDOM
    java.lang.String EM_META_KEY -> EM_META_KEY
    int RECORD_TAG_SEND -> RECORD_TAG_SEND
    int RECORD_TAG_RECEIVED -> RECORD_TAG_RECEIVED
    int PAY_STATUS_OTHER_ERROR -> PAY_STATUS_OTHER_ERROR
    int PAY_STATUS_ALI_AUTHORIZED -> PAY_STATUS_ALI_AUTHORIZED
    int PAY_STATUS_CHECK_ALI_ORDER_ERROR -> PAY_STATUS_CHECK_ALI_ORDER_ERROR
    int PAY_STATUS_ALI_PAY_FAIL -> PAY_STATUS_ALI_PAY_FAIL
    int PAY_STATUS_ALI_PAY_CANCEL -> PAY_STATUS_ALI_PAY_CANCEL
    int PAY_STATUS_ALI_AUTH_SUCCESS -> PAY_STATUS_ALI_AUTH_SUCCESS
    int PAY_STATUS_AD_SHARE_SUCCESS -> PAY_STATUS_AD_SHARE_SUCCESS
    int PAY_STATUS_UNBIND_ALI_ACCOUNT -> PAY_STATUS_UNBIND_ALI_ACCOUNT
    java.lang.String ALI_NO_AUTHORIZED -> ALI_NO_AUTHORIZED
    java.lang.String TIMEOUT_ERROR_CODE -> TIMEOUT_ERROR_CODE
    java.lang.String AUTH_METHOD_EASEMOB -> AUTH_METHOD_EASEMOB
    java.lang.String AUTH_METHOD_SIGN -> AUTH_METHOD_SIGN
    java.lang.String AUTH_METHOD_YTX -> AUTH_METHOD_YTX
    java.lang.String STATISTICS_TYPE_AD_OPEN -> STATISTICS_TYPE_AD_OPEN
    java.lang.String STATISTICS_TYPE_VIEW_AD -> STATISTICS_TYPE_VIEW_AD
    java.lang.String STATISTICS_TYPE_CLICK_AD -> STATISTICS_TYPE_CLICK_AD
    int RP_ITEM_TYPE_SINGLE -> RP_ITEM_TYPE_SINGLE
    int RP_ITEM_TYPE_GROUP -> RP_ITEM_TYPE_GROUP
    int RP_ITEM_TYPE_RANDOM -> RP_ITEM_TYPE_RANDOM
    java.lang.String RP_TIP_DIALOG_TAG -> RP_TIP_DIALOG_TAG
    java.lang.String RP_PACKET_DIALOG_TAG -> RP_PACKET_DIALOG_TAG
    java.lang.String RP_AD_PACKET_OUT -> RP_AD_PACKET_OUT
    void <init>() -> <init>
com.easemob.redpacketsdk.contract.ADPacketContract -> com.easemob.redpacketsdk.contract.ADPacketContract:
com.easemob.redpacketsdk.contract.ADPacketContract$Presenter -> com.easemob.redpacketsdk.contract.ADPacketContract$Presenter:
    void receiveADPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> receiveADPacket
    void getADPacketDetail(java.lang.String) -> getADPacketDetail
    void sendADStatistics(java.lang.String,java.lang.String) -> sendADStatistics
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
com.easemob.redpacketsdk.contract.ADPacketContract$View -> com.easemob.redpacketsdk.contract.ADPacketContract$View:
    void showADPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showADPacketDetail
    void onDetailError(java.lang.String,java.lang.String) -> onDetailError
    void onReceivePacketSuccess(java.lang.String,java.lang.String,java.lang.String) -> onReceivePacketSuccess
    void showAuthDialog() -> showAuthDialog
    void onReceiveError(java.lang.String,java.lang.String) -> onReceiveError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(java.lang.String,java.lang.String) -> onUploadAuthInfoError
com.easemob.redpacketsdk.contract.AliSendPacketContract -> com.easemob.redpacketsdk.contract.AliSendPacketContract:
com.easemob.redpacketsdk.contract.AliSendPacketContract$Presenter -> com.easemob.redpacketsdk.contract.AliSendPacketContract$Presenter:
    void generatePacketId() -> generatePacketId
    void getOrderInfo(java.lang.String) -> getOrderInfo
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void verifyAliPayOrder(java.lang.String) -> verifyAliPayOrder
    void sendRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> sendRedPacket
    void sendStatistics() -> sendStatistics
com.easemob.redpacketsdk.contract.AliSendPacketContract$View -> com.easemob.redpacketsdk.contract.AliSendPacketContract$View:
    void onGeneratePacketIdSuccess(java.lang.String) -> onGeneratePacketIdSuccess
    void onGeneratePacketIdError(int,java.lang.String) -> onGeneratePacketIdError
    void toAliPay(java.lang.String,java.lang.String) -> toAliPay
    void showAuthDialog() -> showAuthDialog
    void onOrderError(int,java.lang.String) -> onOrderError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onVerifyAliPayOrderSuccess() -> onVerifyAliPayOrderSuccess
    void onVerifyAliPayOrderError(int,java.lang.String) -> onVerifyAliPayOrderError
    void sendPacketToChat(java.lang.String) -> sendPacketToChat
    void sendPacketError(int,java.lang.String) -> sendPacketError
com.easemob.redpacketsdk.contract.AuthTokenContract -> com.easemob.redpacketsdk.contract.AuthTokenContract:
com.easemob.redpacketsdk.contract.AuthTokenContract$Presenter -> com.easemob.redpacketsdk.contract.AuthTokenContract$Presenter:
    void initAuthToken(com.easemob.redpacketsdk.bean.TokenData) -> initAuthToken
com.easemob.redpacketsdk.contract.AuthTokenContract$View -> com.easemob.redpacketsdk.contract.AuthTokenContract$View:
    void onAuthTokenSuccess(java.lang.String) -> onAuthTokenSuccess
    void onAuthTokenError(java.lang.String,java.lang.String) -> onAuthTokenError
com.easemob.redpacketsdk.contract.CheckPacketStatusContract -> com.easemob.redpacketsdk.contract.CheckPacketStatusContract:
com.easemob.redpacketsdk.contract.CheckPacketStatusContract$Presenter -> com.easemob.redpacketsdk.contract.CheckPacketStatusContract$Presenter:
    void checkRedPacketStatus(java.lang.String) -> checkRedPacketStatus
com.easemob.redpacketsdk.contract.CheckPacketStatusContract$View -> com.easemob.redpacketsdk.contract.CheckPacketStatusContract$View:
    void onCheckStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onCheckStatusSuccess
    void onCheckStatusError(java.lang.String,java.lang.String) -> onCheckStatusError
com.easemob.redpacketsdk.contract.LogContract -> com.easemob.redpacketsdk.contract.LogContract:
com.easemob.redpacketsdk.contract.LogContract$Presenter -> com.easemob.redpacketsdk.contract.LogContract$Presenter:
    void uploadLog(java.lang.String) -> uploadLog
com.easemob.redpacketsdk.contract.OpenPacketContract -> com.easemob.redpacketsdk.contract.OpenPacketContract:
com.easemob.redpacketsdk.contract.OpenPacketContract$Presenter -> com.easemob.redpacketsdk.contract.OpenPacketContract$Presenter:
    void openRedPacket(java.lang.String,int,int) -> openRedPacket
com.easemob.redpacketsdk.contract.OpenPacketContract$View -> com.easemob.redpacketsdk.contract.OpenPacketContract$View:
    void openPacketDialog(com.easemob.redpacketsdk.bean.RedPacketInfo,java.lang.String) -> openPacketDialog
    void showPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showPacketDetail
    void onOpenPacketError(java.lang.String,java.lang.String) -> onOpenPacketError
    void showRandomDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showRandomDetail
com.easemob.redpacketsdk.contract.RPDetailContract -> com.easemob.redpacketsdk.contract.RPDetailContract:
com.easemob.redpacketsdk.contract.RPDetailContract$Presenter -> com.easemob.redpacketsdk.contract.RPDetailContract$Presenter:
    void getPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo,int,int) -> getPacketDetail
com.easemob.redpacketsdk.contract.RPDetailContract$View -> com.easemob.redpacketsdk.contract.RPDetailContract$View:
    void showSinglePacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showSinglePacketDetail
    void showGroupPacketDetail(java.util.HashMap,java.lang.String,java.lang.String,java.lang.String) -> showGroupPacketDetail
    void showDetailError(java.lang.String,java.lang.String) -> showDetailError
com.easemob.redpacketsdk.contract.RPRecordContract -> com.easemob.redpacketsdk.contract.RPRecordContract:
com.easemob.redpacketsdk.contract.RPRecordContract$Presenter -> com.easemob.redpacketsdk.contract.RPRecordContract$Presenter:
    void getAliUserInfo() -> getAliUserInfo
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void getRecordList(int,int,int) -> getRecordList
    void unBindAliUser() -> unBindAliUser
com.easemob.redpacketsdk.contract.RPRecordContract$View -> com.easemob.redpacketsdk.contract.RPRecordContract$View:
    void showAliUserInfo(java.lang.String) -> showAliUserInfo
    void onAliUserInfoError(int,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void refreshListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketsdk.bean.PageInfo) -> refreshListData
    void addMoreListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.PageInfo) -> addMoreListData
    void onLoadError(java.lang.String,java.lang.String) -> onLoadError
    void unBindAliSuccess() -> unBindAliSuccess
    void unBindAliError(int,java.lang.String) -> unBindAliError
com.easemob.redpacketsdk.contract.RPTokenContract -> com.easemob.redpacketsdk.contract.RPTokenContract:
com.easemob.redpacketsdk.contract.RPTokenContract$Presenter -> com.easemob.redpacketsdk.contract.RPTokenContract$Presenter:
    void initRPToken(com.easemob.redpacketsdk.bean.TokenData) -> initRPToken
com.easemob.redpacketsdk.contract.RPTokenContract$View -> com.easemob.redpacketsdk.contract.RPTokenContract$View:
    void onTokenSuccess(java.lang.String) -> onTokenSuccess
    void onTokenError(java.lang.String,java.lang.String) -> onTokenError
com.easemob.redpacketsdk.contract.SettingContract -> com.easemob.redpacketsdk.contract.SettingContract:
com.easemob.redpacketsdk.contract.SettingContract$Presenter -> com.easemob.redpacketsdk.contract.SettingContract$Presenter:
    void initSetting() -> initSetting
com.easemob.redpacketsdk.contract.SettingContract$View -> com.easemob.redpacketsdk.contract.SettingContract$View:
    void onSettingSuccess() -> onSettingSuccess
    void onSettingError(java.lang.String,java.lang.String) -> onSettingError
com.easemob.redpacketsdk.contract.UnfoldPacketContract -> com.easemob.redpacketsdk.contract.UnfoldPacketContract:
com.easemob.redpacketsdk.contract.UnfoldPacketContract$Presenter -> com.easemob.redpacketsdk.contract.UnfoldPacketContract$Presenter:
    void unfoldRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> unfoldRedPacket
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
com.easemob.redpacketsdk.contract.UnfoldPacketContract$View -> com.easemob.redpacketsdk.contract.UnfoldPacketContract$View:
    void showRedPacketDetail(java.lang.String,java.lang.String) -> showRedPacketDetail
    void showRandomPacketOut() -> showRandomPacketOut
    void showAveragePacketOut() -> showAveragePacketOut
    void showAuthDialog() -> showAuthDialog
    void onUnfoldPacketError(java.lang.String,java.lang.String) -> onUnfoldPacketError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
com.easemob.redpacketsdk.presenter.BasePresenter -> com.easemob.redpacketsdk.presenter.BasePresenter:
    java.lang.Object mView -> mView
    void <init>() -> <init>
    void attach(java.lang.Object) -> attach
    void onResume() -> onResume
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.IBasePresenter -> com.easemob.redpacketsdk.presenter.IBasePresenter:
    void attach(java.lang.Object) -> attach
    void onResume() -> onResume
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter -> com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter:
    com.easemob.redpacketsdk.a.a.a mADPacketModel -> mADPacketModel
    void <init>() -> <init>
    void receiveADPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> receiveADPacket
    void getADPacketDetail(java.lang.String) -> getADPacketDetail
    void sendADStatistics(java.lang.String,java.lang.String) -> sendADStatistics
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void onDetailSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onDetailSuccess
    void onDetailError(java.lang.String,java.lang.String) -> onDetailError
    void onReceiveSuccess(java.util.Map) -> onReceiveSuccess
    void onReceiveError(java.lang.String,java.lang.String) -> onReceiveError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.AliSendPacketPresenter -> com.easemob.redpacketsdk.presenter.impl.AliSendPacketPresenter:
    com.easemob.redpacketsdk.a.a.b mAliSendPacketModel -> mAliSendPacketModel
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> mRedPacketInfo
    void <init>() -> <init>
    void generatePacketId() -> generatePacketId
    void getOrderInfo(java.lang.String) -> getOrderInfo
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void verifyAliPayOrder(java.lang.String) -> verifyAliPayOrder
    void sendRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> sendRedPacket
    void sendStatistics() -> sendStatistics
    void onOrderInfoSuccess(java.lang.String,java.lang.String) -> onOrderInfoSuccess
    void onOrderInfoError(java.lang.String,java.lang.String) -> onOrderInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void onVerifyAliPaySuccess(int) -> onVerifyAliPaySuccess
    void onVerifyAliPayError(java.lang.String,java.lang.String) -> onVerifyAliPayError
    void onGenerateIdSuccess(java.lang.String) -> onGenerateIdSuccess
    void onGenerateIdError(java.lang.String,java.lang.String) -> onGenerateIdError
    void onSendPacketSuccess(java.lang.String) -> onSendPacketSuccess
    void onSendPacketError(java.lang.String,java.lang.String) -> onSendPacketError
    void onStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onStatusSuccess
    void onStatusError(java.lang.String,java.lang.String) -> onStatusError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter -> com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter:
    com.easemob.redpacketsdk.a.a.c mStatusModel -> mStatusModel
    void <init>() -> <init>
    void checkRedPacketStatus(java.lang.String) -> checkRedPacketStatus
    void onCheckStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onCheckStatusSuccess
    void onCheckStatusError(java.lang.String,java.lang.String) -> onCheckStatusError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.LogPresenter -> com.easemob.redpacketsdk.presenter.impl.LogPresenter:
    com.easemob.redpacketsdk.a.a.d mLogModel -> mLogModel
    void <init>() -> <init>
    void uploadLog(java.lang.String) -> uploadLog
    void onLogSuccess(java.lang.String) -> onLogSuccess
    void onLogError(java.lang.String,java.lang.String) -> onLogError
com.easemob.redpacketsdk.presenter.impl.OpenPacketPresenter -> com.easemob.redpacketsdk.presenter.impl.OpenPacketPresenter:
    com.easemob.redpacketsdk.a.a.e mPacketDetailModel -> mPacketDetailModel
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> mRedPacketInfo
    void <init>(com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void openRedPacket(java.lang.String,int,int) -> openRedPacket
    void onPacketDetailSuccess(java.util.HashMap) -> onPacketDetailSuccess
    void onPacketDetailError(java.lang.String,java.lang.String) -> onPacketDetailError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.PacketDetailPresenter -> com.easemob.redpacketsdk.presenter.impl.PacketDetailPresenter:
    com.easemob.redpacketsdk.a.a.e mPacketDetailModel -> mPacketDetailModel
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> mRedPacketInfo
    void <init>() -> <init>
    void getPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo,int,int) -> getPacketDetail
    void onPacketDetailSuccess(java.util.HashMap) -> onPacketDetailSuccess
    void onPacketDetailError(java.lang.String,java.lang.String) -> onPacketDetailError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter -> com.easemob.redpacketsdk.presenter.impl.RPAuthTokenPresenter:
    com.easemob.redpacketsdk.a.a.f mAuthTokenModel -> mAuthTokenModel
    void <init>() -> <init>
    void initAuthToken(com.easemob.redpacketsdk.bean.TokenData) -> initAuthToken
    void onAuthTokenSuccess(java.lang.String) -> onAuthTokenSuccess
    void onAuthTokenError(java.lang.String,java.lang.String) -> onAuthTokenError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.RPRecordPresenter -> com.easemob.redpacketsdk.presenter.impl.RPRecordPresenter:
    com.easemob.redpacketsdk.a.a.g mRecordModel -> mRecordModel
    int mEventTag -> mEventTag
    void <init>(int) -> <init>
    void getAliUserInfo() -> getAliUserInfo
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void getRecordList(int,int,int) -> getRecordList
    void unBindAliUser() -> unBindAliUser
    void onAliUserInfoSuccess(java.lang.String) -> onAliUserInfoSuccess
    void onAliUserInfoError(java.lang.String,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void onRecordListSuccess(java.util.Map) -> onRecordListSuccess
    void onRecordListError(java.lang.String,java.lang.String) -> onRecordListError
    void onUnbindAliSuccess() -> onUnbindAliSuccess
    void onUnbindAliError(java.lang.String,java.lang.String) -> onUnbindAliError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.RPTokenPresenter -> com.easemob.redpacketsdk.presenter.impl.RPTokenPresenter:
    com.easemob.redpacketsdk.a.a.i mRPTokenModel -> mRPTokenModel
    void <init>() -> <init>
    void initRPToken(com.easemob.redpacketsdk.bean.TokenData) -> initRPToken
    void onRPTokenSuccess(java.lang.String) -> onRPTokenSuccess
    void onRPTokenError(java.lang.String,java.lang.String) -> onRPTokenError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.SettingPresenter -> com.easemob.redpacketsdk.presenter.impl.SettingPresenter:
    com.easemob.redpacketsdk.a.a.h mSettingModel -> mSettingModel
    void <init>() -> <init>
    void initSetting() -> initSetting
    void onSettingSuccess(java.lang.String[]) -> onSettingSuccess
    void onSettingError(java.lang.String,java.lang.String) -> onSettingError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.presenter.impl.UnfoldPacketPresenter -> com.easemob.redpacketsdk.presenter.impl.UnfoldPacketPresenter:
    com.easemob.redpacketsdk.a.a.j mUnfoldPacketModel -> mUnfoldPacketModel
    java.lang.String mRedPacketType -> mRedPacketType
    void <init>() -> <init>
    void unfoldRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo) -> unfoldRedPacket
    void getAuthInfo() -> getAuthInfo
    void uploadAuthInfo(java.lang.String,java.lang.String) -> uploadAuthInfo
    void onUnfoldSuccess(java.util.Map) -> onUnfoldSuccess
    void onUnfoldError(java.lang.String,java.lang.String) -> onUnfoldError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthSuccess() -> onUploadAuthSuccess
    void onUploadAuthError(java.lang.String,java.lang.String) -> onUploadAuthError
    void detach(boolean) -> detach
com.easemob.redpacketsdk.utils.FileUtil -> com.easemob.redpacketsdk.utils.FileUtil:
    android.content.Context a -> a
    com.easemob.redpacketsdk.utils.FileUtil b -> b
    java.lang.String c -> c
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> init
    com.easemob.redpacketsdk.utils.FileUtil getInstance() -> getInstance
    boolean isExistSdCard() -> isExistSdCard
    java.lang.String getExternalPath() -> getExternalPath
    boolean writeObjectToFile(java.lang.Object) -> writeObjectToFile
    java.util.ArrayList getFileToArray() -> getFileToArray
    void deleteFile() -> deleteFile
    boolean isExistFile() -> isExistFile
    boolean checkUpload(long) -> checkUpload
    void uploadLog() -> uploadLog
    int getFileItemCount() -> getFileItemCount
    long getDifferenceTime(long) -> getDifferenceTime
    org.json.JSONObject createJsonObject(com.easemob.redpacketsdk.bean.ErrorLogBean) -> createJsonObject
    com.easemob.redpacketsdk.bean.ErrorLogBean createObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createObject
    java.lang.String createImageName() -> createImageName
    java.io.File getImagePath() -> getImagePath
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.utils.RPPreferenceManager -> com.easemob.redpacketsdk.utils.RPPreferenceManager:
    java.lang.String PREFERENCE_NAME -> PREFERENCE_NAME
    android.content.SharedPreferences a -> a
    com.easemob.redpacketsdk.utils.RPPreferenceManager b -> b
    android.content.SharedPreferences$Editor c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> init
    com.easemob.redpacketsdk.utils.RPPreferenceManager getInstance() -> getInstance
    void setRPToken(java.lang.String) -> setRPToken
    java.lang.String getRPToken() -> getRPToken
    void setOpenUrl(java.lang.String) -> setOpenUrl
    java.lang.String getOpenUrl() -> getOpenUrl
    void setBgUrl(java.lang.String) -> setBgUrl
    java.lang.String getBgUrl() -> getBgUrl
    void setDeviceId(java.lang.String) -> setDeviceId
    java.lang.String getDeviceId() -> getDeviceId
    void setLimit(java.lang.String) -> setLimit
    java.lang.String getLimit() -> getLimit
    void setCreateFileTime(long) -> setCreateFileTime
    long getCreateFileTime() -> getCreateFileTime
    void setFileLength(int) -> setFileLength
    int getFileLength() -> getFileLength
    void setAppUserId(java.lang.String) -> setAppUserId
    java.lang.String getAppUserId() -> getAppUserId
    void setRecentPayType(int) -> setRecentPayType
    int getRecentPayType() -> getRecentPayType
    void setTokenExpiresTime(long) -> setTokenExpiresTime
    long getTokenExpiresTime() -> getTokenExpiresTime
    void setSHA256(boolean) -> setSHA256
    boolean getSHA256() -> getSHA256
    void setGreetings(java.lang.String) -> setGreetings
    java.lang.String[] getGreetings() -> getGreetings
    void setOwnerName(java.lang.String) -> setOwnerName
    java.lang.String getOwnerName() -> getOwnerName
    void setMinLimit(java.lang.String) -> setMinLimit
    java.lang.String getMinLimit() -> getMinLimit
    void setSettingExpiresTime(long) -> setSettingExpiresTime
    long getSettingExpiresTime() -> getSettingExpiresTime
    void setMaxWithdrawMoney(java.lang.String) -> setMaxWithdrawMoney
    java.lang.String getMaxWithdrawMoney() -> getMaxWithdrawMoney
    void setMinWithdrawMoney(java.lang.String) -> setMinWithdrawMoney
    java.lang.String getMinWithdrawMoney() -> getMinWithdrawMoney
    void setJDMaxChargeMoney(java.lang.String) -> setJDMaxChargeMoney
    java.lang.String getJDMaxChargeMoney() -> getJDMaxChargeMoney
    void setMaxPacketCount(int) -> setMaxPacketCount
    int getMaxPacketCount() -> getMaxPacketCount
    void setAuthMethod(java.lang.String) -> setAuthMethod
    java.lang.String getAuthMethod() -> getAuthMethod
    void setMinTransferMoney(java.lang.String) -> setMinTransferMoney
    void setMaxTransferMoney(java.lang.String) -> setMaxTransferMoney
    void setInsuranceDes(java.lang.String) -> setInsuranceDes
    java.lang.String getInsuranceDes() -> getInsuranceDes
    void setAliAccount(java.lang.String) -> setAliAccount
    java.lang.String getAliAccount() -> getAliAccount
    void clearCache() -> clearCache
    void setRandomGreeting(java.lang.String) -> setRandomGreeting
    java.util.ArrayList getRandomGreeting() -> getRandomGreeting
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.utils.RequestUtil -> com.easemob.redpacketsdk.utils.RequestUtil:
    com.easemob.redpacketsdk.utils.RequestUtil a -> a
    com.easemob.redpacketsdk.utils.RequestUtil getInstance() -> getInstance
    void <init>() -> <init>
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.HashMap getRequestHeader() -> getRequestHeader
    com.easemob.redpacketsdk.bean.TokenData getTokenData() -> getTokenData
    java.lang.String getRequestId() -> getRequestId
com.easemob.redpacketsdk.utils.a -> com.easemob.redpacketsdk.utils.a:
    com.easemob.redpacketsdk.utils.a a -> a
    com.easemob.redpacketsdk.utils.a a() -> a
    void <init>() -> <init>
    android.content.pm.ApplicationInfo d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
com.easemob.redpacketsdk.utils.b -> com.easemob.redpacketsdk.utils.b:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void <clinit>() -> <clinit>
com.easemob.redpacketsdk.utils.c -> com.easemob.redpacketsdk.utils.c:
    com.easemob.redpacketsdk.utils.c a -> a
    void <init>() -> <init>
    com.easemob.redpacketsdk.utils.c a() -> a
    java.lang.String a(java.lang.String,java.lang.String,int,int) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.util.HashMap a(com.easemob.redpacketsdk.bean.TokenData) -> a
    java.util.HashMap b(com.easemob.redpacketsdk.bean.TokenData) -> b
    void <clinit>() -> <clinit>
com.easemob.redpacketui.AppManager -> com.easemob.redpacketui.a:
    java.lang.String TAG -> a
    com.easemob.redpacketui.AppManager instance -> b
    java.util.List mActivities -> c
    void <init>() -> <init>
    com.easemob.redpacketui.AppManager getInstance() -> a
    void addActivity(android.app.Activity) -> a
    void removeActivity(android.app.Activity) -> b
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R -> com.easemob.redpacketui.R:
    void <init>() -> <init>
com.easemob.redpacketui.R$array -> com.easemob.redpacketui.R$array:
    int ConstAmount -> ConstAmount
    int ConstGreetings -> ConstGreetings
    int greetings -> greetings
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$attr -> com.easemob.redpacketui.R$attr:
    int RPCardBgColor -> RPCardBgColor
    int RPCardBgImg -> RPCardBgImg
    int RPCardBgType -> RPCardBgType
    int RPCardRadius -> RPCardRadius
    int RPlayoutManager -> RPlayoutManager
    int RPleftImage -> RPleftImage
    int RPmytitle -> RPmytitle
    int RPreverseLayout -> RPreverseLayout
    int RPrightImage -> RPrightImage
    int RPrightText -> RPrightText
    int RPrightTextColor -> RPrightTextColor
    int RPrightTextSize -> RPrightTextSize
    int RPspanCount -> RPspanCount
    int RPstackFromEnd -> RPstackFromEnd
    int RPsubTitleText -> RPsubTitleText
    int RPsubTitleTextColor -> RPsubTitleTextColor
    int RPsubTitleTextSize -> RPsubTitleTextSize
    int RPtitleBackground -> RPtitleBackground
    int RPtitleTextColor -> RPtitleTextColor
    int RPtitleTextSize -> RPtitleTextSize
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$color -> com.easemob.redpacketui.R$color:
    int rp_background_white -> rp_background_white
    int rp_best_luck_yellow -> rp_best_luck_yellow
    int rp_bg_light_grey -> rp_bg_light_grey
    int rp_button_blue -> rp_button_blue
    int rp_check_blue -> rp_check_blue
    int rp_divider_color -> rp_divider_color
    int rp_half_transparent -> rp_half_transparent
    int rp_light_blue -> rp_light_blue
    int rp_money_bg_color -> rp_money_bg_color
    int rp_money_red_light -> rp_money_red_light
    int rp_money_white -> rp_money_white
    int rp_msg_red -> rp_msg_red
    int rp_primary_dark -> rp_primary_dark
    int rp_switch_packet_red -> rp_switch_packet_red
    int rp_text_all_black -> rp_text_all_black
    int rp_text_black -> rp_text_black
    int rp_text_blue -> rp_text_blue
    int rp_text_dark_grey -> rp_text_dark_grey
    int rp_text_grey -> rp_text_grey
    int rp_text_light_black -> rp_text_light_black
    int rp_text_light_grey -> rp_text_light_grey
    int rp_text_red_color -> rp_text_red_color
    int rp_text_transparent_black -> rp_text_transparent_black
    int rp_text_unselected -> rp_text_unselected
    int rp_text_yellow -> rp_text_yellow
    int rp_title_color -> rp_title_color
    int rp_title_red -> rp_title_red
    int rp_title_transparent_color -> rp_title_transparent_color
    int rp_top_red_color -> rp_top_red_color
    int rp_transparent_red_color -> rp_transparent_red_color
    int rp_tv_red_selector -> rp_tv_red_selector
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$dimen -> com.easemob.redpacketui.R$dimen:
    int dialogHeight -> dialogHeight
    int dialogWidth -> dialogWidth
    int font105px -> font105px
    int font108px -> font108px
    int font129px -> font129px
    int font132px -> font132px
    int font33px -> font33px
    int font36px -> font36px
    int font39px -> font39px
    int font42px -> font42px
    int font45px -> font45px
    int font48px -> font48px
    int font51px -> font51px
    int font54px -> font54px
    int font63px -> font63px
    int font69px -> font69px
    int font78px -> font78px
    int font90px -> font90px
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int size102px -> size102px
    int size105px -> size105px
    int size108px -> size108px
    int size114px -> size114px
    int size117px -> size117px
    int size120px -> size120px
    int size129px -> size129px
    int size12px -> size12px
    int size132px -> size132px
    int size135px -> size135px
    int size138px -> size138px
    int size141px -> size141px
    int size144px -> size144px
    int size15px -> size15px
    int size165px -> size165px
    int size174px -> size174px
    int size180px -> size180px
    int size186px -> size186px
    int size18px -> size18px
    int size192px -> size192px
    int size198px -> size198px
    int size201px -> size201px
    int size204px -> size204px
    int size210px -> size210px
    int size216px -> size216px
    int size21px -> size21px
    int size225px -> size225px
    int size24px -> size24px
    int size27px -> size27px
    int size303px -> size303px
    int size30px -> size30px
    int size36px -> size36px
    int size39px -> size39px
    int size42px -> size42px
    int size45px -> size45px
    int size48px -> size48px
    int size51px -> size51px
    int size54px -> size54px
    int size57px -> size57px
    int size60px -> size60px
    int size63px -> size63px
    int size66px -> size66px
    int size69px -> size69px
    int size72px -> size72px
    int size75px -> size75px
    int size81px -> size81px
    int size84px -> size84px
    int size90px -> size90px
    int size93px -> size93px
    int size96px -> size96px
    int size99px -> size99px
    int size9px -> size9px
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$drawable -> com.easemob.redpacketui.R$drawable:
    int rp_ad_share -> rp_ad_share
    int rp_ad_success -> rp_ad_success
    int rp_arrow_forward -> rp_arrow_forward
    int rp_arrow_forward_blue -> rp_arrow_forward_blue
    int rp_avatar -> rp_avatar
    int rp_back_arrow_yellow -> rp_back_arrow_yellow
    int rp_bg_circular_yellow -> rp_bg_circular_yellow
    int rp_btn_ad_selector -> rp_btn_ad_selector
    int rp_btn_cancel_shape -> rp_btn_cancel_shape
    int rp_btn_open_normal_shape -> rp_btn_open_normal_shape
    int rp_btn_open_normal_shape_unsolid -> rp_btn_open_normal_shape_unsolid
    int rp_btn_open_pressed_shape -> rp_btn_open_pressed_shape
    int rp_btn_open_pressed_shape_unsolid -> rp_btn_open_pressed_shape_unsolid
    int rp_btn_open_selector -> rp_btn_open_selector
    int rp_btn_open_selector_unsolid -> rp_btn_open_selector_unsolid
    int rp_btn_red_enable_shape -> rp_btn_red_enable_shape
    int rp_btn_red_no_enable_shape -> rp_btn_red_no_enable_shape
    int rp_btn_red_pressed_shape -> rp_btn_red_pressed_shape
    int rp_btn_red_selector -> rp_btn_red_selector
    int rp_btn_retry_normal_shape -> rp_btn_retry_normal_shape
    int rp_closed_icon -> rp_closed_icon
    int rp_closed_yellow_icon -> rp_closed_yellow_icon
    int rp_error_page_icon -> rp_error_page_icon
    int rp_exclusive_avatar -> rp_exclusive_avatar
    int rp_exclusive_icon -> rp_exclusive_icon
    int rp_exclusive_sender_avatar_bg -> rp_exclusive_sender_avatar_bg
    int rp_group_everyone -> rp_group_everyone
    int rp_icon_best -> rp_icon_best
    int rp_load_dark -> rp_load_dark
    int rp_loading_anim -> rp_loading_anim
    int rp_loading_bg -> rp_loading_bg
    int rp_open_packet_bg -> rp_open_packet_bg
    int rp_packet_detail_bg -> rp_packet_detail_bg
    int rp_packet_group_detail_bg -> rp_packet_group_detail_bg
    int rp_pop_bg -> rp_pop_bg
    int rp_question_yellow -> rp_question_yellow
    int rp_random_icon -> rp_random_icon
    int rp_refresh -> rp_refresh
    int rp_shape_white_conner -> rp_shape_white_conner
    int rp_sidebar_background -> rp_sidebar_background
    int rp_small_random_bg -> rp_small_random_bg
    int rp_small_random_switch -> rp_small_random_switch
    int rp_stroke_red_normal_shape -> rp_stroke_red_normal_shape
    int rp_stroke_red_pressed_shape -> rp_stroke_red_pressed_shape
    int rp_stroke_red_selector -> rp_stroke_red_selector
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$id -> com.easemob.redpacketui.R$id:
    int ad_ll_extra -> ad_ll_extra
    int btn_bind_ali_account -> btn_bind_ali_account
    int btn_cancel -> btn_cancel
    int btn_click_received -> btn_click_received
    int btn_exclusive_open_money -> btn_exclusive_open_money
    int btn_group_put_money -> btn_group_put_money
    int btn_layout -> btn_layout
    int btn_ok -> btn_ok
    int btn_open_money -> btn_open_money
    int btn_random -> btn_random
    int btn_single_put_money -> btn_single_put_money
    int contact_dialog -> contact_dialog
    int contact_member -> contact_member
    int contact_sidebar -> contact_sidebar
    int detail_fragment_container -> detail_fragment_container
    int detail_loading_target -> detail_loading_target
    int dialog_hint_divider -> dialog_hint_divider
    int et_greetings -> et_greetings
    int et_money_amount -> et_money_amount
    int et_money_count -> et_money_count
    int greeting_layout -> greeting_layout
    int group_main -> group_main
    int group_progressBar -> group_progressBar
    int head_item_image -> head_item_image
    int head_item_name -> head_item_name
    int item_image -> item_image
    int item_line -> item_line
    int item_name -> item_name
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int iv_advert_bg -> iv_advert_bg
    int iv_advert_icon -> iv_advert_icon
    int iv_arrow -> iv_arrow
    int iv_avatar -> iv_avatar
    int iv_detail_bg -> iv_detail_bg
    int iv_group_random -> iv_group_random
    int iv_item_avatar_icon -> iv_item_avatar_icon
    int iv_open_bg -> iv_open_bg
    int iv_random_avatar -> iv_random_avatar
    int iv_random_detail_avatar -> iv_random_detail_avatar
    int iv_random_detail_from_icon -> iv_random_detail_from_icon
    int iv_random_icon -> iv_random_icon
    int iv_receive_avatar -> iv_receive_avatar
    int iv_record_avatar_icon -> iv_record_avatar_icon
    int iv_send_avatar -> iv_send_avatar
    int iv_unbind_ali_account -> iv_unbind_ali_account
    int layout_ad_bottom -> layout_ad_bottom
    int layout_avatar -> layout_avatar
    int layout_best -> layout_best
    int layout_closed -> layout_closed
    int layout_error_retry -> layout_error_retry
    int layout_exclusive_avatar -> layout_exclusive_avatar
    int layout_exclusive_closed -> layout_exclusive_closed
    int layout_group_member -> layout_group_member
    int layout_group_member_head -> layout_group_member_head
    int layout_item -> layout_item
    int layout_members -> layout_members
    int layout_random_avatar -> layout_random_avatar
    int layout_random_detail_avatar -> layout_random_detail_avatar
    int layout_receive -> layout_receive
    int layout_top -> layout_top
    int left_image -> left_image
    int left_layout -> left_layout
    int ll_bind_ali -> ll_bind_ali
    int ll_random_detail -> ll_random_detail
    int ll_random_detail_switch -> ll_random_detail_switch
    int ll_random_loading -> ll_random_loading
    int ll_random_title -> ll_random_title
    int ll_show_ali -> ll_show_ali
    int money_amount_layout -> money_amount_layout
    int money_detail_list -> money_detail_list
    int money_fragment_container -> money_fragment_container
    int money_layout -> money_layout
    int pop_layout -> pop_layout
    int progressBar1 -> progressBar1
    int record_fragment_container -> record_fragment_container
    int record_list -> record_list
    int right_image -> right_image
    int right_layout -> right_layout
    int right_text -> right_text
    int right_text_layout -> right_text_layout
    int rl_random_closed -> rl_random_closed
    int rl_random_detail_closed -> rl_random_detail_closed
    int root -> root
    int status_layout -> status_layout
    int subtitle -> subtitle
    int target_layout -> target_layout
    int title -> title
    int title_bar -> title_bar
    int tv_ad_hint -> tv_ad_hint
    int tv_ad_money -> tv_ad_money
    int tv_ad_receive_greeting -> tv_ad_receive_greeting
    int tv_ad_sponsor_name -> tv_ad_sponsor_name
    int tv_ali_account_hint -> tv_ali_account_hint
    int tv_ali_account_name -> tv_ali_account_name
    int tv_best_count -> tv_best_count
    int tv_best_icon -> tv_best_icon
    int tv_bind_ali_account_hint -> tv_bind_ali_account_hint
    int tv_change_type -> tv_change_type
    int tv_check_land -> tv_check_land
    int tv_check_lucky -> tv_check_lucky
    int tv_check_records -> tv_check_records
    int tv_check_share -> tv_check_share
    int tv_choose_received -> tv_choose_received
    int tv_choose_send -> tv_choose_send
    int tv_count_unit -> tv_count_unit
    int tv_dealer_name -> tv_dealer_name
    int tv_error_hint -> tv_error_hint
    int tv_error_retry -> tv_error_retry
    int tv_exclusive_amount -> tv_exclusive_amount
    int tv_exclusive_greeting -> tv_exclusive_greeting
    int tv_exclusive_title -> tv_exclusive_title
    int tv_exclusive_username -> tv_exclusive_username
    int tv_greeting -> tv_greeting
    int tv_group_count -> tv_group_count
    int tv_item_money_amount -> tv_item_money_amount
    int tv_item_money_msg -> tv_item_money_msg
    int tv_item_status -> tv_item_status
    int tv_loading_msg -> tv_loading_msg
    int tv_money -> tv_money
    int tv_money_amount -> tv_money_amount
    int tv_money_count -> tv_money_count
    int tv_money_sender -> tv_money_sender
    int tv_money_status -> tv_money_status
    int tv_money_to_user -> tv_money_to_user
    int tv_money_type -> tv_money_type
    int tv_money_unit -> tv_money_unit
    int tv_money_use -> tv_money_use
    int tv_msg -> tv_msg
    int tv_open_title -> tv_open_title
    int tv_popup_msg -> tv_popup_msg
    int tv_random_amount -> tv_random_amount
    int tv_random_detail_amount -> tv_random_detail_amount
    int tv_random_detail_from_name -> tv_random_detail_from_name
    int tv_random_detail_greeting -> tv_random_detail_greeting
    int tv_random_detail_state -> tv_random_detail_state
    int tv_random_detail_username -> tv_random_detail_username
    int tv_random_greeting -> tv_random_greeting
    int tv_random_packet -> tv_random_packet
    int tv_random_switch -> tv_random_switch
    int tv_random_username -> tv_random_username
    int tv_receive -> tv_receive
    int tv_receive_name -> tv_receive_name
    int tv_received_count -> tv_received_count
    int tv_received_money_amount -> tv_received_money_amount
    int tv_record_no_rp -> tv_record_no_rp
    int tv_send_money_amount -> tv_send_money_amount
    int tv_send_money_count -> tv_send_money_count
    int tv_time -> tv_time
    int tv_title -> tv_title
    int tv_total_money -> tv_total_money
    int tv_type_info -> tv_type_info
    int tv_username -> tv_username
    int view_line -> view_line
    int view_line_group -> view_line_group
    int view_line_no_head -> view_line_no_head
    int view_line_single -> view_line_single
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$layout -> com.easemob.redpacketui.R$layout:
    int rp_activity_group_member -> rp_activity_group_member
    int rp_activity_record -> rp_activity_record
    int rp_activity_red_packet -> rp_activity_red_packet
    int rp_activity_red_packet_detail -> rp_activity_red_packet_detail
    int rp_choose_record_popup_layout -> rp_choose_record_popup_layout
    int rp_details_list_footer -> rp_details_list_footer
    int rp_details_list_header -> rp_details_list_header
    int rp_details_list_item -> rp_details_list_item
    int rp_error_page -> rp_error_page
    int rp_fragment_advert -> rp_fragment_advert
    int rp_fragment_group_chat_packet -> rp_fragment_group_chat_packet
    int rp_fragment_group_packet_detail -> rp_fragment_group_packet_detail
    int rp_fragment_single_chat_packet -> rp_fragment_single_chat_packet
    int rp_fragment_single_packet_detail -> rp_fragment_single_packet_detail
    int rp_group_member_header -> rp_group_member_header
    int rp_group_member_item -> rp_group_member_item
    int rp_loading -> rp_loading
    int rp_open_exclusive_packet_dialog -> rp_open_exclusive_packet_dialog
    int rp_open_packet_dialog -> rp_open_packet_dialog
    int rp_pay_tips_dialog -> rp_pay_tips_dialog
    int rp_popup_layout -> rp_popup_layout
    int rp_random_detail_dialog -> rp_random_detail_dialog
    int rp_random_dialog -> rp_random_dialog
    int rp_received_record_list_header -> rp_received_record_list_header
    int rp_received_record_list_item -> rp_received_record_list_item
    int rp_record_fragment -> rp_record_fragment
    int rp_record_list_footer -> rp_record_list_footer
    int rp_send_record_list_header -> rp_send_record_list_header
    int rp_send_record_list_item -> rp_send_record_list_item
    int rp_widget_title_bar -> rp_widget_title_bar
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$string -> com.easemob.redpacketui.R$string:
    int ad_check_land_page -> ad_check_land_page
    int ad_packet_out -> ad_packet_out
    int ad_packet_share -> ad_packet_share
    int ad_receive -> ad_receive
    int ad_receive_change -> ad_receive_change
    int ad_share -> ad_share
    int best_luck -> best_luck
    int btn_bind_ali -> btn_bind_ali
    int btn_cancel -> btn_cancel
    int btn_immediately_received -> btn_immediately_received
    int btn_know -> btn_know
    int btn_ok -> btn_ok
    int btn_put_money -> btn_put_money
    int btn_secretly_look -> btn_secretly_look
    int btn_silence_turn_off -> btn_silence_turn_off
    int btn_text_open_money -> btn_text_open_money
    int btn_unbind -> btn_unbind
    int check_lucky -> check_lucky
    int check_money_records -> check_money_records
    int count_unit -> count_unit
    int default_money_greeting -> default_money_greeting
    int detail_money_sign -> detail_money_sign
    int error_not_net_connect -> error_not_net_connect
    int group_change_normal -> group_change_normal
    int group_change_random -> group_change_random
    int group_choose_few_person -> group_choose_few_person
    int group_choose_few_person2 -> group_choose_few_person2
    int group_member_count -> group_member_count
    int group_money_available_receiver -> group_money_available_receiver
    int group_money_available_sender -> group_money_available_sender
    int group_money_count -> group_money_count
    int group_money_every -> group_money_every
    int group_money_expired -> group_money_expired
    int group_money_total -> group_money_total
    int group_money_unavailable_avg_receiver -> group_money_unavailable_avg_receiver
    int group_money_unavailable_avg_sender -> group_money_unavailable_avg_sender
    int group_money_unavailable_rand_receiver -> group_money_unavailable_rand_receiver
    int group_money_unavailable_rand_sender -> group_money_unavailable_rand_sender
    int group_rule_tips_normal -> group_rule_tips_normal
    int group_rule_tips_random -> group_rule_tips_random
    int hint_money_amount -> hint_money_amount
    int hint_money_count -> hint_money_count
    int hint_title -> hint_title
    int input_money_amount -> input_money_amount
    int input_money_error -> input_money_error
    int input_money_limited -> input_money_limited
    int input_money_limited_minimum -> input_money_limited_minimum
    int input_money_zero -> input_money_zero
    int loading_msg -> loading_msg
    int money_amount -> money_amount
    int money_detail_money_unit -> money_detail_money_unit
    int money_detail_use -> money_detail_use
    int money_expired_str -> money_expired_str
    int money_is_out -> money_is_out
    int money_is_out_avg -> money_is_out_avg
    int money_received -> money_received
    int money_received_text -> money_received_text
    int money_record_status -> money_record_status
    int money_record_status_all -> money_record_status_all
    int money_send -> money_send
    int money_send_text -> money_send_text
    int money_sponsor_username_format -> money_sponsor_username_format
    int money_status_expired -> money_status_expired
    int money_status_no_taken -> money_status_no_taken
    int money_status_taken -> money_status_taken
    int money_unit -> money_unit
    int money_username_format -> money_username_format
    int msg_choose_few_person_red_packet -> msg_choose_few_person_red_packet
    int msg_error_page_hint -> msg_error_page_hint
    int msg_error_retry -> msg_error_retry
    int my_money -> my_money
    int name_str_format_received -> name_str_format_received
    int name_str_format_send -> name_str_format_send
    int no_network_connected -> no_network_connected
    int random_from_username -> random_from_username
    int random_status_no_taken -> random_status_no_taken
    int random_status_out -> random_status_out
    int random_status_taken -> random_status_taken
    int random_status_taken_receive -> random_status_taken_receive
    int random_to_username -> random_to_username
    int red_money -> red_money
    int rp_str_amount_zero -> rp_str_amount_zero
    int rp_str_switch_amount -> rp_str_switch_amount
    int rp_str_switch_to_normal_packet -> rp_str_switch_to_normal_packet
    int send_money_bottom_text -> send_money_bottom_text
    int send_money_title -> send_money_title
    int send_who_money -> send_who_money
    int send_you_money -> send_you_money
    int str_ali_auth_success -> str_ali_auth_success
    int str_ali_cancel_pay_content -> str_ali_cancel_pay_content
    int str_ali_cancel_pay_title -> str_ali_cancel_pay_title
    int str_ali_pay_fail_content -> str_ali_pay_fail_content
    int str_ali_pay_fail_title -> str_ali_pay_fail_title
    int str_authorized -> str_authorized
    int str_authorized_bind_ali_title -> str_authorized_bind_ali_title
    int str_authorized_content -> str_authorized_content
    int str_authorized_receive_rp -> str_authorized_receive_rp
    int str_authorized_record_rp -> str_authorized_record_rp
    int str_authorized_success -> str_authorized_success
    int str_check_ali_order_error_content -> str_check_ali_order_error_content
    int str_heck_ali_order_error_title -> str_heck_ali_order_error_title
    int str_receive_rp_auto_ali -> str_receive_rp_auto_ali
    int str_your_not_rp -> str_your_not_rp
    int subtitle_content -> subtitle_content
    int tip_money_count_limit -> tip_money_count_limit
    int tip_money_count_zero -> tip_money_count_zero
    int tip_msg_unbind_ali -> tip_msg_unbind_ali
    int tip_title_unbind_ali -> tip_title_unbind_ali
    int title_common_problem -> title_common_problem
    int title_random_money -> title_random_money
    int title_send_group_money -> title_send_group_money
    int tv_all_person -> tv_all_person
    int tv_who_can_receive -> tv_who_can_receive
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$style -> com.easemob.redpacketui.R$style:
    int AvatarIconStyle -> AvatarIconStyle
    int DialogPayTypeStyle -> DialogPayTypeStyle
    int DialogTitleStyle -> DialogTitleStyle
    int DividerStyle -> DividerStyle
    int DividerStyleNoHead -> DividerStyleNoHead
    int LoadingProgressStyle -> LoadingProgressStyle
    int ReceivedMoneyStyle -> ReceivedMoneyStyle
    int RecordReceivedCountStyle -> RecordReceivedCountStyle
    int RecordReceivedCountTextStyle -> RecordReceivedCountTextStyle
    int SendMoneyBottomTextStyle -> SendMoneyBottomTextStyle
    int SendMoneyButtonStyle -> SendMoneyButtonStyle
    int SendMoneyEditTextStyle -> SendMoneyEditTextStyle
    int SendMoneyGreetingsStyle -> SendMoneyGreetingsStyle
    int SendMoneyGroupRuleTipsStyle -> SendMoneyGroupRuleTipsStyle
    int SendMoneyLeftTextViewStyle -> SendMoneyLeftTextViewStyle
    int SendMoneyRLayoutStyle -> SendMoneyRLayoutStyle
    int SendMoneyRightTextViewStyle -> SendMoneyRightTextViewStyle
    int UserNameStyle -> UserNameStyle
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.R$styleable -> com.easemob.redpacketui.R$styleable:
    int[] RPRecyclerView -> RPRecyclerView
    int RPRecyclerView_RPlayoutManager -> RPRecyclerView_RPlayoutManager
    int RPRecyclerView_RPreverseLayout -> RPRecyclerView_RPreverseLayout
    int RPRecyclerView_RPspanCount -> RPRecyclerView_RPspanCount
    int RPRecyclerView_RPstackFromEnd -> RPRecyclerView_RPstackFromEnd
    int RPRecyclerView_android_orientation -> RPRecyclerView_android_orientation
    int[] RPRoundCard -> RPRoundCard
    int RPRoundCard_RPCardBgColor -> RPRoundCard_RPCardBgColor
    int RPRoundCard_RPCardBgImg -> RPRoundCard_RPCardBgImg
    int RPRoundCard_RPCardBgType -> RPRoundCard_RPCardBgType
    int RPRoundCard_RPCardRadius -> RPRoundCard_RPCardRadius
    int[] app -> app
    int app_RPleftImage -> app_RPleftImage
    int app_RPmytitle -> app_RPmytitle
    int app_RPrightImage -> app_RPrightImage
    int app_RPrightText -> app_RPrightText
    int app_RPrightTextColor -> app_RPrightTextColor
    int app_RPrightTextSize -> app_RPrightTextSize
    int app_RPsubTitleText -> app_RPsubTitleText
    int app_RPsubTitleTextColor -> app_RPsubTitleTextColor
    int app_RPsubTitleTextSize -> app_RPsubTitleTextSize
    int app_RPtitleBackground -> app_RPtitleBackground
    int app_RPtitleTextColor -> app_RPtitleTextColor
    int app_RPtitleTextSize -> app_RPtitleTextSize
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.easemob.redpacketui.adapter.GroupDetailAdapter -> com.easemob.redpacketui.a.a:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    java.lang.String mMsgDirect -> c
    void <init>(android.content.Context,java.lang.String) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void setHeaderViews(com.easemob.redpacketui.adapter.GroupDetailAdapter$HeaderViewHolder,int) -> a
    void setItemViews(com.easemob.redpacketui.adapter.GroupDetailAdapter$ItemViewHolder,int) -> a
    int getItemCount() -> getItemCount
    int getItemViewType(int) -> getItemViewType
    void addFooter(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void addHeader(com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void addAll(java.util.ArrayList) -> a
    void removeFooter(int) -> a
com.easemob.redpacketui.adapter.GroupDetailAdapter$CheckViewHolder -> com.easemob.redpacketui.a.a$a:
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.GroupDetailAdapter$FooterViewHolder -> com.easemob.redpacketui.a.a$b:
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.GroupDetailAdapter$HeaderViewHolder -> com.easemob.redpacketui.a.a$c:
    android.widget.TextView tvUserName -> a
    android.widget.TextView tvGreeting -> b
    android.widget.TextView tvMoneyAmount -> c
    android.widget.TextView tvMoneyStatus -> d
    android.widget.ImageView ivAvatar -> e
    android.widget.TextView tvMoneyUse -> f
    android.widget.ImageView ivGroupIcon -> g
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.GroupDetailAdapter$ItemViewHolder -> com.easemob.redpacketui.a.a$d:
    android.widget.ImageView ivAvatar -> a
    android.widget.TextView tvUserName -> b
    android.widget.TextView tvDate -> c
    android.widget.TextView tvMoneyAmount -> d
    android.widget.TextView tvBestLuck -> e
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.GroupMemberAdapter -> com.easemob.redpacketui.a.b:
    java.util.List mList -> a
    com.easemob.redpacketui.adapter.GroupMemberAdapter$OnItemClickListener mOnItemClickListener -> b
    android.content.Context mContext -> c
    void <init>(android.content.Context) -> <init>
    com.easemob.redpacketui.adapter.GroupMemberAdapter$ContactViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    void onBindViewHolder(com.easemob.redpacketui.adapter.GroupMemberAdapter$ContactViewHolder,int) -> a
    int getItemCount() -> getItemCount
    long getHeaderId(int) -> a
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateHeaderViewHolder(android.view.ViewGroup) -> a
    void onBindHeaderViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    void setOnItemClickListener(com.easemob.redpacketui.adapter.GroupMemberAdapter$OnItemClickListener) -> a
    int getPositionForSection(char) -> a
    void addAll(java.util.List) -> a
    java.util.ArrayList getAll() -> a
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    com.easemob.redpacketui.adapter.GroupMemberAdapter$OnItemClickListener access$000(com.easemob.redpacketui.adapter.GroupMemberAdapter) -> a
    java.util.List access$100(com.easemob.redpacketui.adapter.GroupMemberAdapter) -> b
com.easemob.redpacketui.adapter.GroupMemberAdapter$1 -> com.easemob.redpacketui.a.b$1:
    int val$position -> a
    com.easemob.redpacketui.adapter.GroupMemberAdapter this$0 -> b
    void <init>(com.easemob.redpacketui.adapter.GroupMemberAdapter,int) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.adapter.GroupMemberAdapter$2 -> com.easemob.redpacketui.a.b$2:
    com.easemob.redpacketui.adapter.GroupMemberAdapter this$0 -> a
    void <init>(com.easemob.redpacketui.adapter.GroupMemberAdapter,android.view.View) -> <init>
com.easemob.redpacketui.adapter.GroupMemberAdapter$ContactViewHolder -> com.easemob.redpacketui.a.b$a:
    android.widget.TextView mTvName -> a
    android.widget.ImageView mIvAvatar -> b
    android.view.View mLine -> c
    com.easemob.redpacketui.adapter.GroupMemberAdapter this$0 -> d
    void <init>(com.easemob.redpacketui.adapter.GroupMemberAdapter,android.view.View) -> <init>
com.easemob.redpacketui.adapter.GroupMemberAdapter$OnItemClickListener -> com.easemob.redpacketui.a.b$b:
    void onItemClick(com.easemob.redpacketsdk.bean.RPUserBean,int) -> a
com.easemob.redpacketui.adapter.ReceivedRecordAdapter -> com.easemob.redpacketui.a.c:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    java.lang.String mAvatarUrl -> c
    java.lang.String mNameStr -> d
    com.easemob.redpacketui.callback.AliUserListener mAliUserListener -> e
    void <init>(android.content.Context,java.lang.String,java.lang.String,com.easemob.redpacketui.callback.AliUserListener) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void setHeaderViews(com.easemob.redpacketui.adapter.ReceivedRecordAdapter$HeaderViewHolder,int) -> a
    void setItemViews(com.easemob.redpacketui.adapter.ReceivedRecordAdapter$ItemViewHolder,int) -> a
    int getItemCount() -> getItemCount
    int getItemViewType(int) -> getItemViewType
    void addFooter(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void addHeader(com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void addAll(java.util.ArrayList) -> a
    void removeFooter(int) -> a
    com.easemob.redpacketui.callback.AliUserListener access$000(com.easemob.redpacketui.adapter.ReceivedRecordAdapter) -> a
com.easemob.redpacketui.adapter.ReceivedRecordAdapter$1 -> com.easemob.redpacketui.a.c$1:
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> a
    com.easemob.redpacketui.adapter.ReceivedRecordAdapter this$0 -> b
    void <init>(com.easemob.redpacketui.adapter.ReceivedRecordAdapter,com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.adapter.ReceivedRecordAdapter$2 -> com.easemob.redpacketui.a.c$2:
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> a
    com.easemob.redpacketui.adapter.ReceivedRecordAdapter this$0 -> b
    void <init>(com.easemob.redpacketui.adapter.ReceivedRecordAdapter,com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.adapter.ReceivedRecordAdapter$FooterViewHolder -> com.easemob.redpacketui.a.c$a:
    android.widget.TextView tvLoadingMsg -> a
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.ReceivedRecordAdapter$HeaderViewHolder -> com.easemob.redpacketui.a.c$b:
    android.widget.TextView tvUserName -> a
    android.widget.TextView tvTotalCount -> b
    android.widget.TextView tvTotalMoney -> c
    android.widget.TextView tvAliAccountHint -> d
    android.widget.TextView tvAliAccount -> e
    android.widget.ImageView ivAvatar -> f
    android.widget.ImageView ivUnbindAli -> g
    android.widget.TextView tvBestCount -> h
    android.widget.TextView tvNoRedPacket -> i
    android.widget.Button btnBindAli -> j
    android.widget.LinearLayout llBindAli -> k
    android.widget.LinearLayout llShowAli -> l
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.ReceivedRecordAdapter$ItemViewHolder -> com.easemob.redpacketui.a.c$c:
    android.widget.TextView tvReceiverName -> a
    android.widget.TextView tvMoney -> b
    android.widget.TextView tvDate -> c
    android.widget.TextView tvMoneyMessage -> d
    android.widget.ImageView ivAvatar -> e
    android.widget.ImageView ivRandomIcon -> f
    android.view.View vLine -> g
    android.view.View vLineNoHead -> h
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.SendRecordAdapter -> com.easemob.redpacketui.a.d:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    java.lang.String mAvatarUrl -> c
    java.lang.String mNameStr -> d
    void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void setHeaderViews(com.easemob.redpacketui.adapter.SendRecordAdapter$HeaderViewHolder,int) -> a
    void setItemViews(com.easemob.redpacketui.adapter.SendRecordAdapter$ItemViewHolder,int) -> a
    int getItemCount() -> getItemCount
    int getItemViewType(int) -> getItemViewType
    void addFooter(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void addHeader(com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void addAll(java.util.ArrayList) -> a
    void removeFooter(int) -> a
com.easemob.redpacketui.adapter.SendRecordAdapter$FooterViewHolder -> com.easemob.redpacketui.a.d$a:
    android.widget.TextView tvLoadingMsg -> a
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.SendRecordAdapter$HeaderViewHolder -> com.easemob.redpacketui.a.d$b:
    android.widget.TextView tvUserName -> a
    android.widget.TextView tvTotalCount -> b
    android.widget.TextView tvTotalMoney -> c
    android.widget.ImageView ivAvatar -> d
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.adapter.SendRecordAdapter$ItemViewHolder -> com.easemob.redpacketui.a.d$c:
    android.widget.TextView tvMoneyType -> a
    android.widget.TextView tvMoney -> b
    android.widget.TextView tvDate -> c
    android.widget.TextView tvMoneyStatus -> d
    android.widget.TextView tvDealerName -> e
    android.view.View vLine -> f
    android.view.View vLineNoHead -> g
    void <init>(android.view.View) -> <init>
    void initView(android.view.View) -> a
com.easemob.redpacketui.alipay.AliPay -> com.easemob.redpacketui.b.a:
    android.content.Context mContext -> a
    com.easemob.redpacketui.alipay.AliPay$AliPayCallBack mPayCallBack -> b
    com.easemob.redpacketui.alipay.AliPay$AliAuthCallBack mAuthCallBack -> c
    android.os.Handler mHandler -> d
    void <init>(android.content.Context) -> <init>
    void setPayCallBack(com.easemob.redpacketui.alipay.AliPay$AliPayCallBack) -> a
    void setAuthCallBack(com.easemob.redpacketui.alipay.AliPay$AliAuthCallBack) -> a
    void pay(java.lang.String) -> a
    void auth(java.lang.String) -> b
    com.easemob.redpacketui.alipay.AliPay$AliPayCallBack access$000(com.easemob.redpacketui.alipay.AliPay) -> a
    android.content.Context access$100(com.easemob.redpacketui.alipay.AliPay) -> b
    com.easemob.redpacketui.alipay.AliPay$AliAuthCallBack access$200(com.easemob.redpacketui.alipay.AliPay) -> c
    android.os.Handler access$300(com.easemob.redpacketui.alipay.AliPay) -> d
com.easemob.redpacketui.alipay.AliPay$1 -> com.easemob.redpacketui.b.a$1:
    com.easemob.redpacketui.alipay.AliPay this$0 -> a
    void <init>(com.easemob.redpacketui.alipay.AliPay) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.redpacketui.alipay.AliPay$2 -> com.easemob.redpacketui.b.a$2:
    java.lang.String val$orderInfo -> a
    com.easemob.redpacketui.alipay.AliPay this$0 -> b
    void <init>(com.easemob.redpacketui.alipay.AliPay,java.lang.String) -> <init>
    void run() -> run
com.easemob.redpacketui.alipay.AliPay$3 -> com.easemob.redpacketui.b.a$3:
    java.lang.String val$authInfo -> a
    com.easemob.redpacketui.alipay.AliPay this$0 -> b
    void <init>(com.easemob.redpacketui.alipay.AliPay,java.lang.String) -> <init>
    void run() -> run
com.easemob.redpacketui.alipay.AliPay$AliAuthCallBack -> com.easemob.redpacketui.b.a$a:
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
com.easemob.redpacketui.alipay.AliPay$AliPayCallBack -> com.easemob.redpacketui.b.a$b:
    void AliPaySuccess() -> a
    void AliPayError(int,java.lang.String) -> a
com.easemob.redpacketui.alipay.AuthResult -> com.easemob.redpacketui.b.b:
    java.lang.String resultStatus -> a
    java.lang.String result -> b
    java.lang.String memo -> c
    java.lang.String resultCode -> d
    java.lang.String authCode -> e
    java.lang.String alipayOpenId -> f
    java.lang.String userid -> g
    void <init>(java.util.Map,boolean) -> <init>
    java.lang.String removeBrackets(java.lang.String,boolean) -> a
    java.lang.String toString() -> toString
    java.lang.String getValue(java.lang.String,java.lang.String) -> a
    java.lang.String getResultStatus() -> a
    java.lang.String getResultCode() -> b
    java.lang.String getAuthCode() -> c
    java.lang.String getUserid() -> d
com.easemob.redpacketui.alipay.PayResult -> com.easemob.redpacketui.b.c:
    java.lang.String resultStatus -> a
    java.lang.String result -> b
    java.lang.String memo -> c
    void <init>(java.util.Map) -> <init>
    java.lang.String toString() -> toString
    java.lang.String getResultStatus() -> a
    java.lang.String getMemo() -> b
    java.lang.String getResult() -> c
com.easemob.redpacketui.base.BaseActivity -> com.easemob.redpacketui.base.BaseActivity:
    java.lang.String LOG_TAG -> a
    android.content.Context mContext -> b
    int mScreenWidth -> c
    int mScreenHeight -> d
    float mScreenDensity -> e
    com.easemob.redpacketui.loading.VaryViewHelperController mVaryViewHelperController -> f
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void finish() -> finish
    void onDestroy() -> onDestroy
    android.content.res.Resources getResources() -> getResources
    void showToast(java.lang.String) -> a
    void toggleShowLoading(boolean) -> a
    void toggleShowError(boolean,java.lang.String,android.view.View$OnClickListener) -> a
    void setTranslucentStatus(boolean) -> b
    void closeSoftKeyboard() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void getBundleExtras(android.os.Bundle) -> a
    int getContentViewLayoutID() -> b
    android.view.View getLoadingTargetView() -> c
    void initViewsAndEvents(android.os.Bundle) -> b
    boolean isApplyStatusBarTranslucency() -> d
    void <clinit>() -> <clinit>
com.easemob.redpacketui.base.BaseDialogFragment -> com.easemob.redpacketui.base.a:
    java.lang.String TAG_LOG -> a
    int mScreenWidth -> b
    int mScreenHeight -> c
    float mScreenDensity -> d
    android.content.Context mContext -> e
    com.easemob.redpacketui.loading.VaryViewHelperController mVaryViewHelperController -> f
    void <init>() -> <init>
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    android.support.v4.app.FragmentManager getMyFragmentManager(android.support.v4.app.FragmentActivity) -> a
    void showToast(java.lang.String) -> a
    void toggleShowLoading(boolean) -> a
    java.lang.String doubleNumberFormat(double) -> a
    void keepFontSize() -> d
    void <clinit>() -> <clinit>
com.easemob.redpacketui.base.BaseFragment -> com.easemob.redpacketui.base.b:
    java.lang.String TAG_LOG -> a
    int mScreenWidth -> b
    int mScreenHeight -> c
    float mScreenDensity -> d
    android.content.Context mContext -> e
    com.easemob.redpacketui.loading.VaryViewHelperController mVaryViewHelperController -> f
    void <init>() -> <init>
    void onAttach(android.app.Activity) -> onAttach
    void onAttach(android.content.Context) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDetach() -> onDetach
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    android.support.v4.app.FragmentManager getMyFragmentManager(android.support.v4.app.FragmentActivity) -> a
    void showToast(java.lang.String) -> a
    void toggleShowLoading(boolean) -> a
    void toggleShowError(boolean,java.lang.String,android.view.View$OnClickListener) -> a
    java.lang.String doubleNumberFormat(double) -> a
    void closeSoftKeyboard() -> d
    void <clinit>() -> <clinit>
com.easemob.redpacketui.callback.AliUserListener -> com.easemob.redpacketui.c.a:
    void unBindAliUser(android.view.View,com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void bindAliUser(android.view.View,com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
com.easemob.redpacketui.callback.GreetingTextWatcher -> com.easemob.redpacketui.c.b:
    void <init>() -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.callback.RandomDetailCallback -> com.easemob.redpacketui.c.c:
    com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback mRPOpenPacketCallback -> a
    android.support.v4.app.FragmentActivity mFragmentActivity -> b
    com.easemob.redpacketsdk.presenter.impl.UnfoldPacketPresenter mPresenter -> c
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> d
    void <init>(com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback,android.support.v4.app.FragmentActivity) -> <init>
    void UnfoldPacket() -> a
    void showRedPacketDetail(java.lang.String,java.lang.String) -> showRedPacketDetail
    void onUnfoldPacketError(java.lang.String,java.lang.String) -> onUnfoldPacketError
    void showRandomPacketOut() -> showRandomPacketOut
    void showAveragePacketOut() -> showAveragePacketOut
    void showAuthDialog() -> showAuthDialog
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onAuthClick() -> a_
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    void showTipDialog(int,java.lang.String) -> a
    void detach() -> c
com.easemob.redpacketui.callback.RecyclerItemClickListener -> com.easemob.redpacketui.c.d:
    com.easemob.redpacketui.callback.RecyclerItemClickListener$OnItemClickListener mListener -> b
    android.view.GestureDetector mGestureDetector -> a
    void <init>(android.content.Context,com.easemob.redpacketui.callback.RecyclerItemClickListener$OnItemClickListener) -> <init>
    boolean onInterceptTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
com.easemob.redpacketui.callback.RecyclerItemClickListener$1 -> com.easemob.redpacketui.c.d$1:
    com.easemob.redpacketui.callback.RecyclerItemClickListener this$0 -> a
    void <init>(com.easemob.redpacketui.callback.RecyclerItemClickListener) -> <init>
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.easemob.redpacketui.callback.RecyclerItemClickListener$OnItemClickListener -> com.easemob.redpacketui.c.d$a:
    void onItemClick(android.view.View,int) -> a
com.easemob.redpacketui.callback.RetryTokenListener -> com.easemob.redpacketui.c.e:
    void onRetryToken(com.easemob.redpacketsdk.RPCallback) -> a
com.easemob.redpacketui.indexrecyclerview.CharacterParser -> com.easemob.redpacketui.d.a:
    int[] pyKey -> a
    java.lang.String[] pyValue -> b
    int[] extraKey -> c
    java.lang.String[] extraValue -> d
    com.easemob.redpacketui.indexrecyclerview.CharacterParser characterParser -> e
    void <init>() -> <init>
    com.easemob.redpacketui.indexrecyclerview.CharacterParser getInstance() -> a
    int getChsAscii(java.lang.String) -> a
    java.lang.String convert(java.lang.String) -> b
    java.lang.String getSelling(java.lang.String) -> c
    void <clinit>() -> <clinit>
com.easemob.redpacketui.indexrecyclerview.DimensionCalculator -> com.easemob.redpacketui.d.b:
    void <init>() -> <init>
    void initMargins(android.graphics.Rect,android.view.View) -> a
    void initMarginRect(android.graphics.Rect,android.view.ViewGroup$MarginLayoutParams) -> a
com.easemob.redpacketui.indexrecyclerview.HeaderPositionCalculator -> com.easemob.redpacketui.d.c:
    com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter mAdapter -> a
    com.easemob.redpacketui.indexrecyclerview.OrientationProvider mOrientationProvider -> b
    com.easemob.redpacketui.indexrecyclerview.HeaderProvider mHeaderProvider -> c
    com.easemob.redpacketui.indexrecyclerview.DimensionCalculator mDimensionCalculator -> d
    android.graphics.Rect mTempRect1 -> e
    android.graphics.Rect mTempRect2 -> f
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter,com.easemob.redpacketui.indexrecyclerview.HeaderProvider,com.easemob.redpacketui.indexrecyclerview.OrientationProvider,com.easemob.redpacketui.indexrecyclerview.DimensionCalculator) -> <init>
    boolean hasStickyHeader(android.view.View,int,int) -> a
    boolean hasNewHeader(int,boolean) -> a
    boolean indexOutOfBounds(int) -> a
    void initHeaderBounds(android.graphics.Rect,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,android.view.View,boolean) -> a
    void initDefaultHeaderOffset(android.graphics.Rect,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,android.view.View,int) -> a
    boolean isStickyHeaderBeingPushedOffscreen(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> a
    void translateHeaderWithNextHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,android.graphics.Rect,android.view.View,android.view.View,android.view.View) -> a
    android.view.View getFirstViewUnobscuredByHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> b
    boolean itemIsObscuredByHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,android.view.View,int) -> a
    int getListTop(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> a
    int getListLeft(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> b
com.easemob.redpacketui.indexrecyclerview.HeaderProvider -> com.easemob.redpacketui.d.d:
    android.view.View getHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> a
    void invalidate() -> a
com.easemob.redpacketui.indexrecyclerview.HeaderRenderer -> com.easemob.redpacketui.d.e:
    com.easemob.redpacketui.indexrecyclerview.DimensionCalculator mDimensionCalculator -> a
    com.easemob.redpacketui.indexrecyclerview.OrientationProvider mOrientationProvider -> b
    android.graphics.Rect mTempRect -> c
    void <init>(com.easemob.redpacketui.indexrecyclerview.OrientationProvider) -> <init>
    void <init>(com.easemob.redpacketui.indexrecyclerview.OrientationProvider,com.easemob.redpacketui.indexrecyclerview.DimensionCalculator) -> <init>
    void drawHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.graphics.Canvas,android.view.View,android.graphics.Rect) -> a
    void initClipRectForHeader(android.graphics.Rect,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> a
com.easemob.redpacketui.indexrecyclerview.HeaderViewCache -> com.easemob.redpacketui.d.f:
    com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter mAdapter -> a
    android.support.v4.util.LongSparseArray mHeaderViews -> b
    com.easemob.redpacketui.indexrecyclerview.OrientationProvider mOrientationProvider -> c
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter,com.easemob.redpacketui.indexrecyclerview.OrientationProvider) -> <init>
    android.view.View getHeader(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> a
    void invalidate() -> a
com.easemob.redpacketui.indexrecyclerview.LinearLayoutOrientationProvider -> com.easemob.redpacketui.d.g:
    void <init>() -> <init>
    int getOrientation(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> a
    boolean isReverseLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> b
    void throwIfNotLinearLayoutManager(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> a
com.easemob.redpacketui.indexrecyclerview.OrientationProvider -> com.easemob.redpacketui.d.h:
    int getOrientation(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> a
    boolean isReverseLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> b
com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter -> com.easemob.redpacketui.d.i:
    long getHeaderId(int) -> a
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateHeaderViewHolder(android.view.ViewGroup) -> a
    void onBindHeaderViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    int getItemCount() -> getItemCount
com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersDecoration -> com.easemob.redpacketui.d.j:
    com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter mAdapter -> a
    android.util.SparseArray mHeaderRects -> b
    com.easemob.redpacketui.indexrecyclerview.HeaderProvider mHeaderProvider -> c
    com.easemob.redpacketui.indexrecyclerview.OrientationProvider mOrientationProvider -> d
    com.easemob.redpacketui.indexrecyclerview.HeaderPositionCalculator mHeaderPositionCalculator -> e
    com.easemob.redpacketui.indexrecyclerview.HeaderRenderer mRenderer -> f
    com.easemob.redpacketui.indexrecyclerview.DimensionCalculator mDimensionCalculator -> g
    android.graphics.Rect mTempRect -> h
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter) -> <init>
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter,com.easemob.redpacketui.indexrecyclerview.OrientationProvider,com.easemob.redpacketui.indexrecyclerview.DimensionCalculator) -> <init>
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter,com.easemob.redpacketui.indexrecyclerview.OrientationProvider,com.easemob.redpacketui.indexrecyclerview.DimensionCalculator,com.easemob.redpacketui.indexrecyclerview.HeaderRenderer,com.easemob.redpacketui.indexrecyclerview.HeaderProvider) -> <init>
    void <init>(com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersAdapter,com.easemob.redpacketui.indexrecyclerview.HeaderRenderer,com.easemob.redpacketui.indexrecyclerview.OrientationProvider,com.easemob.redpacketui.indexrecyclerview.DimensionCalculator,com.easemob.redpacketui.indexrecyclerview.HeaderProvider,com.easemob.redpacketui.indexrecyclerview.HeaderPositionCalculator) -> <init>
    void getItemOffsets(android.graphics.Rect,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    void setItemOffsetsForHeader(android.graphics.Rect,android.view.View,int) -> a
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onDrawOver
    android.view.View getHeaderView(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> a
    void invalidateHeaders() -> a
com.easemob.redpacketui.loading.IVaryViewHelper -> com.easemob.redpacketui.e.a:
    void restoreView() -> a
    void showLayout(android.view.View) -> a
    android.view.View inflate(int) -> a
    android.content.Context getContext() -> b
com.easemob.redpacketui.loading.VaryViewHelper -> com.easemob.redpacketui.e.b:
    android.view.View view -> a
    android.view.ViewGroup parentView -> b
    int viewIndex -> c
    android.view.ViewGroup$LayoutParams params -> d
    android.view.View currentView -> e
    void <init>(android.view.View) -> <init>
    void init() -> c
    void restoreView() -> a
    void showLayout(android.view.View) -> a
    android.view.View inflate(int) -> a
    android.content.Context getContext() -> b
com.easemob.redpacketui.loading.VaryViewHelperController -> com.easemob.redpacketui.e.c:
    com.easemob.redpacketui.loading.IVaryViewHelper helper -> a
    android.view.View mLoadView -> b
    android.view.View mErrorView -> c
    void <init>(android.view.View) -> <init>
    void <init>(com.easemob.redpacketui.loading.IVaryViewHelper) -> <init>
    void showError(java.lang.String,android.view.View$OnClickListener) -> a
    void showLoading() -> a
    void restore() -> b
com.easemob.redpacketui.recyclerview.util.AsyncListUtil -> com.easemob.redpacketui.recyclerview.util.AsyncListUtil:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class mTClass -> mTClass
    int mTileSize -> mTileSize
    com.easemob.redpacketui.recyclerview.util.AsyncListUtil$DataCallback mDataCallback -> mDataCallback
    com.easemob.redpacketui.recyclerview.util.AsyncListUtil$ViewCallback mViewCallback -> mViewCallback
    com.easemob.redpacketui.recyclerview.util.TileList mTileList -> mTileList
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback mMainThreadProxy -> mMainThreadProxy
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback mBackgroundProxy -> mBackgroundProxy
    int[] mTmpRange -> mTmpRange
    int[] mPrevRange -> mPrevRange
    int[] mTmpRangeExtended -> mTmpRangeExtended
    boolean mAllowScrollHints -> mAllowScrollHints
    int mScrollHint -> mScrollHint
    int mItemCount -> mItemCount
    int mDisplayedGeneration -> mDisplayedGeneration
    int mRequestedGeneration -> mRequestedGeneration
    android.util.SparseIntArray mMissingPositions -> mMissingPositions
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback mMainThreadCallback -> mMainThreadCallback
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback mBackgroundCallback -> mBackgroundCallback
    void log(java.lang.String,java.lang.Object[]) -> log
    void <init>(java.lang.Class,int,com.easemob.redpacketui.recyclerview.util.AsyncListUtil$DataCallback,com.easemob.redpacketui.recyclerview.util.AsyncListUtil$ViewCallback) -> <init>
    boolean isRefreshPending() -> isRefreshPending
    void onRangeChanged() -> onRangeChanged
    void refresh() -> refresh
    java.lang.Object getItem(int) -> getItem
    int getItemCount() -> getItemCount
    void updateRange() -> updateRange
    int access$002(com.easemob.redpacketui.recyclerview.util.AsyncListUtil,int) -> access$002
    boolean access$102(com.easemob.redpacketui.recyclerview.util.AsyncListUtil,boolean) -> access$102
    void access$200(com.easemob.redpacketui.recyclerview.util.AsyncListUtil) -> access$200
    android.util.SparseIntArray access$300(com.easemob.redpacketui.recyclerview.util.AsyncListUtil) -> access$300
com.easemob.redpacketui.recyclerview.util.AsyncListUtil$1 -> com.easemob.redpacketui.recyclerview.util.AsyncListUtil$1:
    com.easemob.redpacketui.recyclerview.util.AsyncListUtil this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.util.AsyncListUtil) -> <init>
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
    void recycleAllTiles() -> recycleAllTiles
    boolean isRequestedGeneration(int) -> isRequestedGeneration
com.easemob.redpacketui.recyclerview.util.AsyncListUtil$2 -> com.easemob.redpacketui.recyclerview.util.AsyncListUtil$2:
    com.easemob.redpacketui.recyclerview.util.TileList$Tile mRecycledRoot -> mRecycledRoot
    android.util.SparseBooleanArray mLoadedTiles -> mLoadedTiles
    int mGeneration -> mGeneration
    int mItemCount -> mItemCount
    int mFirstRequiredTileStart -> mFirstRequiredTileStart
    int mLastRequiredTileStart -> mLastRequiredTileStart
    com.easemob.redpacketui.recyclerview.util.AsyncListUtil this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.util.AsyncListUtil) -> <init>
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    int getTileStart(int) -> getTileStart
    void requestTiles(int,int,int,boolean) -> requestTiles
    void loadTile(int,int) -> loadTile
    void recycleTile(com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> recycleTile
    com.easemob.redpacketui.recyclerview.util.TileList$Tile acquireTile() -> acquireTile
    boolean isTileLoaded(int) -> isTileLoaded
    void addTile(com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> addTile
    void removeTile(int) -> removeTile
    void flushTileCache(int) -> flushTileCache
    void log(java.lang.String,java.lang.Object[]) -> log
com.easemob.redpacketui.recyclerview.util.AsyncListUtil$DataCallback -> com.easemob.redpacketui.recyclerview.util.AsyncListUtil$DataCallback:
    void <init>() -> <init>
    int refreshData() -> refreshData
    void fillData(java.lang.Object[],int,int) -> fillData
    void recycleData(java.lang.Object[],int) -> recycleData
    int getMaxCachedTiles() -> getMaxCachedTiles
com.easemob.redpacketui.recyclerview.util.AsyncListUtil$ViewCallback -> com.easemob.redpacketui.recyclerview.util.AsyncListUtil$ViewCallback:
    int HINT_SCROLL_NONE -> HINT_SCROLL_NONE
    int HINT_SCROLL_DESC -> HINT_SCROLL_DESC
    int HINT_SCROLL_ASC -> HINT_SCROLL_ASC
    void <init>() -> <init>
    void getItemRangeInto(int[]) -> getItemRangeInto
    void extendRangeInto(int[],int[],int) -> extendRangeInto
    void onDataRefresh() -> onDataRefresh
    void onItemLoaded(int) -> onItemLoaded
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil:
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback getMainThreadProxy(com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback getBackgroundProxy(com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1 -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue mQueue -> mQueue
    android.os.Handler mMainThreadHandler -> mMainThreadHandler
    int UPDATE_ITEM_COUNT -> UPDATE_ITEM_COUNT
    int ADD_TILE -> ADD_TILE
    int REMOVE_TILE -> REMOVE_TILE
    java.lang.Runnable mMainThreadRunnable -> mMainThreadRunnable
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback val$callback -> val$callback
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil,com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback) -> <init>
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
    void sendMessage(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue access$000(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1) -> access$000
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1$1 -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1$1:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1 this$1 -> this$1
    void <init>(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$1) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2 -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue mQueue -> mQueue
    java.util.concurrent.Executor mExecutor -> mExecutor
    java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning -> mBackgroundRunning
    int REFRESH -> REFRESH
    int UPDATE_RANGE -> UPDATE_RANGE
    int LOAD_TILE -> LOAD_TILE
    int RECYCLE_TILE -> RECYCLE_TILE
    java.lang.Runnable mBackgroundRunnable -> mBackgroundRunnable
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback val$callback -> val$callback
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil,com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback) -> <init>
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    void loadTile(int,int) -> loadTile
    void recycleTile(com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> recycleTile
    void sendMessage(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
    void sendMessageAtFrontOfQueue(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue access$100(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2) -> access$100
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2$1 -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2$1:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2 this$1 -> this$1
    void <init>(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$2) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$MessageQueue:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem mRoot -> mRoot
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem next() -> next
    void sendMessageAtFrontOfQueue(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    void sendMessage(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
    void removeMessages(int) -> removeMessages
com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem -> com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem:
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem sPool -> sPool
    java.lang.Object sPoolLock -> sPoolLock
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem next -> next
    int what -> what
    int arg1 -> arg1
    int arg2 -> arg2
    int arg3 -> arg3
    int arg4 -> arg4
    int arg5 -> arg5
    java.lang.Object data -> data
    void <init>() -> <init>
    void recycle() -> recycle
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem access$200(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> access$200
    com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem access$202(com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem,com.easemob.redpacketui.recyclerview.util.MessageThreadUtil$SyncQueueItem) -> access$202
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.util.SortedList -> com.easemob.redpacketui.recyclerview.util.SortedList:
    int INVALID_POSITION -> INVALID_POSITION
    int MIN_CAPACITY -> MIN_CAPACITY
    int CAPACITY_GROWTH -> CAPACITY_GROWTH
    int INSERTION -> INSERTION
    int DELETION -> DELETION
    int LOOKUP -> LOOKUP
    java.lang.Object[] mData -> mData
    java.lang.Object[] mOldData -> mOldData
    int mOldDataStart -> mOldDataStart
    int mOldDataSize -> mOldDataSize
    int mMergedSize -> mMergedSize
    com.easemob.redpacketui.recyclerview.util.SortedList$Callback mCallback -> mCallback
    com.easemob.redpacketui.recyclerview.util.SortedList$BatchedCallback mBatchedCallback -> mBatchedCallback
    int mSize -> mSize
    java.lang.Class mTClass -> mTClass
    void <init>(java.lang.Class,com.easemob.redpacketui.recyclerview.util.SortedList$Callback) -> <init>
    void <init>(java.lang.Class,com.easemob.redpacketui.recyclerview.util.SortedList$Callback,int) -> <init>
    int size() -> size
    int add(java.lang.Object) -> add
    void addAll(java.lang.Object[],boolean) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.util.Collection) -> addAll
    void addAllInternal(java.lang.Object[]) -> addAllInternal
    int deduplicate(java.lang.Object[]) -> deduplicate
    int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    void merge(java.lang.Object[],int) -> merge
    void throwIfMerging() -> throwIfMerging
    void beginBatchedUpdates() -> beginBatchedUpdates
    void endBatchedUpdates() -> endBatchedUpdates
    int add(java.lang.Object,boolean) -> add
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeItemAt(int) -> removeItemAt
    boolean remove(java.lang.Object,boolean) -> remove
    void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    void updateItemAt(int,java.lang.Object) -> updateItemAt
    void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    void addToData(int,java.lang.Object) -> addToData
    void clear() -> clear
com.easemob.redpacketui.recyclerview.util.SortedList$BatchedCallback -> com.easemob.redpacketui.recyclerview.util.SortedList$BatchedCallback:
    com.easemob.redpacketui.recyclerview.util.SortedList$Callback mWrappedCallback -> mWrappedCallback
    int TYPE_NONE -> TYPE_NONE
    int TYPE_ADD -> TYPE_ADD
    int TYPE_REMOVE -> TYPE_REMOVE
    int TYPE_CHANGE -> TYPE_CHANGE
    int TYPE_MOVE -> TYPE_MOVE
    int mLastEventType -> mLastEventType
    int mLastEventPosition -> mLastEventPosition
    int mLastEventCount -> mLastEventCount
    void <init>(com.easemob.redpacketui.recyclerview.util.SortedList$Callback) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    void dispatchLastEvent() -> dispatchLastEvent
    com.easemob.redpacketui.recyclerview.util.SortedList$Callback access$000(com.easemob.redpacketui.recyclerview.util.SortedList$BatchedCallback) -> access$000
com.easemob.redpacketui.recyclerview.util.SortedList$Callback -> com.easemob.redpacketui.recyclerview.util.SortedList$Callback:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
com.easemob.redpacketui.recyclerview.util.ThreadUtil -> com.easemob.redpacketui.recyclerview.util.ThreadUtil:
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback getMainThreadProxy(com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
    com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback getBackgroundProxy(com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback -> com.easemob.redpacketui.recyclerview.util.ThreadUtil$BackgroundCallback:
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    void loadTile(int,int) -> loadTile
    void recycleTile(com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> recycleTile
com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback -> com.easemob.redpacketui.recyclerview.util.ThreadUtil$MainThreadCallback:
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
com.easemob.redpacketui.recyclerview.util.TileList -> com.easemob.redpacketui.recyclerview.util.TileList:
    int mTileSize -> mTileSize
    android.util.SparseArray mTiles -> mTiles
    com.easemob.redpacketui.recyclerview.util.TileList$Tile mLastAccessedTile -> mLastAccessedTile
    void <init>(int) -> <init>
    java.lang.Object getItemAt(int) -> getItemAt
    int size() -> size
    void clear() -> clear
    com.easemob.redpacketui.recyclerview.util.TileList$Tile getAtIndex(int) -> getAtIndex
    com.easemob.redpacketui.recyclerview.util.TileList$Tile addOrReplace(com.easemob.redpacketui.recyclerview.util.TileList$Tile) -> addOrReplace
    com.easemob.redpacketui.recyclerview.util.TileList$Tile removeAtPos(int) -> removeAtPos
com.easemob.redpacketui.recyclerview.util.TileList$Tile -> com.easemob.redpacketui.recyclerview.util.TileList$Tile:
    java.lang.Object[] mItems -> mItems
    int mStartPosition -> mStartPosition
    int mItemCount -> mItemCount
    com.easemob.redpacketui.recyclerview.util.TileList$Tile mNext -> mNext
    void <init>(java.lang.Class,int) -> <init>
    boolean containsPosition(int) -> containsPosition
    java.lang.Object getByPosition(int) -> getByPosition
com.easemob.redpacketui.recyclerview.widget.AdapterHelper -> com.easemob.redpacketui.recyclerview.widget.AdapterHelper:
    int POSITION_TYPE_INVISIBLE -> POSITION_TYPE_INVISIBLE
    int POSITION_TYPE_NEW_OR_LAID_OUT -> POSITION_TYPE_NEW_OR_LAID_OUT
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.util.Pools$Pool mUpdateOpPool -> mUpdateOpPool
    java.util.ArrayList mPendingUpdates -> mPendingUpdates
    java.util.ArrayList mPostponedList -> mPostponedList
    com.easemob.redpacketui.recyclerview.widget.AdapterHelper$Callback mCallback -> mCallback
    java.lang.Runnable mOnItemProcessedCallback -> mOnItemProcessedCallback
    boolean mDisableRecycler -> mDisableRecycler
    com.easemob.redpacketui.recyclerview.widget.OpReorderer mOpReorderer -> mOpReorderer
    int mExistingUpdateTypes -> mExistingUpdateTypes
    void <init>(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$Callback) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    com.easemob.redpacketui.recyclerview.widget.AdapterHelper addUpdateOp(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    void reset() -> reset
    void preProcess() -> preProcess
    void consumePostponedUpdates() -> consumePostponedUpdates
    void applyMove(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    void applyRemove(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    void applyUpdate(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    void dispatchAndUpdateViewHolders(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    void dispatchFirstPassAndUpdateViewHolders(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
    boolean canFindInPreLayout(int) -> canFindInPreLayout
    void applyAdd(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    void postponeAndUpdateViewHolders(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    boolean hasPendingUpdates() -> hasPendingUpdates
    boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    int findPositionOffset(int) -> findPositionOffset
    int findPositionOffset(int,int) -> findPositionOffset
    boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    boolean hasUpdates() -> hasUpdates
    com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
com.easemob.redpacketui.recyclerview.widget.AdapterHelper$Callback -> com.easemob.redpacketui.recyclerview.widget.AdapterHelper$Callback:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    void onDispatchFirstPass(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void onDispatchSecondPass(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp -> com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp:
    int ADD -> ADD
    int REMOVE -> REMOVE
    int UPDATE -> UPDATE
    int MOVE -> MOVE
    int POOL_SIZE -> POOL_SIZE
    int cmd -> cmd
    int positionStart -> positionStart
    java.lang.Object payload -> payload
    int itemCount -> itemCount
    void <init>(int,int,int,java.lang.Object) -> <init>
    java.lang.String cmdToString() -> cmdToString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.easemob.redpacketui.recyclerview.widget.ChildHelper -> com.easemob.redpacketui.recyclerview.widget.ChildHelper:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    com.easemob.redpacketui.recyclerview.widget.ChildHelper$Callback mCallback -> mCallback
    com.easemob.redpacketui.recyclerview.widget.ChildHelper$Bucket mBucket -> mBucket
    java.util.List mHiddenViews -> mHiddenViews
    void <init>(com.easemob.redpacketui.recyclerview.widget.ChildHelper$Callback) -> <init>
    void hideViewInternal(android.view.View) -> hideViewInternal
    boolean unhideViewInternal(android.view.View) -> unhideViewInternal
    void addView(android.view.View,boolean) -> addView
    void addView(android.view.View,int,boolean) -> addView
    int getOffset(int) -> getOffset
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    android.view.View findHiddenNonRemovedView(int,int) -> findHiddenNonRemovedView
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    int getChildCount() -> getChildCount
    int getUnfilteredChildCount() -> getUnfilteredChildCount
    android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    void detachViewFromParent(int) -> detachViewFromParent
    int indexOfChild(android.view.View) -> indexOfChild
    boolean isHidden(android.view.View) -> isHidden
    void hide(android.view.View) -> hide
    void unhide(android.view.View) -> unhide
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
com.easemob.redpacketui.recyclerview.widget.ChildHelper$Bucket -> com.easemob.redpacketui.recyclerview.widget.ChildHelper$Bucket:
    int BITS_PER_WORD -> BITS_PER_WORD
    long LAST_BIT -> LAST_BIT
    long mData -> mData
    com.easemob.redpacketui.recyclerview.widget.ChildHelper$Bucket next -> next
    void <init>() -> <init>
    void set(int) -> set
    void ensureNext() -> ensureNext
    void clear(int) -> clear
    boolean get(int) -> get
    void reset() -> reset
    void insert(int,boolean) -> insert
    boolean remove(int) -> remove
    int countOnesBefore(int) -> countOnesBefore
    java.lang.String toString() -> toString
com.easemob.redpacketui.recyclerview.widget.ChildHelper$Callback -> com.easemob.redpacketui.recyclerview.widget.ChildHelper$Callback:
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator:
    boolean DEBUG -> DEBUG
    java.util.ArrayList mPendingRemovals -> mPendingRemovals
    java.util.ArrayList mPendingAdditions -> mPendingAdditions
    java.util.ArrayList mPendingMoves -> mPendingMoves
    java.util.ArrayList mPendingChanges -> mPendingChanges
    java.util.ArrayList mAdditionsList -> mAdditionsList
    java.util.ArrayList mMovesList -> mMovesList
    java.util.ArrayList mChangesList -> mChangesList
    java.util.ArrayList mAddAnimations -> mAddAnimations
    java.util.ArrayList mMoveAnimations -> mMoveAnimations
    java.util.ArrayList mRemoveAnimations -> mRemoveAnimations
    java.util.ArrayList mChangeAnimations -> mChangeAnimations
    void <init>() -> <init>
    void runPendingAnimations() -> runPendingAnimations
    boolean animateRemove(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    void animateRemoveImpl(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    boolean animateAdd(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    void animateAddImpl(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    boolean animateMove(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    void animateMoveImpl(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    boolean animateChange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void animateChangeImpl(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    void endChangeAnimation(java.util.List,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    void endChangeAnimationIfNecessary(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    boolean endChangeAnimationIfNecessary(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    void endAnimation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    void resetAnimation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    boolean isRunning() -> isRunning
    void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    void endAnimations() -> endAnimations
    void cancelAll(java.util.List) -> cancelAll
    void access$000(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> access$000
    java.util.ArrayList access$100(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$100
    void access$200(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> access$200
    java.util.ArrayList access$300(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$300
    void access$400(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$400
    java.util.ArrayList access$500(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$500
    java.util.ArrayList access$700(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$700
    void access$800(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$800
    java.util.ArrayList access$900(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$900
    java.util.ArrayList access$1100(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$1100
    java.util.ArrayList access$1300(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator) -> access$1300
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$1 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$1:
    java.util.ArrayList val$moves -> val$moves
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$2 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$2:
    java.util.ArrayList val$changes -> val$changes
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$3 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$3:
    java.util.ArrayList val$additions -> val$additions
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$4 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$4:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$5 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$5:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$6 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$6:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder val$holder -> val$holder
    int val$deltaX -> val$deltaX
    int val$deltaY -> val$deltaY
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$7 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$7:
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v4.view.ViewPropertyAnimatorCompat val$oldViewAnim -> val$oldViewAnim
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$8 -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$8:
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v4.view.ViewPropertyAnimatorCompat val$newViewAnimation -> val$newViewAnimation
    android.view.View val$newView -> val$newView
    com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator,com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> oldHolder
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder newHolder -> newHolder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    java.lang.String toString() -> toString
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int,com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$MoveInfo -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder holder -> holder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int,com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$VpaListenerAdapter -> com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$VpaListenerAdapter:
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void <init>(com.easemob.redpacketui.recyclerview.widget.DefaultItemAnimator$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.GridLayoutManager -> com.easemob.redpacketui.recyclerview.widget.GridLayoutManager:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int DEFAULT_SPAN_COUNT -> DEFAULT_SPAN_COUNT
    int MAIN_DIR_SPEC -> MAIN_DIR_SPEC
    boolean mPendingSpanCountChange -> mPendingSpanCountChange
    int mSpanCount -> mSpanCount
    int[] mCachedBorders -> mCachedBorders
    android.view.View[] mSet -> mSet
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> mPreLayoutSpanSizeCache
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> mPreLayoutSpanIndexCache
    com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> mSpanSizeLookup
    android.graphics.Rect mDecorInsets -> mDecorInsets
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,int,int,boolean) -> <init>
    void setStackFromEnd(boolean) -> setStackFromEnd
    int getRowCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    void onInitializeAccessibilityNodeInfoForItem(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onLayoutChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    void onItemsAdded(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onItemsChanged
    void onItemsRemoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void onItemsMoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    void setSpanSizeLookup(com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    void updateMeasurements() -> updateMeasurements
    void calculateItemBorders(int) -> calculateItemBorders
    void onAnchorReady(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> onAnchorReady
    void ensureViewSet() -> ensureViewSet
    int scrollHorizontallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    void ensureAnchorIsInFirstSpan(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> ensureAnchorIsInFirstSpan
    android.view.View findReferenceChild(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int getSpanGroupIndex(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    int getSpanIndex(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    int getSpanSize(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    void layoutChunk(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    int getMainDirSpec(int) -> getMainDirSpec
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
    void assignSpans(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    int getSpanCount() -> getSpanCount
    void setSpanCount(int) -> setSpanCount
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    void <init>() -> <init>
    int getSpanSize(int) -> getSpanSize
    int getSpanIndex(int,int) -> getSpanIndex
com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams -> com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    int mSpanIndex -> mSpanIndex
    int mSpanSize -> mSpanSize
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    int getSpanIndex() -> getSpanIndex
    int getSpanSize() -> getSpanSize
    int access$000(com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams) -> access$000
    int access$100(com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams) -> access$100
    int access$102(com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams,int) -> access$102
    int access$002(com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$LayoutParams,int) -> access$002
com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> com.easemob.redpacketui.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    android.util.SparseIntArray mSpanIndexCache -> mSpanIndexCache
    boolean mCacheSpanIndices -> mCacheSpanIndices
    void <init>() -> <init>
    int getSpanSize(int) -> getSpanSize
    void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
    void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    int getSpanIndex(int,int) -> getSpanIndex
    int findReferenceIndexFromCache(int) -> findReferenceIndexFromCache
    int getSpanGroupIndex(int,int) -> getSpanGroupIndex
com.easemob.redpacketui.recyclerview.widget.LayoutState -> com.easemob.redpacketui.recyclerview.widget.LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    int SCOLLING_OFFSET_NaN -> SCOLLING_OFFSET_NaN
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mStartLine -> mStartLine
    int mEndLine -> mEndLine
    void <init>() -> <init>
    boolean hasMore(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> hasMore
    android.view.View next(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> next
    java.lang.String toString() -> toString
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int INVALID_OFFSET -> INVALID_OFFSET
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int mOrientation -> mOrientation
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState -> mLayoutState
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper mOrientationHelper -> mOrientationHelper
    boolean mLastStackFromEnd -> mLastStackFromEnd
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    boolean mStackFromEnd -> mStackFromEnd
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    boolean mRecycleChildrenOnDetach -> mRecycleChildrenOnDetach
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int,boolean) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    void onDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void setStackFromEnd(boolean) -> setStackFromEnd
    boolean getStackFromEnd() -> getStackFromEnd
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean getReverseLayout() -> getReverseLayout
    void setReverseLayout(boolean) -> setReverseLayout
    android.view.View findViewByPosition(int) -> findViewByPosition
    int getExtraLayoutSpace(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    void smoothScrollToPosition(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void onLayoutChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    void onAnchorReady(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> onAnchorReady
    void layoutForPredictiveAnimations(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    void updateAnchorInfoForLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    int fixLayoutEndGap(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    int fixLayoutStartGap(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    void updateLayoutStateToFillEnd(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillStart(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    boolean isLayoutRTL() -> isLayoutRTL
    void ensureLayoutState() -> ensureLayoutState
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    int scrollHorizontallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    int computeHorizontalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeVerticalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeVerticalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    int computeScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    int computeScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    int computeScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    void updateLayoutState(int,int,boolean,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    int scrollBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollBy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void recycleChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    void recycleViewsFromStart(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    void recycleViewsFromEnd(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    void recycleByLayoutState(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    int fill(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> fill
    void layoutChunk(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState,com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    android.view.View getChildClosestToStart() -> getChildClosestToStart
    android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    android.view.View findReferenceChildClosestToEnd(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    android.view.View findReferenceChildClosestToStart(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    android.view.View findFirstReferenceChild(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    android.view.View findLastReferenceChild(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    android.view.View findReferenceChild(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    android.view.View onFocusSearchFailed(android.view.View,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    void logChildren() -> logChildren
    void validateChildOrder() -> validateChildOrder
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$1 -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$1:
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager,android.content.Context) -> <init>
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mCoordinate -> mCoordinate
    boolean mLayoutFromEnd -> mLayoutFromEnd
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager) -> <init>
    void reset() -> reset
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    void assignFromViewAndKeepVisibleRect(android.view.View) -> assignFromViewAndKeepVisibleRect
    void assignFromView(android.view.View) -> assignFromView
    boolean access$000(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$AnchorInfo,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$000
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    int mConsumed -> mConsumed
    boolean mFinished -> mFinished
    boolean mIgnoreConsumed -> mIgnoreConsumed
    boolean mFocusable -> mFocusable
    void <init>() -> <init>
    void resetInternal() -> resetInternal
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    int SCOLLING_OFFSET_NaN -> SCOLLING_OFFSET_NaN
    boolean mRecycle -> mRecycle
    int mOffset -> mOffset
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mScrollingOffset -> mScrollingOffset
    int mExtra -> mExtra
    boolean mIsPreLayout -> mIsPreLayout
    int mLastScrollDelta -> mLastScrollDelta
    java.util.List mScrapList -> mScrapList
    void <init>() -> <init>
    boolean hasMore(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> hasMore
    android.view.View next(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> next
    android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    void assignPositionFromScrapList() -> assignPositionFromScrapList
    void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
    void log() -> log
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mAnchorOffset -> mAnchorOffset
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    boolean hasValidAnchor() -> hasValidAnchor
    void invalidateAnchor() -> invalidateAnchor
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState$1 -> com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState$1:
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketui.recyclerview.widget.LinearSmoothScroller -> com.easemob.redpacketui.recyclerview.widget.LinearSmoothScroller:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    float MILLISECONDS_PER_INCH -> MILLISECONDS_PER_INCH
    int TARGET_SEEK_SCROLL_DISTANCE_PX -> TARGET_SEEK_SCROLL_DISTANCE_PX
    int SNAP_TO_START -> SNAP_TO_START
    int SNAP_TO_END -> SNAP_TO_END
    int SNAP_TO_ANY -> SNAP_TO_ANY
    float TARGET_SEEK_EXTRA_SCROLL_RATIO -> TARGET_SEEK_EXTRA_SCROLL_RATIO
    android.view.animation.LinearInterpolator mLinearInterpolator -> mLinearInterpolator
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.graphics.PointF mTargetVector -> mTargetVector
    float MILLISECONDS_PER_PX -> MILLISECONDS_PER_PX
    int mInterimTargetDx -> mInterimTargetDx
    int mInterimTargetDy -> mInterimTargetDy
    void <init>(android.content.Context) -> <init>
    void onStart() -> onStart
    void onTargetFound(android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void onSeekTargetStep(int,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onStop() -> onStop
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    int getVerticalSnapPreference() -> getVerticalSnapPreference
    void updateActionForInterimTarget(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
    int clampApplyScroll(int,int) -> clampApplyScroll
    int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
com.easemob.redpacketui.recyclerview.widget.OpReorderer -> com.easemob.redpacketui.recyclerview.widget.OpReorderer:
    com.easemob.redpacketui.recyclerview.widget.OpReorderer$Callback mCallback -> mCallback
    void <init>(com.easemob.redpacketui.recyclerview.widget.OpReorderer$Callback) -> <init>
    void reorderOps(java.util.List) -> reorderOps
    void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    void swapMoveRemove(java.util.List,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    void swapMoveAdd(java.util.List,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    void swapMoveUpdate(java.util.List,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp,int,com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
    int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
com.easemob.redpacketui.recyclerview.widget.OpReorderer$Callback -> com.easemob.redpacketui.recyclerview.widget.OpReorderer$Callback:
    com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
com.easemob.redpacketui.recyclerview.widget.OrientationHelper -> com.easemob.redpacketui.recyclerview.widget.OrientationHelper:
    int INVALID_SIZE -> INVALID_SIZE
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int mLastTotalSpace -> mLastTotalSpace
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    void onLayoutComplete() -> onLayoutComplete
    int getTotalSpaceChange() -> getTotalSpaceChange
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getStartAfterPadding() -> getStartAfterPadding
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper createOrientationHelper(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper createHorizontalHelper(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper createVerticalHelper(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,com.easemob.redpacketui.recyclerview.widget.OrientationHelper$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.OrientationHelper$1 -> com.easemob.redpacketui.recyclerview.widget.OrientationHelper$1:
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
com.easemob.redpacketui.recyclerview.widget.OrientationHelper$2 -> com.easemob.redpacketui.recyclerview.widget.OrientationHelper$2:
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
com.easemob.redpacketui.recyclerview.widget.PositionMap -> com.easemob.redpacketui.recyclerview.widget.PositionMap:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    com.easemob.redpacketui.recyclerview.widget.PositionMap clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void insertKeyRange(int,int) -> insertKeyRange
    void removeKeyRange(java.util.ArrayList,int,int) -> removeKeyRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    int idealByteArraySize(int) -> idealByteArraySize
    int idealBooleanArraySize(int) -> idealBooleanArraySize
    int idealShortArraySize(int) -> idealShortArraySize
    int idealCharArraySize(int) -> idealCharArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    int idealFloatArraySize(int) -> idealFloatArraySize
    int idealObjectArraySize(int) -> idealObjectArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.PositionMap$ContainerHelpers -> com.easemob.redpacketui.recyclerview.widget.PositionMap$ContainerHelpers:
    boolean[] EMPTY_BOOLEANS -> EMPTY_BOOLEANS
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    void <init>() -> <init>
    int binarySearch(int[],int,int) -> binarySearch
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.RecyclerView -> com.easemob.redpacketui.recyclerview.widget.RecyclerView:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int[] NESTED_SCROLLING_ATTRS -> NESTED_SCROLLING_ATTRS
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> FORCE_INVALIDATE_DISPLAY_LIST
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> ALLOW_SIZE_IN_UNSPECIFIED_SPEC
    boolean DISPATCH_TEMP_DETACH -> DISPATCH_TEMP_DETACH
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int NO_POSITION -> NO_POSITION
    long NO_ID -> NO_ID
    int INVALID_TYPE -> INVALID_TYPE
    int TOUCH_SLOP_DEFAULT -> TOUCH_SLOP_DEFAULT
    int TOUCH_SLOP_PAGING -> TOUCH_SLOP_PAGING
    int MAX_SCROLL_DURATION -> MAX_SCROLL_DURATION
    java.lang.String TRACE_SCROLL_TAG -> TRACE_SCROLL_TAG
    java.lang.String TRACE_ON_LAYOUT_TAG -> TRACE_ON_LAYOUT_TAG
    java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG -> TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG -> TRACE_HANDLE_ADAPTER_UPDATES_TAG
    java.lang.String TRACE_BIND_VIEW_TAG -> TRACE_BIND_VIEW_TAG
    java.lang.String TRACE_CREATE_VIEW_TAG -> TRACE_CREATE_VIEW_TAG
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver -> mObserver
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler mRecycler -> mRecycler
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> mPendingSavedState
    com.easemob.redpacketui.recyclerview.widget.AdapterHelper mAdapterHelper -> mAdapterHelper
    com.easemob.redpacketui.recyclerview.widget.ChildHelper mChildHelper -> mChildHelper
    com.easemob.redpacketui.recyclerview.widget.ViewInfoStore mViewInfoStore -> mViewInfoStore
    boolean mClipToPadding -> mClipToPadding
    java.lang.Runnable mUpdateChildViewsRunnable -> mUpdateChildViewsRunnable
    android.graphics.Rect mTempRect -> mTempRect
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter mAdapter -> mAdapter
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager mLayout -> mLayout
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener -> mRecyclerListener
    java.util.ArrayList mItemDecorations -> mItemDecorations
    java.util.ArrayList mOnItemTouchListeners -> mOnItemTouchListeners
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> mActiveOnItemTouchListener
    boolean mIsAttached -> mIsAttached
    boolean mHasFixedSize -> mHasFixedSize
    boolean mFirstLayoutComplete -> mFirstLayoutComplete
    int mEatRequestLayout -> mEatRequestLayout
    boolean mLayoutRequestEaten -> mLayoutRequestEaten
    boolean mLayoutFrozen -> mLayoutFrozen
    boolean mIgnoreMotionEventTillDown -> mIgnoreMotionEventTillDown
    int mEatenAccessibilityChangeFlags -> mEatenAccessibilityChangeFlags
    boolean mAdapterUpdateDuringMeasure -> mAdapterUpdateDuringMeasure
    boolean mPostUpdatesOnAnimation -> mPostUpdatesOnAnimation
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    java.util.List mOnChildAttachStateListeners -> mOnChildAttachStateListeners
    boolean mDataSetHasChangedAfterLayout -> mDataSetHasChangedAfterLayout
    int mLayoutOrScrollCounter -> mLayoutOrScrollCounter
    android.support.v4.widget.EdgeEffectCompat mLeftGlow -> mLeftGlow
    android.support.v4.widget.EdgeEffectCompat mTopGlow -> mTopGlow
    android.support.v4.widget.EdgeEffectCompat mRightGlow -> mRightGlow
    android.support.v4.widget.EdgeEffectCompat mBottomGlow -> mBottomGlow
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> mItemAnimator
    int INVALID_POINTER -> INVALID_POINTER
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    int mScrollState -> mScrollState
    int mScrollPointerId -> mScrollPointerId
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mInitialTouchX -> mInitialTouchX
    int mInitialTouchY -> mInitialTouchY
    int mLastTouchX -> mLastTouchX
    int mLastTouchY -> mLastTouchY
    int mTouchSlop -> mTouchSlop
    int mMinFlingVelocity -> mMinFlingVelocity
    int mMaxFlingVelocity -> mMaxFlingVelocity
    float mScrollFactor -> mScrollFactor
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> mViewFlinger
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$State mState -> mState
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> mScrollListener
    java.util.List mScrollListeners -> mScrollListeners
    boolean mItemsAddedOrRemoved -> mItemsAddedOrRemoved
    boolean mItemsChanged -> mItemsChanged
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> mItemAnimatorListener
    boolean mPostedAnimatorRunner -> mPostedAnimatorRunner
    com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    int[] mMinMaxLayoutPositions -> mMinMaxLayoutPositions
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> mScrollingChildHelper
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int[] mNestedOffsets -> mNestedOffsets
    java.lang.Runnable mItemAnimatorRunner -> mItemAnimatorRunner
    android.view.animation.Interpolator sQuinticInterpolator -> sQuinticInterpolator
    com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> mViewInfoProcessCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    void initChildrenHelper() -> initChildrenHelper
    void initAdapterManager() -> initAdapterManager
    void setHasFixedSize(boolean) -> setHasFixedSize
    boolean hasFixedSize() -> hasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void swapAdapter(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    void setAdapter(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    void setAdapterInternal(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void addOnChildAttachStateChangeListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    void removeOnChildAttachStateChangeListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    void setLayoutManager(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void addItemDecoration(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    void addItemDecoration(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    void removeItemDecoration(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    void setChildDrawingOrderCallback(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setOnScrollListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void addOnScrollListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    void removeOnScrollListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    void clearOnScrollListeners() -> clearOnScrollListeners
    void scrollToPosition(int) -> scrollToPosition
    void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    void smoothScrollToPosition(int) -> smoothScrollToPosition
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    boolean hasUpdatedView() -> hasUpdatedView
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> eatRequestLayout
    void resumeRequestLayout(boolean) -> resumeRequestLayout
    void setLayoutFrozen(boolean) -> setLayoutFrozen
    boolean isLayoutFrozen() -> isLayoutFrozen
    void smoothScrollBy(int,int) -> smoothScrollBy
    boolean fling(int,int) -> fling
    void stopScroll() -> stopScroll
    void stopScrollersInternal() -> stopScrollersInternal
    int getMinFlingVelocity() -> getMinFlingVelocity
    int getMaxFlingVelocity() -> getMaxFlingVelocity
    void pullGlows(float,float,float,float) -> pullGlows
    void releaseGlows() -> releaseGlows
    void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    void absorbGlows(int,int) -> absorbGlows
    void ensureLeftGlow() -> ensureLeftGlow
    void ensureRightGlow() -> ensureRightGlow
    void ensureTopGlow() -> ensureTopGlow
    void ensureBottomGlow() -> ensureBottomGlow
    void invalidateGlows() -> invalidateGlows
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void addOnItemTouchListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    void removeOnItemTouchListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void resetTouch() -> resetTouch
    void cancelTouch() -> cancelTouch
    void onPointerUp(android.view.MotionEvent) -> onPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getScrollFactor() -> getScrollFactor
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> defaultOnMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    boolean isComputingLayout() -> isComputingLayout
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    void postAnimationRunner() -> postAnimationRunner
    boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    void dispatchLayout() -> dispatchLayout
    void dispatchLayoutStep1() -> dispatchLayoutStep1
    void dispatchLayoutStep2() -> dispatchLayoutStep2
    void dispatchLayoutStep3() -> dispatchLayoutStep3
    void handleMissingPreInfoForChangeError(long,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    void recordAnimationInfoIfBouncedHiddenView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    boolean didChildRangeChange(int,int) -> didChildRangeChange
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    void animateAppearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    void animateDisappearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    void animateChange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean isAnimating() -> isAnimating
    void saveOldPositions() -> saveOldPositions
    void clearOldPositions() -> clearOldPositions
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
    boolean canReuseUpdatedViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    void setDataSetChangedAfterLayout() -> setDataSetChangedAfterLayout
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void invalidateItemDecorations() -> invalidateItemDecorations
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    long getChildItemId(android.view.View) -> getChildItemId
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    void onScrolled(int,int) -> onScrolled
    void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    void onScrollStateChanged(int) -> onScrollStateChanged
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    void repositionShadowingViews() -> repositionShadowingViews
    void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    int getAdapterPositionFor(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    boolean access$100(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$100
    boolean access$200(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$200
    boolean access$302(com.easemob.redpacketui.recyclerview.widget.RecyclerView,boolean) -> access$302
    void access$400(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$400
    boolean access$602(com.easemob.redpacketui.recyclerview.widget.RecyclerView,boolean) -> access$602
    void access$700(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> access$700
    void access$800(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> access$800
    boolean access$900(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$900
    void access$1000(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$1000
    void access$1100(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> access$1100
    void access$1200(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> access$1200
    void access$1300(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$1300
    void access$1400(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> access$1400
    android.view.animation.Interpolator access$3000() -> access$3000
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter access$3100(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3100
    void access$3200(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3200
    void access$3300(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3300
    void access$3400(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3400
    java.util.ArrayList access$3600(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3600
    void access$3700(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> access$3700
    boolean access$3800(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$3800
    void access$3900(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> access$3900
    void access$4000(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4000
    boolean access$4100(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4100
    boolean access$4200(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4200
    boolean access$4300(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4300
    java.lang.Runnable access$4400(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4400
    boolean access$4502(com.easemob.redpacketui.recyclerview.widget.RecyclerView,boolean) -> access$4502
    boolean access$4600() -> access$4600
    void access$4700(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> access$4700
    com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate access$4800(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$4800
    boolean access$5200(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$5200
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerListener access$5300(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$5300
    android.graphics.Rect access$5400(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$5400
    boolean access$5500(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$5500
    void access$5600(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> access$5600
    int access$5700(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$5700
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewFlinger access$5900(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$5900
    void access$6200(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> access$6200
    boolean access$6400(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> access$6400
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.RecyclerView$1 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$1:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.RecyclerView$2 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$2:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.RecyclerView$3 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$3:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.easemob.redpacketui.recyclerview.widget.RecyclerView$4 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$4:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void processDisappeared(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void unused(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> unused
com.easemob.redpacketui.recyclerview.widget.RecyclerView$5 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$5:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
com.easemob.redpacketui.recyclerview.widget.RecyclerView$6 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$6:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    void onDispatchFirstPass(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void dispatchUpdate(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    void onDispatchSecondPass(com.easemob.redpacketui.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable -> mObservable
    boolean mHasStableIds -> mHasStableIds
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void onBindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    void bindViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    int getItemViewType(int) -> getItemViewType
    void setHasStableIds(boolean) -> setHasStableIds
    long getItemId(int) -> getItemId
    int getItemCount() -> getItemCount
    boolean hasStableIds() -> hasStableIds
    void onViewRecycled(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    boolean onFailedToRecycleView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    void onViewAttachedToWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    boolean hasObservers() -> hasObservers
    void registerAdapterDataObserver(com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    void unregisterAdapterDataObserver(com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
    void onAttachedToRecyclerView(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    void onDetachedFromRecyclerView(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyItemChanged(int) -> notifyItemChanged
    void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    void notifyItemInserted(int) -> notifyItemInserted
    void notifyItemMoved(int,int) -> notifyItemMoved
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRemoved(int) -> notifyItemRemoved
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObservable -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObservable:
    void <init>() -> <init>
    boolean hasObservers() -> hasObservers
    void notifyChanged() -> notifyChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    void notifyItemMoved(int,int) -> notifyItemMoved
com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObserver -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$AdapterDataObserver:
    void <init>() -> <init>
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback:
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator:
    int FLAG_CHANGED -> FLAG_CHANGED
    int FLAG_REMOVED -> FLAG_REMOVED
    int FLAG_INVALIDATED -> FLAG_INVALIDATED
    int FLAG_MOVED -> FLAG_MOVED
    int FLAG_APPEARED_IN_PRE_LAYOUT -> FLAG_APPEARED_IN_PRE_LAYOUT
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> mListener
    java.util.ArrayList mFinishedListeners -> mFinishedListeners
    long mAddDuration -> mAddDuration
    long mRemoveDuration -> mRemoveDuration
    long mMoveDuration -> mMoveDuration
    long mChangeDuration -> mChangeDuration
    void <init>() -> <init>
    long getMoveDuration() -> getMoveDuration
    void setMoveDuration(long) -> setMoveDuration
    long getAddDuration() -> getAddDuration
    void setAddDuration(long) -> setAddDuration
    long getRemoveDuration() -> getRemoveDuration
    void setRemoveDuration(long) -> setRemoveDuration
    long getChangeDuration() -> getChangeDuration
    void setChangeDuration(long) -> setChangeDuration
    void setListener(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    boolean animateDisappearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    boolean animateAppearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    boolean animatePersistence(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    boolean animateChange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    int buildAdapterChangeFlagsForAnimations(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    void runPendingAnimations() -> runPendingAnimations
    void endAnimation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    void endAnimations() -> endAnimations
    boolean isRunning() -> isRunning
    void dispatchAnimationFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    void onAnimationFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    void dispatchAnimationStarted(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    void onAnimationStarted(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    boolean isRunning(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    boolean canReuseUpdatedViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    boolean canReuseUpdatedViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges:
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
    void onAnimationsFinished() -> onAnimationsFinished
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    void onAnimationFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    int left -> left
    int top -> top
    int right -> right
    int bottom -> bottom
    int changeFlags -> changeFlags
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void onAnimationFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemDecoration -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemDecoration:
    void <init>() -> <init>
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onDraw
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onDraw
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onDrawOver
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onDrawOver
    void getItemOffsets(android.graphics.Rect,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> getItemOffsets
    void getItemOffsets(android.graphics.Rect,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager:
    com.easemob.redpacketui.recyclerview.widget.ChildHelper mChildHelper -> mChildHelper
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mRecyclerView -> mRecyclerView
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller -> mSmoothScroller
    boolean mRequestedSimpleAnimations -> mRequestedSimpleAnimations
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    boolean mAutoMeasure -> mAutoMeasure
    boolean mMeasurementCacheEnabled -> mMeasurementCacheEnabled
    int mWidthMode -> mWidthMode
    int mHeightMode -> mHeightMode
    int mWidth -> mWidth
    int mHeight -> mHeight
    void <init>() -> <init>
    void setRecyclerView(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> setRecyclerView
    void setMeasureSpecs(int,int) -> setMeasureSpecs
    void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    void requestLayout() -> requestLayout
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    int chooseSize(int,int,int) -> chooseSize
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void dispatchAttachedToWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    void dispatchDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    void onAttachedToWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    void onDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    void onDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    boolean getClipToPadding() -> getClipToPadding
    void onLayoutChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    int scrollHorizontallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void scrollToPosition(int) -> scrollToPosition
    void smoothScrollToPosition(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void startSmoothScroll(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    boolean isSmoothScrolling() -> isSmoothScrolling
    int getLayoutDirection() -> getLayoutDirection
    void endAnimation(android.view.View) -> endAnimation
    void addDisappearingView(android.view.View) -> addDisappearingView
    void addDisappearingView(android.view.View,int) -> addDisappearingView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addViewInt(android.view.View,int,boolean) -> addViewInt
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    int getBaseline() -> getBaseline
    int getPosition(android.view.View) -> getPosition
    int getItemViewType(android.view.View) -> getItemViewType
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    android.view.View findViewByPosition(int) -> findViewByPosition
    void detachView(android.view.View) -> detachView
    void detachViewAt(int) -> detachViewAt
    void detachViewInternal(int,android.view.View) -> detachViewInternal
    void attachView(android.view.View,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    void attachView(android.view.View,int) -> attachView
    void attachView(android.view.View) -> attachView
    void removeDetachedView(android.view.View) -> removeDetachedView
    void moveView(int,int) -> moveView
    void detachAndScrapView(android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    void detachAndScrapViewAt(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    void removeAndRecycleView(android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    void removeAndRecycleViewAt(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    int getChildCount() -> getChildCount
    android.view.View getChildAt(int) -> getChildAt
    int getWidthMode() -> getWidthMode
    int getHeightMode() -> getHeightMode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    int getPaddingStart() -> getPaddingStart
    int getPaddingEnd() -> getPaddingEnd
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    android.view.View getFocusedChild() -> getFocusedChild
    int getItemCount() -> getItemCount
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void ignoreView(android.view.View) -> ignoreView
    void stopIgnoringView(android.view.View) -> stopIgnoringView
    void detachAndScrapAttachedViews(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    void scrapOrRecycleView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    void removeAndRecycleScrapInt(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    void measureChild(android.view.View,int,int) -> measureChild
    boolean shouldReMeasureChild(android.view.View,int,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    boolean shouldMeasureChild(android.view.View,int,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    int getDecoratedTop(android.view.View) -> getDecoratedTop
    int getDecoratedRight(android.view.View) -> getDecoratedRight
    int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    android.view.View onFocusSearchFailed(android.view.View,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    boolean requestChildRectangleOnScreen(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean onRequestChildFocus(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    boolean onRequestChildFocus(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    void onAdapterChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    boolean onAddFocusables(com.easemob.redpacketui.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    void onItemsChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onItemsChanged
    void onItemsAdded(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsRemoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    void onItemsUpdated(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void onItemsMoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    int computeHorizontalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeVerticalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeVerticalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    void onMeasure(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    void setMeasuredDimension(int,int) -> setMeasuredDimension
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void stopSmoothScroller() -> stopSmoothScroller
    void onSmoothScrollerStopped(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    void onScrollStateChanged(int) -> onScrollStateChanged
    void removeAndRecycleAllViews(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityNodeInfo(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityNodeInfoForItem(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    int getSelectionModeForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    int getRowCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    boolean isLayoutHierarchical(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityAction(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    boolean performAccessibilityActionForItem(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    void setExactMeasureSpecsFrom(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    boolean shouldMeasureTwice() -> shouldMeasureTwice
    boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    boolean access$2000(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> access$2000
    boolean access$2600(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> access$2600
    boolean access$2602(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> access$2602
    void access$6000(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller) -> access$6000
com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager$Properties -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    int orientation -> orientation
    int spanCount -> spanCount
    boolean reverseLayout -> reverseLayout
    boolean stackFromEnd -> stackFromEnd
    void <init>() -> <init>
com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    android.graphics.Rect mDecorInsets -> mDecorInsets
    boolean mInsetsDirty -> mInsetsDirty
    boolean mPendingInvalidate -> mPendingInvalidate
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    boolean viewNeedsUpdate() -> viewNeedsUpdate
    boolean isViewInvalid() -> isViewInvalid
    boolean isItemRemoved() -> isItemRemoved
    boolean isItemChanged() -> isItemChanged
    int getViewPosition() -> getViewPosition
    int getViewLayoutPosition() -> getViewLayoutPosition
    int getViewAdapterPosition() -> getViewAdapterPosition
com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener:
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener:
    boolean onInterceptTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnScrollListener:
    void <init>() -> <init>
    void onScrollStateChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool:
    android.util.SparseArray mScrap -> mScrap
    android.util.SparseIntArray mMaxScrap -> mMaxScrap
    int mAttachCount -> mAttachCount
    int DEFAULT_MAX_SCRAP -> DEFAULT_MAX_SCRAP
    void <init>() -> <init>
    void clear() -> clear
    void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    int size() -> size
    void putRecycledView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    void attach(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter) -> attach
    void detach() -> detach
    void onAdapterChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    java.util.ArrayList getScrapHeapForType(int) -> getScrapHeapForType
com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler:
    java.util.ArrayList mAttachedScrap -> mAttachedScrap
    java.util.ArrayList mChangedScrap -> mChangedScrap
    java.util.ArrayList mCachedViews -> mCachedViews
    java.util.List mUnmodifiableAttachedScrap -> mUnmodifiableAttachedScrap
    int mViewCacheMax -> mViewCacheMax
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> mRecyclerPool
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> mViewCacheExtension
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void clear() -> clear
    void setViewCacheSize(int) -> setViewCacheSize
    java.util.List getScrapList() -> getScrapList
    boolean validateViewHolderForOffsetPosition(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    android.view.View getViewForPosition(int) -> getViewForPosition
    android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    void attachAccessibilityDelegate(android.view.View) -> attachAccessibilityDelegate
    void invalidateDisplayListInt(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    void recycleView(android.view.View) -> recycleView
    void recycleViewInternal(android.view.View) -> recycleViewInternal
    void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    void recycleCachedViewAt(int) -> recycleCachedViewAt
    void recycleViewHolderInternal(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    void addViewHolderToRecycledViewPool(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> addViewHolderToRecycledViewPool
    void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    void scrapView(android.view.View) -> scrapView
    void unscrapView(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    int getScrapCount() -> getScrapCount
    android.view.View getScrapViewAt(int) -> getScrapViewAt
    void clearScrap() -> clearScrap
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getScrapViewForPosition(int,int,boolean) -> getScrapViewForPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getScrapViewForId(long,int,boolean) -> getScrapViewForId
    void dispatchViewRecycled(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    void onAdapterChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void setViewCacheExtension(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setRecycledViewPool(com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void viewRangeUpdate(int,int) -> viewRangeUpdate
    void setAdapterPositionsAsUnknown() -> setAdapterPositionsAsUnknown
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void clearOldPositions() -> clearOldPositions
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    java.util.ArrayList access$2900(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> access$2900
com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerListener:
    void onViewRecycled(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void triggerUpdateProcessor() -> triggerUpdateProcessor
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> mLayoutState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    void access$1900(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState) -> access$1900
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState$1 -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState$1:
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketui.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    void <init>() -> <init>
    boolean onInterceptTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller:
    int mTargetPosition -> mTargetPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mRecyclerView -> mRecyclerView
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    boolean mPendingInitialRun -> mPendingInitialRun
    boolean mRunning -> mRunning
    android.view.View mTargetView -> mTargetView
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> mRecyclingAction
    void <init>() -> <init>
    void start(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager) -> start
    void setTargetPosition(int) -> setTargetPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    void stop() -> stop
    boolean isPendingInitialRun() -> isPendingInitialRun
    boolean isRunning() -> isRunning
    int getTargetPosition() -> getTargetPosition
    void onAnimation(int,int) -> onAnimation
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildCount() -> getChildCount
    android.view.View findViewByPosition(int) -> findViewByPosition
    void instantScrollToPosition(int) -> instantScrollToPosition
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void normalize(android.graphics.PointF) -> normalize
    void onStart() -> onStart
    void onStop() -> onStop
    void onSeekTargetStep(int,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onTargetFound(android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void access$3500(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller,int,int) -> access$3500
com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    int UNDEFINED_DURATION -> UNDEFINED_DURATION
    int mDx -> mDx
    int mDy -> mDy
    int mDuration -> mDuration
    int mJumpToPosition -> mJumpToPosition
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean changed -> changed
    int consecutiveUpdates -> consecutiveUpdates
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    void jumpTo(int) -> jumpTo
    boolean hasJumpTarget() -> hasJumpTarget
    void runIfNecessary(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> runIfNecessary
    void validate() -> validate
    int getDx() -> getDx
    void setDx(int) -> setDx
    int getDy() -> getDy
    void setDy(int) -> setDy
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void update(int,int,int,android.view.animation.Interpolator) -> update
    void access$6100(com.easemob.redpacketui.recyclerview.widget.RecyclerView$SmoothScroller$Action,com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> access$6100
com.easemob.redpacketui.recyclerview.widget.RecyclerView$State -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$State:
    int STEP_START -> STEP_START
    int STEP_LAYOUT -> STEP_LAYOUT
    int STEP_ANIMATIONS -> STEP_ANIMATIONS
    int mTargetPosition -> mTargetPosition
    int mLayoutStep -> mLayoutStep
    android.util.SparseArray mData -> mData
    int mItemCount -> mItemCount
    int mPreviousLayoutItemCount -> mPreviousLayoutItemCount
    int mDeletedInvisibleItemCountSincePreviousLayout -> mDeletedInvisibleItemCountSincePreviousLayout
    boolean mStructureChanged -> mStructureChanged
    boolean mInPreLayout -> mInPreLayout
    boolean mRunSimpleAnimations -> mRunSimpleAnimations
    boolean mRunPredictiveAnimations -> mRunPredictiveAnimations
    boolean mTrackOldChangeHolders -> mTrackOldChangeHolders
    boolean mIsMeasuring -> mIsMeasuring
    void <init>() -> <init>
    void assertLayoutStep(int) -> assertLayoutStep
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$State reset() -> reset
    boolean isMeasuring() -> isMeasuring
    boolean isPreLayout() -> isPreLayout
    boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    boolean willRunSimpleAnimations() -> willRunSimpleAnimations
    void remove(int) -> remove
    java.lang.Object get(int) -> get
    void put(int,java.lang.Object) -> put
    int getTargetScrollPosition() -> getTargetScrollPosition
    boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    boolean didStructureChange() -> didStructureChange
    int getItemCount() -> getItemCount
    java.lang.String toString() -> toString
    int access$1700(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$1700
    int access$1702(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> access$1702
    boolean access$1802(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$1802
    int access$2100(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$2100
    boolean access$2202(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$2202
    boolean access$2300(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$2300
    boolean access$2402(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$2402
    boolean access$2502(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$2502
    boolean access$2302(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$2302
    boolean access$2500(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$2500
    boolean access$2702(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> access$2702
    boolean access$2700(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$2700
    boolean access$1800(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$1800
    int access$2102(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> access$2102
    int access$2802(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> access$2802
    boolean access$2400(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> access$2400
    int access$5802(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> access$5802
com.easemob.redpacketui.recyclerview.widget.RecyclerView$State$LayoutState -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$State$LayoutState:
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewCacheExtension -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewCacheExtension:
    void <init>() -> <init>
    android.view.View getViewForPositionAndType(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int,int) -> getViewForPositionAndType
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewFlinger -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewFlinger:
    int mLastFlingX -> mLastFlingX
    int mLastFlingY -> mLastFlingY
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mEatRunOnAnimationRequest -> mEatRunOnAnimationRequest
    boolean mReSchedulePostAnimationCallback -> mReSchedulePostAnimationCallback
    com.easemob.redpacketui.recyclerview.widget.RecyclerView this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    void run() -> run
    void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    void postOnAnimation() -> postOnAnimation
    void fling(int,int) -> fling
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    void smoothScrollBy(int,int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    void stop() -> stop
com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder -> com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder:
    android.view.View itemView -> itemView
    int mPosition -> mPosition
    int mOldPosition -> mOldPosition
    long mItemId -> mItemId
    int mItemViewType -> mItemViewType
    int mPreLayoutPosition -> mPreLayoutPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder -> mShadowedHolder
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder -> mShadowingHolder
    int FLAG_BOUND -> FLAG_BOUND
    int FLAG_UPDATE -> FLAG_UPDATE
    int FLAG_INVALID -> FLAG_INVALID
    int FLAG_REMOVED -> FLAG_REMOVED
    int FLAG_NOT_RECYCLABLE -> FLAG_NOT_RECYCLABLE
    int FLAG_RETURNED_FROM_SCRAP -> FLAG_RETURNED_FROM_SCRAP
    int FLAG_IGNORE -> FLAG_IGNORE
    int FLAG_TMP_DETACHED -> FLAG_TMP_DETACHED
    int FLAG_ADAPTER_POSITION_UNKNOWN -> FLAG_ADAPTER_POSITION_UNKNOWN
    int FLAG_ADAPTER_FULLUPDATE -> FLAG_ADAPTER_FULLUPDATE
    int FLAG_MOVED -> FLAG_MOVED
    int FLAG_APPEARED_IN_PRE_LAYOUT -> FLAG_APPEARED_IN_PRE_LAYOUT
    int FLAG_BOUNCED_FROM_HIDDEN_LIST -> FLAG_BOUNCED_FROM_HIDDEN_LIST
    int mFlags -> mFlags
    java.util.List FULLUPDATE_PAYLOADS -> FULLUPDATE_PAYLOADS
    java.util.List mPayloads -> mPayloads
    java.util.List mUnmodifiedPayloads -> mUnmodifiedPayloads
    int mIsRecyclableCount -> mIsRecyclableCount
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler mScrapContainer -> mScrapContainer
    boolean mInChangeScrap -> mInChangeScrap
    int mWasImportantForAccessibilityBeforeHidden -> mWasImportantForAccessibilityBeforeHidden
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mOwnerRecyclerView -> mOwnerRecyclerView
    void <init>(android.view.View) -> <init>
    void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    void offsetPosition(int,boolean) -> offsetPosition
    void clearOldPosition() -> clearOldPosition
    void saveOldPosition() -> saveOldPosition
    boolean shouldIgnore() -> shouldIgnore
    int getPosition() -> getPosition
    int getLayoutPosition() -> getLayoutPosition
    int getAdapterPosition() -> getAdapterPosition
    int getOldPosition() -> getOldPosition
    long getItemId() -> getItemId
    int getItemViewType() -> getItemViewType
    boolean isScrap() -> isScrap
    void unScrap() -> unScrap
    boolean wasReturnedFromScrap() -> wasReturnedFromScrap
    void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    void clearTmpDetachFlag() -> clearTmpDetachFlag
    void stopIgnoring() -> stopIgnoring
    void setScrapContainer(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    boolean isInvalid() -> isInvalid
    boolean needsUpdate() -> needsUpdate
    boolean isBound() -> isBound
    boolean isRemoved() -> isRemoved
    boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    boolean isTmpDetached() -> isTmpDetached
    boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    void setFlags(int,int) -> setFlags
    void addFlags(int) -> addFlags
    void addChangePayload(java.lang.Object) -> addChangePayload
    void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    void clearPayload() -> clearPayload
    java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    void resetInternal() -> resetInternal
    void onEnteredHiddenState() -> onEnteredHiddenState
    void onLeftHiddenState() -> onLeftHiddenState
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> setIsRecyclable
    boolean isRecyclable() -> isRecyclable
    boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    boolean isUpdated() -> isUpdated
    void access$1500(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$1500
    void access$1600(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$1600
    boolean access$4900(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$4900
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler access$5002(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> access$5002
    boolean access$5102(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> access$5102
    boolean access$5100(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$5100
    boolean access$6300(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$6300
    int access$6500(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$6500
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate -> com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> mItemDelegate
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> <init>
    boolean shouldIgnore() -> shouldIgnore
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    boolean access$000(com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> access$000
com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate$1 -> com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate$1:
    com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.easemob.redpacketui.recyclerview.widget.ScrollbarHelper -> com.easemob.redpacketui.recyclerview.widget.ScrollbarHelper:
    void <init>() -> <init>
    int computeScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    int computeScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    int computeScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
com.easemob.redpacketui.recyclerview.widget.SimpleItemAnimator -> com.easemob.redpacketui.recyclerview.widget.SimpleItemAnimator:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean mSupportsChangeAnimations -> mSupportsChangeAnimations
    void <init>() -> <init>
    boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
    boolean canReuseUpdatedViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    boolean animateDisappearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    boolean animateAppearance(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    boolean animatePersistence(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    boolean animateChange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    boolean animateRemove(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    boolean animateAdd(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    boolean animateMove(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    boolean animateChange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void dispatchRemoveFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    void dispatchMoveFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    void dispatchAddFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    void dispatchChangeFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    void dispatchRemoveStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    void dispatchMoveStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    void dispatchAddStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    void dispatchChangeStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    void onRemoveStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    void onRemoveFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void onAddStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    void onAddFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    void onMoveStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    void onMoveFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    void onChangeStarting(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    void onChangeFinished(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int GAP_HANDLING_NONE -> GAP_HANDLING_NONE
    int GAP_HANDLING_LAZY -> GAP_HANDLING_LAZY
    int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS -> GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    int INVALID_OFFSET -> INVALID_OFFSET
    int mSpanCount -> mSpanCount
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> mSpans
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper mPrimaryOrientation -> mPrimaryOrientation
    com.easemob.redpacketui.recyclerview.widget.OrientationHelper mSecondaryOrientation -> mSecondaryOrientation
    int mOrientation -> mOrientation
    int mSizePerSpan -> mSizePerSpan
    com.easemob.redpacketui.recyclerview.widget.LayoutState mLayoutState -> mLayoutState
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    java.util.BitSet mRemainingSpans -> mRemainingSpans
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> mLazySpanLookup
    int mGapStrategy -> mGapStrategy
    boolean mLastLayoutFromEnd -> mLastLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    int mFullSizeSpec -> mFullSizeSpec
    int mWidthSpec -> mWidthSpec
    int mHeightSpec -> mHeightSpec
    android.graphics.Rect mTmpRect -> mTmpRect
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    boolean mLaidOutInvalidFullSpan -> mLaidOutInvalidFullSpan
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    java.lang.Runnable mCheckForGapsRunnable -> mCheckForGapsRunnable
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(int,int) -> <init>
    boolean checkForGaps() -> checkForGaps
    void onScrollStateChanged(int) -> onScrollStateChanged
    void onDetachedFromWindow(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    android.view.View hasGapsToFix() -> hasGapsToFix
    boolean checkSpanForGap(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    void setSpanCount(int) -> setSpanCount
    void setOrientation(int) -> setOrientation
    void setReverseLayout(boolean) -> setReverseLayout
    int getGapStrategy() -> getGapStrategy
    void setGapStrategy(int) -> setGapStrategy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    int getSpanCount() -> getSpanCount
    void invalidateSpanAssignments() -> invalidateSpanAssignments
    void ensureOrientationHelper() -> ensureOrientationHelper
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean isLayoutRTL() -> isLayoutRTL
    boolean getReverseLayout() -> getReverseLayout
    void onLayoutChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    void applyPendingSavedState(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    void updateAnchorInfoForLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    void updateMeasureSpecs() -> updateMeasureSpecs
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    int computeHorizontalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    int computeVerticalScrollOffset(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    int computeVerticalScrollExtent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    int computeVerticalScrollRange(com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    void measureChildWithDecorationsAndMargin(android.view.View,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams) -> measureChildWithDecorationsAndMargin
    int getSpecForDimension(int,int) -> getSpecForDimension
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> measureChildWithDecorationsAndMargin
    int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onInitializeAccessibilityNodeInfoForItem(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    int getRowCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    android.view.View findFirstVisibleItemClosestToStart(boolean,boolean) -> findFirstVisibleItemClosestToStart
    android.view.View findFirstVisibleItemClosestToEnd(boolean,boolean) -> findFirstVisibleItemClosestToEnd
    void fixEndGap(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    void fixStartGap(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    void updateLayoutState(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    void setLayoutStateDirection(int) -> setLayoutStateDirection
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onItemsRemoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsAdded(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> onItemsChanged
    void onItemsMoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    void onItemsUpdated(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void handleUpdate(int,int,int) -> handleUpdate
    int fill(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.LayoutState,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> fill
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    void attachViewToSpans(android.view.View,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,com.easemob.redpacketui.recyclerview.widget.LayoutState) -> attachViewToSpans
    void recycle(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.LayoutState) -> recycle
    void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    void updateRemainingSpans(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    int getMaxStart(int) -> getMaxStart
    int getMinStart(int) -> getMinStart
    boolean areAllEndsEqual() -> areAllEndsEqual
    boolean areAllStartsEqual() -> areAllStartsEqual
    int getMaxEnd(int) -> getMaxEnd
    int getMinEnd(int) -> getMinEnd
    void recycleFromStart(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    void recycleFromEnd(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    boolean preferLastSpan(int) -> preferLastSpan
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(com.easemob.redpacketui.recyclerview.widget.LayoutState) -> getNextSpan
    boolean canScrollVertically() -> canScrollVertically
    boolean canScrollHorizontally() -> canScrollHorizontally
    int scrollHorizontallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    void smoothScrollToPosition(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    int scrollBy(int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$Recycler,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> scrollBy
    int getLastChildPosition() -> getLastChildPosition
    int getFirstChildPosition() -> getFirstChildPosition
    int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    int getOrientation() -> getOrientation
    boolean access$100(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager) -> access$100
    int access$400(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager,int) -> access$400
    int access$500(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager) -> access$500
    boolean access$600(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager) -> access$600
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$1 -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$1:
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$2 -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$2:
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager,android.content.Context) -> <init>
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mOffset -> mOffset
    boolean mLayoutFromEnd -> mLayoutFromEnd
    boolean mInvalidateOffsets -> mInvalidateOffsets
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    void reset() -> reset
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> mSpan
    boolean mFullSpan -> mFullSpan
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    void setFullSpan(boolean) -> setFullSpan
    boolean isFullSpan() -> isFullSpan
    int getSpanIndex() -> getSpanIndex
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int MIN_SIZE -> MIN_SIZE
    int[] mData -> mData
    java.util.List mFullSpanItems -> mFullSpanItems
    void <init>() -> <init>
    int forceInvalidateAfter(int) -> forceInvalidateAfter
    int invalidateAfter(int) -> invalidateAfter
    int getSpan(int) -> getSpan
    void setSpan(int,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    int sizeForPosition(int) -> sizeForPosition
    void ensureSize(int) -> ensureSize
    void clear() -> clear
    void offsetForRemoval(int,int) -> offsetForRemoval
    void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    void offsetForAddition(int,int) -> offsetForAddition
    void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    void addFullSpanItem(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> mPosition
    int mGapDir -> mGapDir
    int[] mGapPerSpan -> mGapPerSpan
    boolean mHasUnwantedGapAfter -> mHasUnwantedGapAfter
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>() -> <init>
    int getGapForSpan(int) -> getGapForSpan
    void invalidateSpanGaps() -> invalidateSpanGaps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mVisibleAnchorPosition -> mVisibleAnchorPosition
    int mSpanOffsetsSize -> mSpanOffsetsSize
    int[] mSpanOffsets -> mSpanOffsets
    int mSpanLookupSize -> mSpanLookupSize
    int[] mSpanLookup -> mSpanLookup
    java.util.List mFullSpanItems -> mFullSpanItems
    boolean mReverseLayout -> mReverseLayout
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    void invalidateSpanInfo() -> invalidateSpanInfo
    void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span -> com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span:
    int INVALID_LINE -> INVALID_LINE
    java.util.ArrayList mViews -> mViews
    int mCachedStart -> mCachedStart
    int mCachedEnd -> mCachedEnd
    int mDeletedSize -> mDeletedSize
    int mIndex -> mIndex
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    int getStartLine(int) -> getStartLine
    void calculateCachedStart() -> calculateCachedStart
    int getStartLine() -> getStartLine
    int getEndLine(int) -> getEndLine
    void calculateCachedEnd() -> calculateCachedEnd
    int getEndLine() -> getEndLine
    void prependToSpan(android.view.View) -> prependToSpan
    void appendToSpan(android.view.View) -> appendToSpan
    void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    void clear() -> clear
    void invalidateCache() -> invalidateCache
    void setLine(int) -> setLine
    void popEnd() -> popEnd
    void popStart() -> popStart
    int getDeletedSize() -> getDeletedSize
    com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    void onOffset(int) -> onOffset
    int getNormalizedOffset(int,int,int) -> getNormalizedOffset
    boolean isEmpty(int,int) -> isEmpty
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    void <init>(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager,int,com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$1) -> <init>
    java.util.ArrayList access$300(com.easemob.redpacketui.recyclerview.widget.StaggeredGridLayoutManager$Span) -> access$300
com.easemob.redpacketui.recyclerview.widget.ViewInfoStore -> com.easemob.redpacketui.recyclerview.widget.ViewInfoStore:
    boolean DEBUG -> DEBUG
    android.support.v4.util.ArrayMap mLayoutHolderMap -> mLayoutHolderMap
    android.support.v4.util.LongSparseArray mOldChangedHolders -> mOldChangedHolders
    void <init>() -> <init>
    void clear() -> clear
    void addToPreLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    boolean isDisappearing(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    void addToOldChangeHolders(long,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    void addToAppearedInPreLayoutHolders(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    boolean isInPreLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    void addToPostLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    void addToDisappearedInLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    void removeFromDisappearedInLayout(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    void process(com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    void removeViewHolder(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
    void onDetach() -> onDetach
    void onViewDetached(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$InfoRecord -> com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$InfoRecord:
    int FLAG_DISAPPEARED -> FLAG_DISAPPEARED
    int FLAG_APPEAR -> FLAG_APPEAR
    int FLAG_PRE -> FLAG_PRE
    int FLAG_POST -> FLAG_POST
    int FLAG_APPEAR_AND_DISAPPEAR -> FLAG_APPEAR_AND_DISAPPEAR
    int FLAG_PRE_AND_POST -> FLAG_PRE_AND_POST
    int FLAG_APPEAR_PRE_AND_POST -> FLAG_APPEAR_PRE_AND_POST
    int flags -> flags
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> preInfo
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> postInfo
    android.support.v4.util.Pools$Pool sPool -> sPool
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    void recycle(com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
    void drainCache() -> drainCache
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$ProcessCallback -> com.easemob.redpacketui.recyclerview.widget.ViewInfoStore$ProcessCallback:
    void processDisappeared(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void unused(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> unused
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper:
    int UP -> UP
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int START -> START
    int END -> END
    int ACTION_STATE_IDLE -> ACTION_STATE_IDLE
    int ACTION_STATE_SWIPE -> ACTION_STATE_SWIPE
    int ACTION_STATE_DRAG -> ACTION_STATE_DRAG
    int ANIMATION_TYPE_SWIPE_SUCCESS -> ANIMATION_TYPE_SWIPE_SUCCESS
    int ANIMATION_TYPE_SWIPE_CANCEL -> ANIMATION_TYPE_SWIPE_CANCEL
    int ANIMATION_TYPE_DRAG -> ANIMATION_TYPE_DRAG
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int ACTIVE_POINTER_ID_NONE -> ACTIVE_POINTER_ID_NONE
    int DIRECTION_FLAG_COUNT -> DIRECTION_FLAG_COUNT
    int ACTION_MODE_IDLE_MASK -> ACTION_MODE_IDLE_MASK
    int ACTION_MODE_SWIPE_MASK -> ACTION_MODE_SWIPE_MASK
    int ACTION_MODE_DRAG_MASK -> ACTION_MODE_DRAG_MASK
    java.util.List mPendingCleanup -> mPendingCleanup
    float[] mTmpPosition -> mTmpPosition
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder mSelected -> mSelected
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    float mDx -> mDx
    float mDy -> mDy
    float mSelectedStartX -> mSelectedStartX
    float mSelectedStartY -> mSelectedStartY
    int mActivePointerId -> mActivePointerId
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback mCallback -> mCallback
    int mActionState -> mActionState
    int mSelectedFlags -> mSelectedFlags
    java.util.List mRecoverAnimations -> mRecoverAnimations
    int mSlop -> mSlop
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mRecyclerView -> mRecyclerView
    java.lang.Runnable mScrollRunnable -> mScrollRunnable
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    java.util.List mSwapTargets -> mSwapTargets
    java.util.List mDistances -> mDistances
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    android.view.View mOverdrawChild -> mOverdrawChild
    int mOverdrawChildPosition -> mOverdrawChildPosition
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> mGestureDetector
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> mOnItemTouchListener
    android.graphics.Rect mTmpRect -> mTmpRect
    long mDragScrollStartTimeInMs -> mDragScrollStartTimeInMs
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback) -> <init>
    boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    void attachToRecyclerView(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    void setupCallbacks() -> setupCallbacks
    void destroyCallbacks() -> destroyCallbacks
    void initGestureDetector() -> initGestureDetector
    void getSelectedDxDy(float[]) -> getSelectedDxDy
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onDrawOver
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> onDraw
    void select(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    void postDispatchSwipe(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    boolean scrollIfNecessary() -> scrollIfNecessary
    java.util.List findSwapTargets(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    void moveIfNecessary(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    int endRecoverAnimation(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    void getItemOffsets(android.graphics.Rect,android.view.View,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    void obtainVelocityTracker() -> obtainVelocityTracker
    void releaseVelocityTracker() -> releaseVelocityTracker
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    boolean checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    android.view.View findChildView(android.view.MotionEvent) -> findChildView
    void startDrag(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    void startSwipe(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
    int swipeIfNecessary(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    int checkHorizontalSwipe(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    int checkVerticalSwipe(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    boolean access$000(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$000
    void access$100(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$100
    java.lang.Runnable access$200(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$200
    com.easemob.redpacketui.recyclerview.widget.RecyclerView access$300(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$300
    android.support.v4.view.GestureDetectorCompat access$400(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$400
    void access$500(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$500
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation access$600(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,android.view.MotionEvent) -> access$600
    int access$700(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> access$700
    void access$800(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> access$800
    void access$900(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,android.view.MotionEvent,int,int) -> access$900
    boolean access$1000(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,int,android.view.MotionEvent,int) -> access$1000
    android.view.VelocityTracker access$1100(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$1100
    void access$1500(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> access$1500
    android.view.View access$1600(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$1600
    void access$1700(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,android.view.View) -> access$1700
    boolean access$1800(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$1800
    int access$2300(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> access$2300
    int access$2302(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,int) -> access$2302
    android.view.View access$2400(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,android.view.MotionEvent) -> access$2400
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$1 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$1:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$2 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$2:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> <init>
    boolean onInterceptTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$3 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$3:
    int val$swipeDir -> val$swipeDir
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected -> val$prevSelected
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$4 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$4:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation val$anim -> val$anim
    int val$swipeDir -> val$swipeDir
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> <init>
    void run() -> run
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$5 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$5:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> <init>
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback:
    int DEFAULT_DRAG_ANIMATION_DURATION -> DEFAULT_DRAG_ANIMATION_DURATION
    int DEFAULT_SWIPE_ANIMATION_DURATION -> DEFAULT_SWIPE_ANIMATION_DURATION
    int RELATIVE_DIR_FLAGS -> RELATIVE_DIR_FLAGS
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtil sUICallback -> sUICallback
    int ABS_HORIZONTAL_DIR_FLAGS -> ABS_HORIZONTAL_DIR_FLAGS
    android.view.animation.Interpolator sDragScrollInterpolator -> sDragScrollInterpolator
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> sDragViewScrollCapInterpolator
    long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS -> DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS
    int mCachedMaxScrollSpeed -> mCachedMaxScrollSpeed
    void <init>() -> <init>
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    int makeMovementFlags(int,int) -> makeMovementFlags
    int makeFlag(int,int) -> makeFlag
    int getMovementFlags(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    int getAbsoluteMovementFlags(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    boolean hasDragFlag(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    boolean hasSwipeFlag(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    boolean canDropOver(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    boolean onMove(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> onMove
    boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    int getBoundingBoxMargin() -> getBoundingBoxMargin
    float getSwipeThreshold(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    float getMoveThreshold(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    void onSwiped(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSwiped
    void onSelectedChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    int getMaxDragScroll(com.easemob.redpacketui.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    void onMoved(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    void clearView(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    void onChildDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    void onChildDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    long getAnimationDuration(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    int interpolateOutOfBoundsScroll(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    void access$1300(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> access$1300
    void access$1400(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> access$1400
    boolean access$2100(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$2100
    boolean access$2200(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback,com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> access$2200
    void <clinit>() -> <clinit>
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback$1 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback$2 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$Callback$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$1) -> <init>
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation:
    float mStartDx -> mStartDx
    float mStartDy -> mStartDy
    float mTargetX -> mTargetX
    float mTargetY -> mTargetY
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    int mActionState -> mActionState
    android.support.v4.animation.ValueAnimatorCompat mValueAnimator -> mValueAnimator
    int mAnimationType -> mAnimationType
    boolean mIsPendingCleanup -> mIsPendingCleanup
    float mX -> mX
    float mY -> mY
    boolean mOverridden -> mOverridden
    boolean mEnded -> mEnded
    float mFraction -> mFraction
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void setFraction(float) -> setFraction
    void update() -> update
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
    boolean access$1900(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation) -> access$1900
    int access$2000(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation) -> access$2000
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation$1 -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation$1:
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper val$this$0 -> val$this$0
    com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation this$1 -> this$1
    void <init>(com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$RecoverAnimation,com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper) -> <init>
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$SimpleCallback -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$SimpleCallback:
    int mDefaultSwipeDirs -> mDefaultSwipeDirs
    int mDefaultDragDirs -> mDefaultDragDirs
    void <init>(int,int) -> <init>
    void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
    void setDefaultDragDirs(int) -> setDefaultDragDirs
    int getSwipeDirs(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    int getDragDirs(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    int getMovementFlags(com.easemob.redpacketui.recyclerview.widget.RecyclerView,com.easemob.redpacketui.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$ViewDropHandler -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchHelper$ViewDropHandler:
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtil -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtil:
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl:
    void <init>() -> <init>
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Gingerbread -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Gingerbread:
    void <init>() -> <init>
    void draw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float) -> draw
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Honeycomb -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Honeycomb:
    void <init>() -> <init>
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Lollipop -> com.easemob.redpacketui.recyclerview.widget.helper.ItemTouchUIUtilImpl$Lollipop:
    void <init>() -> <init>
    void onDraw(android.graphics.Canvas,com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    float findMaxElevation(com.easemob.redpacketui.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    void clearView(android.view.View) -> clearView
com.easemob.redpacketui.recyclerview.widget.util.SortedListAdapterCallback -> com.easemob.redpacketui.recyclerview.widget.util.SortedListAdapterCallback:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter mAdapter -> mAdapter
    void <init>(com.easemob.redpacketui.recyclerview.widget.RecyclerView$Adapter) -> <init>
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
com.easemob.redpacketui.ui.activity.RPDetailActivity -> com.easemob.redpacketui.ui.activity.RPDetailActivity:
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> g
    com.easemob.redpacketsdk.presenter.impl.PacketDetailPresenter mPacketDetailPresenter -> f
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void getBundleExtras(android.os.Bundle) -> a
    int getContentViewLayoutID() -> b
    android.view.View getLoadingTargetView() -> c
    void initViewsAndEvents(android.os.Bundle) -> b
    boolean isApplyStatusBarTranslucency() -> d
    void showSinglePacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showSinglePacketDetail
    void showGroupPacketDetail(java.util.HashMap,java.lang.String,java.lang.String,java.lang.String) -> showGroupPacketDetail
    void showDetailError(java.lang.String,java.lang.String) -> showDetailError
    void onDestroy() -> onDestroy
com.easemob.redpacketui.ui.activity.RPDetailActivity$1 -> com.easemob.redpacketui.ui.activity.RPDetailActivity$1:
    com.easemob.redpacketui.ui.activity.RPDetailActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPDetailActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPGroupMemberActivity -> com.easemob.redpacketui.ui.activity.RPGroupMemberActivity:
    com.easemob.redpacketui.recyclerview.widget.RecyclerView mRecyclerView -> f
    android.widget.ProgressBar mProgressBar -> g
    android.widget.RelativeLayout mLayoutHead -> h
    android.widget.FrameLayout mLayoutContent -> i
    com.easemob.redpacketui.indexrecyclerview.CharacterParser characterParser -> j
    com.easemob.redpacketui.adapter.GroupMemberAdapter mAdapter -> k
    java.util.ArrayList mList -> l
    java.lang.String mGroupId -> m
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void getBundleExtras(android.os.Bundle) -> a
    int getContentViewLayoutID() -> b
    android.view.View getLoadingTargetView() -> c
    void initViewsAndEvents(android.os.Bundle) -> b
    boolean isApplyStatusBarTranslucency() -> d
    void initData() -> e
    void sortList(java.util.List) -> b
    void onClick(android.view.View) -> onClick
    void onItemClick(com.easemob.redpacketsdk.bean.RPUserBean,int) -> a
    void onShowError() -> f
    void hideProgressBar() -> i
    void showProgressBar() -> j
    void onSuccess(java.util.List) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
    com.easemob.redpacketui.adapter.GroupMemberAdapter access$000(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> a
    com.easemob.redpacketui.recyclerview.widget.RecyclerView access$100(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> b
    void access$200(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> c
    java.lang.String access$300(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> d
com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$1 -> com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$1:
    com.easemob.redpacketui.ui.activity.RPGroupMemberActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$2 -> com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$2:
    com.easemob.redpacketui.ui.activity.RPGroupMemberActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> <init>
    void onTouchingLetterChanged(java.lang.String) -> a
com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$3 -> com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$3:
    com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersDecoration val$headersDecor -> a
    com.easemob.redpacketui.ui.activity.RPGroupMemberActivity this$0 -> b
    void <init>(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity,com.easemob.redpacketui.indexrecyclerview.StickyRecyclerHeadersDecoration) -> <init>
    void onChanged() -> onChanged
com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$4 -> com.easemob.redpacketui.ui.activity.RPGroupMemberActivity$4:
    com.easemob.redpacketui.ui.activity.RPGroupMemberActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPGroupMemberActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRecordActivity -> com.easemob.redpacketui.ui.activity.RPRecordActivity:
    com.easemob.redpacketui.widget.ChooseRecordPopupWindow mPopupWindow -> f
    android.widget.ProgressBar mProgressBar -> g
    com.easemob.redpacketui.widget.RPTitleBar mTitleBar -> h
    int mTokenType -> i
    int offsetY -> j
    java.lang.String mCurrentUserId -> k
    java.lang.String mUserName -> l
    java.lang.String mUserAvatar -> m
    boolean mSwitchRecord -> n
    void <init>() -> <init>
    void getBundleExtras(android.os.Bundle) -> a
    int getContentViewLayoutID() -> b
    android.view.View getLoadingTargetView() -> c
    void initViewsAndEvents(android.os.Bundle) -> b
    void setSubTitle() -> i
    void hideProgressBar() -> e
    void showProgressBar() -> f
    boolean isApplyStatusBarTranslucency() -> d
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
    void onDestroy() -> onDestroy
    com.easemob.redpacketui.widget.ChooseRecordPopupWindow access$000(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> a
    com.easemob.redpacketui.widget.ChooseRecordPopupWindow access$002(com.easemob.redpacketui.ui.activity.RPRecordActivity,com.easemob.redpacketui.widget.ChooseRecordPopupWindow) -> a
    android.content.Context access$100(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> b
    android.content.Context access$200(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> c
    com.easemob.redpacketui.widget.RPTitleBar access$300(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> d
    java.lang.String access$400(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> e
    java.lang.String access$500(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> f
    android.content.Context access$600(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> g
    int access$702(com.easemob.redpacketui.ui.activity.RPRecordActivity,int) -> a
    int access$700(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> h
    java.lang.String access$800(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> i
com.easemob.redpacketui.ui.activity.RPRecordActivity$1 -> com.easemob.redpacketui.ui.activity.RPRecordActivity$1:
    com.easemob.redpacketui.ui.activity.RPRecordActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRecordActivity$2 -> com.easemob.redpacketui.ui.activity.RPRecordActivity$2:
    int val$dp -> a
    com.easemob.redpacketui.ui.activity.RPRecordActivity this$0 -> b
    void <init>(com.easemob.redpacketui.ui.activity.RPRecordActivity,int) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRecordActivity$2$1 -> com.easemob.redpacketui.ui.activity.RPRecordActivity$2$1:
    com.easemob.redpacketui.ui.activity.RPRecordActivity$2 this$1 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPRecordActivity$2) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRecordActivity$3 -> com.easemob.redpacketui.ui.activity.RPRecordActivity$3:
    com.easemob.redpacketui.ui.activity.RPRecordActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPRecordActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRedPacketActivity -> com.easemob.redpacketui.ui.activity.RPRedPacketActivity:
    com.easemob.redpacketui.widget.RPTitleBar mTitleBar -> f
    java.lang.String mCurrentUserId -> g
    void <init>() -> <init>
    void getBundleExtras(android.os.Bundle) -> a
    int getContentViewLayoutID() -> b
    android.view.View getLoadingTargetView() -> c
    void initViewsAndEvents(android.os.Bundle) -> b
    void setSubTitle(com.easemob.redpacketui.widget.RPTitleBar) -> a
    boolean isApplyStatusBarTranslucency() -> d
    void onRetryToken(com.easemob.redpacketsdk.RPCallback) -> a
    void onDestroy() -> onDestroy
    void access$000(com.easemob.redpacketui.ui.activity.RPRedPacketActivity) -> a
    com.easemob.redpacketui.widget.RPTitleBar access$100(com.easemob.redpacketui.ui.activity.RPRedPacketActivity) -> b
    void access$200(com.easemob.redpacketui.ui.activity.RPRedPacketActivity,com.easemob.redpacketui.widget.RPTitleBar) -> a
com.easemob.redpacketui.ui.activity.RPRedPacketActivity$1 -> com.easemob.redpacketui.ui.activity.RPRedPacketActivity$1:
    com.easemob.redpacketui.ui.activity.RPRedPacketActivity this$0 -> a
    void <init>(com.easemob.redpacketui.ui.activity.RPRedPacketActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.activity.RPRedPacketActivity$2 -> com.easemob.redpacketui.ui.activity.RPRedPacketActivity$2:
    com.easemob.redpacketsdk.RPCallback val$callback -> a
    com.easemob.redpacketui.ui.activity.RPRedPacketActivity this$0 -> b
    void <init>(com.easemob.redpacketui.ui.activity.RPRedPacketActivity,com.easemob.redpacketsdk.RPCallback) -> <init>
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.ui.base.RPBaseActivity -> com.easemob.redpacketui.ui.base.RPBaseActivity:
    void <init>() -> <init>
    void onResume() -> onResume
    void onPause() -> onPause
    void showLoading() -> g
    void hideLoading() -> h
    void showToastMsg(java.lang.String) -> b
com.easemob.redpacketui.ui.base.RPBaseDialogFragment -> com.easemob.redpacketui.ui.base.a:
    com.easemob.redpacketsdk.presenter.IBasePresenter mPresenter -> f
    void <init>() -> <init>
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void showLoading() -> e
    void hideLoading() -> f
    void showToastMsg(java.lang.String) -> b
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    void onDestroy() -> onDestroy
    void showTipDialog(int,java.lang.String,com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener) -> a
    void showAllowingStateLost(android.support.v4.app.DialogFragment,android.support.v4.app.FragmentActivity) -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.ui.base.RPBaseFragment -> com.easemob.redpacketui.ui.base.b:
    com.easemob.redpacketsdk.presenter.IBasePresenter mPresenter -> f
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void showLoading() -> e
    void hideLoading() -> f
    void showToastMsg(java.lang.String) -> b
    void onDestroy() -> onDestroy
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.ui.fragment.ADPacketFragment -> com.easemob.redpacketui.ui.a.a:
    android.widget.ImageView mAdBg -> h
    android.widget.ImageView mAdIcon -> i
    android.widget.Button mBtnReceive -> j
    android.widget.TextView mTVSponsor -> k
    android.widget.TextView mTVGreeting -> l
    android.widget.TextView mTVMoney -> m
    android.widget.TextView mTVHint -> n
    com.easemob.redpacketui.widget.RPTextView mTVLook -> o
    com.easemob.redpacketui.widget.RPTextView mTVShare -> p
    android.widget.RelativeLayout mLayoutBom -> q
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> r
    java.lang.String mBannerUrl -> s
    android.view.View mButtonLayout -> t
    boolean mIsShare -> u
    boolean $assertionsDisabled -> g
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.ADPacketFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    void showAdPacket() -> i
    void adaptationADBanner() -> j
    void redPacketOut(java.lang.String) -> c
    void receiveSuccess() -> k
    void onResume() -> onResume
    int getContentViewLayoutID() -> c
    com.easemob.redpacketsdk.contract.ADPacketContract$Presenter initPresenter() -> a
    void onClick(android.view.View) -> onClick
    void showADPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showADPacketDetail
    void onDetailError(java.lang.String,java.lang.String) -> onDetailError
    void onReceivePacketSuccess(java.lang.String,java.lang.String,java.lang.String) -> onReceivePacketSuccess
    void showAuthDialog() -> showAuthDialog
    void onReceiveError(java.lang.String,java.lang.String) -> onReceiveError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(java.lang.String,java.lang.String) -> onUploadAuthInfoError
    void onAuthClick() -> a_
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    void onDestroy() -> onDestroy
    int getStatusBarHeight() -> l
    int getRealScreenHeight() -> m
    boolean hasNavigationBar() -> h
    int getNavigationBarHeight(android.content.Context) -> a
    int getAdBgHeight() -> n
    void showTipDialog(int,java.lang.String,com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener) -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    com.easemob.redpacketsdk.bean.RedPacketInfo access$000(com.easemob.redpacketui.ui.fragment.ADPacketFragment) -> a
    android.widget.Button access$100(com.easemob.redpacketui.ui.fragment.ADPacketFragment) -> b
    void <clinit>() -> <clinit>
com.easemob.redpacketui.ui.fragment.ADPacketFragment$1 -> com.easemob.redpacketui.ui.a.a$1:
    com.easemob.redpacketui.ui.fragment.ADPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.ADPacketFragment,android.widget.ImageView) -> <init>
    void onResourceReady(com.bumptech.glide.load.resource.drawable.GlideDrawable,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
com.easemob.redpacketui.ui.fragment.ADPacketFragment$2 -> com.easemob.redpacketui.ui.a.a$2:
    com.easemob.redpacketui.ui.fragment.ADPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.ADPacketFragment) -> <init>
    void onAuthClick() -> a_
com.easemob.redpacketui.ui.fragment.GroupDetailFragment -> com.easemob.redpacketui.ui.a.b:
    com.easemob.redpacketsdk.bean.RedPacketInfo mHeadInfo -> g
    java.util.ArrayList mInfoList -> h
    java.lang.String mMsgDirect -> i
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager mLayoutManager -> j
    com.easemob.redpacketui.adapter.GroupDetailAdapter mAdapter -> k
    int mCurrentPage -> l
    int mOffset -> m
    int mLength -> n
    int mTakenPageNo -> o
    boolean mIsLoading -> p
    java.lang.String mLatestToUserId -> q
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.GroupDetailFragment newInstance(java.util.HashMap,java.lang.String) -> a
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    void showSinglePacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showSinglePacketDetail
    void showGroupPacketDetail(java.util.HashMap,java.lang.String,java.lang.String,java.lang.String) -> showGroupPacketDetail
    void showDetailError(java.lang.String,java.lang.String) -> showDetailError
    com.easemob.redpacketsdk.contract.RPDetailContract$Presenter initPresenter() -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    boolean access$000(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> a
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager access$100(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> b
    com.easemob.redpacketui.adapter.GroupDetailAdapter access$200(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> c
    int access$300(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> d
    int access$400(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> e
    int access$308(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> f
    int access$502(com.easemob.redpacketui.ui.fragment.GroupDetailFragment,int) -> a
    int access$500(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> g
    boolean access$002(com.easemob.redpacketui.ui.fragment.GroupDetailFragment,boolean) -> a
    android.content.Context access$600(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> h
    com.easemob.redpacketsdk.bean.RedPacketInfo access$700(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> i
    java.lang.String access$800(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> j
    int access$900(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> k
com.easemob.redpacketui.ui.fragment.GroupDetailFragment$1 -> com.easemob.redpacketui.ui.a.b$1:
    com.easemob.redpacketui.ui.fragment.GroupDetailFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> <init>
    void onScrollStateChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.easemob.redpacketui.ui.fragment.GroupDetailFragment$2 -> com.easemob.redpacketui.ui.a.b$2:
    com.easemob.redpacketui.ui.fragment.GroupDetailFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.GroupDetailFragment) -> <init>
    void onItemClick(android.view.View,int) -> a
com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment -> com.easemob.redpacketui.ui.a.c:
    java.lang.String mMessage -> g
    int mPayStatus -> h
    com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener mCallback -> i
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment newInstance(int,java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onCreate(android.os.Bundle) -> onCreate
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void setCallback(com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener) -> a
com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener -> com.easemob.redpacketui.ui.a.c$a:
    void onAuthClick() -> a_
com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment -> com.easemob.redpacketui.ui.a.d:
    com.easemob.redpacketsdk.bean.RedPacketInfo mRandomDetail -> g
    android.view.View mAvatarView -> h
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void setArguments(com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View getLoadingTargetView() -> b
    com.easemob.redpacketsdk.contract.UnfoldPacketContract$Presenter initPresenter() -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    java.lang.String calculateNameByte(java.lang.String) -> c
    void onClick(android.view.View) -> onClick
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment -> com.easemob.redpacketui.ui.a.e:
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> g
    android.view.View mAvatarView -> h
    android.view.View mSwitchAmount -> i
    android.widget.TextView mTvGreeting -> j
    android.widget.TextView mTvAmount -> k
    android.widget.Button mBtnSend -> l
    java.util.ArrayList mRandomGreetings -> m
    java.lang.String[] mGreetingArray -> n
    java.lang.String[] mAmountArray -> o
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View getLoadingTargetView() -> b
    com.easemob.redpacketsdk.contract.AliSendPacketContract$Presenter initPresenter() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initToken() -> i
    void initView(android.view.View) -> a
    java.lang.String calculateNameByte(java.lang.String) -> c
    void setGreetingView() -> j
    void setLocalGreeting() -> k
    void onClick(android.view.View) -> onClick
    void onGeneratePacketIdSuccess(java.lang.String) -> onGeneratePacketIdSuccess
    void onGeneratePacketIdError(int,java.lang.String) -> onGeneratePacketIdError
    void toAliPay(java.lang.String,java.lang.String) -> toAliPay
    void showAuthDialog() -> showAuthDialog
    void onOrderError(int,java.lang.String) -> onOrderError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onVerifyAliPayOrderSuccess() -> onVerifyAliPayOrderSuccess
    void onVerifyAliPayOrderError(int,java.lang.String) -> onVerifyAliPayOrderError
    void sendPacketToChat(java.lang.String) -> sendPacketToChat
    void sendPacketError(int,java.lang.String) -> sendPacketError
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onAuthClick() -> a_
    void AliPaySuccess() -> a
    void AliPayError(int,java.lang.String) -> a
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    void onDestroy() -> onDestroy
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    void access$000(com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment) -> a
com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment$1 -> com.easemob.redpacketui.ui.a.e$1:
    com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.RandomPacketDialogFragment) -> <init>
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment -> com.easemob.redpacketui.ui.a.f:
    int mCurrentPage -> g
    int mOffset -> h
    int mLength -> i
    int mTotalPageNo -> j
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager mLayoutManager -> k
    com.easemob.redpacketui.adapter.ReceivedRecordAdapter mAdapter -> l
    boolean mIsLoading -> m
    boolean mIsAccountFail -> n
    java.lang.String mReceiverName -> o
    java.lang.String mReceiveAvatar -> p
    com.easemob.redpacketsdk.bean.RedPacketInfo mHeadInfo -> q
    android.view.View mView -> r
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment newInstance(java.lang.String,java.lang.String) -> b
    android.view.View getLoadingTargetView() -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.easemob.redpacketsdk.contract.RPRecordContract$Presenter initPresenter() -> a
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    void initRecyclerView() -> h
    int getContentViewLayoutID() -> c
    void showAliUserInfo(java.lang.String) -> showAliUserInfo
    void onAliUserInfoError(int,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void refreshListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketsdk.bean.PageInfo) -> refreshListData
    void addMoreListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.PageInfo) -> addMoreListData
    void onLoadError(java.lang.String,java.lang.String) -> onLoadError
    void unBindAliSuccess() -> unBindAliSuccess
    void unBindAliError(int,java.lang.String) -> unBindAliError
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    void unBindAliUser(android.view.View,com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void bindAliUser(android.view.View,com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void onAuthClick() -> a_
    void showTipDialog(int,java.lang.String,com.easemob.redpacketui.ui.fragment.PayTipsDialogFragment$OnRetryClickListener) -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    boolean access$000(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> a
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager access$100(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> b
    com.easemob.redpacketui.adapter.ReceivedRecordAdapter access$200(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> c
    int access$300(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> d
    int access$400(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> e
    int access$308(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> f
    int access$502(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment,int) -> a
    int access$500(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> g
    boolean access$002(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment,boolean) -> a
    android.content.Context access$600(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> h
    int access$700(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> i
    com.easemob.redpacketsdk.bean.RedPacketInfo access$800(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> j
com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment$1 -> com.easemob.redpacketui.ui.a.f$1:
    com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> <init>
    void onScrollStateChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment$2 -> com.easemob.redpacketui.ui.a.f$2:
    com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.ReceivedRecordFragment) -> <init>
    void showAliUserInfo(java.lang.String) -> showAliUserInfo
    void onAliUserInfoError(int,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void refreshListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketsdk.bean.PageInfo) -> refreshListData
    void addMoreListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.PageInfo) -> addMoreListData
    void onLoadError(java.lang.String,java.lang.String) -> onLoadError
    void unBindAliSuccess() -> unBindAliSuccess
    void unBindAliError(int,java.lang.String) -> unBindAliError
com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment -> com.easemob.redpacketui.ui.a.g:
    com.easemob.redpacketsdk.bean.RedPacketInfo mMoneyDetail -> g
    android.widget.TextView mTvGreeting -> h
    android.widget.Button mBtnOpen -> i
    android.widget.TextView mTvCheckLucky -> j
    android.widget.TextView mTvTitle -> k
    android.view.View mAvatarView -> l
    com.easemob.redpacketsdk.RPValueCallback mCallback -> m
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void setArguments(com.easemob.redpacketsdk.bean.RedPacketInfo) -> b
    void setCallback(com.easemob.redpacketsdk.RPValueCallback) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View getLoadingTargetView() -> b
    com.easemob.redpacketsdk.contract.UnfoldPacketContract$Presenter initPresenter() -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void showRedPacketDetail(java.lang.String,java.lang.String) -> showRedPacketDetail
    void showRandomPacketOut() -> showRandomPacketOut
    void showAveragePacketOut() -> showAveragePacketOut
    void showAuthDialog() -> showAuthDialog
    void onUnfoldPacketError(java.lang.String,java.lang.String) -> onUnfoldPacketError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onAuthClick() -> a_
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment -> com.easemob.redpacketui.ui.a.h:
    com.easemob.redpacketsdk.bean.RedPacketInfo mMoneyDetail -> g
    android.widget.FrameLayout mLayoutAvatar -> h
    android.widget.TextView mTvGreeting -> i
    android.widget.TextView mTvAmount -> j
    android.widget.TextView tvUserName -> k
    android.widget.TextView tvTitle -> l
    android.widget.Button mBtnOpen -> m
    java.lang.String mCurrentUserId -> n
    int mBtnState -> o
    android.widget.ImageView mAvatarView -> p
    com.easemob.redpacketsdk.RPValueCallback mCallback -> q
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo,java.lang.String) -> a
    void setArguments(com.easemob.redpacketsdk.bean.RedPacketInfo,java.lang.String) -> b
    void setCallback(com.easemob.redpacketsdk.RPValueCallback) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View getLoadingTargetView() -> b
    com.easemob.redpacketsdk.contract.UnfoldPacketContract$Presenter initPresenter() -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onClick(android.view.View) -> onClick
    void showRedPacketDetail(java.lang.String,java.lang.String) -> showRedPacketDetail
    void showRandomPacketOut() -> showRandomPacketOut
    void showAveragePacketOut() -> showAveragePacketOut
    void showAuthDialog() -> showAuthDialog
    void onUnfoldPacketError(java.lang.String,java.lang.String) -> onUnfoldPacketError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onAuthClick() -> a_
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment -> com.easemob.redpacketui.ui.a.i:
    android.widget.EditText mEtMoneyAmount -> n
    android.widget.EditText mEtMoneyCount -> o
    android.widget.EditText mEtGreeting -> p
    android.widget.TextView mTvMoneyAmount -> q
    android.widget.TextView mTvReceiveName -> r
    android.widget.TextView mTvGroupCount -> s
    android.widget.Button mBtnPutMoney -> t
    java.lang.String mMoneyAmount -> u
    int mMoneyCount -> v
    android.widget.TextView mTvMoneyType -> w
    android.widget.TextView mTvMoneyTypeInfo -> x
    android.widget.TextView mTvAmount -> y
    android.widget.TextView mTvCount -> z
    android.widget.TextView mTvCountUnit -> A
    android.widget.TextView mTvAmountUnit -> B
    android.view.View mMoneyLayout -> C
    boolean mIsRandom -> D
    boolean mIsExclusive -> E
    android.widget.ImageView mIvRandomIcon -> F
    java.lang.String mDefaultMoneyAmount -> G
    java.lang.String mDefaultMoneyCount -> H
    java.util.ArrayList mList -> I
    com.easemob.redpacketsdk.bean.RPUserBean mRPUserBean -> J
    android.view.View mPopViewLayout -> K
    android.widget.TextView mTvPopMsg -> L
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    void setAmountRedColor() -> m
    void setCountRedColor() -> n
    void enableButton(boolean) -> b
    void resetColorStatus(android.content.Context) -> a
    int getContentViewLayoutID() -> c
    void onClick(android.view.View) -> onClick
    void switchDefaultRedPacketType() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean verifyParams() -> o
    void showErrorMsg(java.lang.String) -> d
    void hideErrorMsg() -> p
    android.widget.EditText access$000(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> a
    void access$100(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> b
    android.content.Context access$200(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> c
    void access$300(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment,java.lang.String) -> a
    android.content.Context access$400(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> d
    android.content.Context access$500(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> e
    void access$600(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment,android.content.Context) -> a
    android.widget.TextView access$700(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> f
    void access$800(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment,boolean) -> a
    void access$900(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> g
    android.widget.EditText access$1000(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> h
    void access$1100(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> i
    android.content.Context access$1200(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> j
    boolean access$1300(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> k
    android.content.Context access$1400(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> l
    android.content.Context access$1500(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> m
    android.content.Context access$1600(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> n
    android.content.Context access$1700(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> o
    android.content.Context access$1800(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> p
    int access$1902(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment,int) -> a
    int access$1900(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> q
    android.content.Context access$2000(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> r
    android.content.Context access$2100(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> s
    android.content.Context access$2200(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> t
    android.content.Context access$2300(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> u
    android.widget.TextView access$2400(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> v
    android.widget.ImageView access$2500(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> w
    android.content.Context access$2600(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> x
    android.widget.TextView access$2700(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> y
    android.content.Context access$2800(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> z
    android.widget.TextView access$2900(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> A
    android.content.Context access$3000(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> B
    android.content.Context access$3100(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> C
    android.content.Context access$3200(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> D
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment$1 -> com.easemob.redpacketui.ui.a.i$1:
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment$2 -> com.easemob.redpacketui.ui.a.i$2:
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment$3 -> com.easemob.redpacketui.ui.a.i$3:
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment$4 -> com.easemob.redpacketui.ui.a.i$4:
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment$5 -> com.easemob.redpacketui.ui.a.i$5:
    com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendGroupPacketFragment) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.easemob.redpacketui.ui.fragment.SendPacketBaseFragment -> com.easemob.redpacketui.ui.a.j:
    com.easemob.redpacketsdk.bean.RedPacketInfo mRedPacketInfo -> g
    java.lang.String[] mGreetingArray -> h
    int mArrayIndex -> i
    android.widget.PopupWindow mPopupWindow -> n
    android.view.View mPopupParent -> j
    android.widget.TextView mTvPopupMsg -> k
    double mSingleLimit -> l
    double mMinLimit -> m
    android.view.View mPopupView -> o
    android.widget.Button mButton -> p
    com.easemob.redpacketui.callback.RetryTokenListener mRetryTokenListener -> q
    void <init>() -> <init>
    void onAttach(android.app.Activity) -> onAttach
    android.view.View getLoadingTargetView() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    void onGeneratePacketIdSuccess(java.lang.String) -> onGeneratePacketIdSuccess
    void onGeneratePacketIdError(int,java.lang.String) -> onGeneratePacketIdError
    void toAliPay(java.lang.String,java.lang.String) -> toAliPay
    void showAuthDialog() -> showAuthDialog
    void onOrderError(int,java.lang.String) -> onOrderError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void onVerifyAliPayOrderSuccess() -> onVerifyAliPayOrderSuccess
    void onVerifyAliPayOrderError(int,java.lang.String) -> onVerifyAliPayOrderError
    void sendPacketToChat(java.lang.String) -> sendPacketToChat
    void sendPacketError(int,java.lang.String) -> sendPacketError
    com.easemob.redpacketsdk.contract.AliSendPacketContract$Presenter initPresenter() -> i
    void AliPaySuccess() -> a
    void AliPayError(int,java.lang.String) -> a
    void AliAuthSuccess(java.lang.String,java.lang.String) -> a
    void onDetach() -> onDetach
    void onAuthClick() -> a_
    void initPopupWindow() -> j
    void showPopupWindow(android.view.View,android.widget.TextView,java.lang.String) -> a
    void hidePopupWindow() -> k
    void updateLimit() -> l
    java.lang.String getNumberLimit(double) -> b
    int getStartZeroNumber(java.lang.String) -> c
    void enableButton(android.widget.Button) -> a
    void disableButton(android.widget.Button) -> b
    void retryRPToken(android.widget.Button) -> c
    void generatePacketId(android.widget.Button) -> d
    void onClick(android.view.View) -> onClick
    void showTipDialog(int,java.lang.String) -> b
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    void access$000(com.easemob.redpacketui.ui.fragment.SendPacketBaseFragment,android.widget.Button) -> a
com.easemob.redpacketui.ui.fragment.SendPacketBaseFragment$1 -> com.easemob.redpacketui.ui.a.j$1:
    android.widget.Button val$button -> a
    com.easemob.redpacketui.ui.fragment.SendPacketBaseFragment this$0 -> b
    void <init>(com.easemob.redpacketui.ui.fragment.SendPacketBaseFragment,android.widget.Button) -> <init>
    void onSuccess() -> onSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.ui.fragment.SendRecordFragment -> com.easemob.redpacketui.ui.a.k:
    int mCurrentPage -> g
    int mOffset -> h
    int mLength -> i
    int mTotalPageNo -> j
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager mLayoutManager -> k
    com.easemob.redpacketui.adapter.SendRecordAdapter mAdapter -> l
    boolean mIsLoading -> m
    java.lang.String mReceiverName -> n
    java.lang.String mReceiveAvatar -> o
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.SendRecordFragment newInstance(java.lang.String,java.lang.String) -> a
    android.view.View getLoadingTargetView() -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.easemob.redpacketsdk.contract.RPRecordContract$Presenter initPresenter() -> a
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    void showAliUserInfo(java.lang.String) -> showAliUserInfo
    void onAliUserInfoError(int,java.lang.String) -> onAliUserInfoError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(int,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(int,java.lang.String) -> onUploadAuthInfoError
    void refreshListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketsdk.bean.PageInfo) -> refreshListData
    void addMoreListData(java.util.ArrayList,com.easemob.redpacketsdk.bean.PageInfo) -> addMoreListData
    void onLoadError(java.lang.String,java.lang.String) -> onLoadError
    void unBindAliSuccess() -> unBindAliSuccess
    void unBindAliError(int,java.lang.String) -> unBindAliError
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
    boolean access$000(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> a
    com.easemob.redpacketui.recyclerview.widget.LinearLayoutManager access$100(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> b
    com.easemob.redpacketui.adapter.SendRecordAdapter access$200(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> c
    int access$300(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> d
    int access$400(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> e
    int access$308(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> f
    int access$502(com.easemob.redpacketui.ui.fragment.SendRecordFragment,int) -> a
    int access$500(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> g
    boolean access$002(com.easemob.redpacketui.ui.fragment.SendRecordFragment,boolean) -> a
    android.content.Context access$600(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> h
    int access$700(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> i
com.easemob.redpacketui.ui.fragment.SendRecordFragment$1 -> com.easemob.redpacketui.ui.a.k$1:
    com.easemob.redpacketui.ui.fragment.SendRecordFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> <init>
    void onScrollStateChanged(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(com.easemob.redpacketui.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.easemob.redpacketui.ui.fragment.SendRecordFragment$2 -> com.easemob.redpacketui.ui.a.k$2:
    com.easemob.redpacketui.ui.fragment.SendRecordFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendRecordFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment -> com.easemob.redpacketui.ui.a.l:
    android.widget.EditText mEtMoneyAmount -> n
    android.widget.EditText mEtGreeting -> o
    android.widget.TextView mTvMoneyAmount -> p
    android.widget.Button mBtnPutMoney -> q
    java.lang.String mMoneyAmount -> r
    android.widget.TextView mTvAmount -> s
    android.widget.TextView mTvMoneyUnit -> t
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    void setAmountRedColor() -> h
    void enableButton(boolean) -> b
    int getContentViewLayoutID() -> c
    void onClick(android.view.View) -> onClick
    boolean verifyParams() -> m
    android.widget.EditText access$000(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> a
    void access$100(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment,boolean) -> a
    void access$200(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> b
    android.content.Context access$300(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> c
    android.content.Context access$400(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> d
    android.content.Context access$500(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> e
    android.content.Context access$600(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> f
    android.widget.TextView access$700(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> g
    android.content.Context access$800(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> h
    android.widget.TextView access$900(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> i
    android.content.Context access$1000(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> j
    android.widget.TextView access$1100(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> k
    android.content.Context access$1200(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> l
    android.content.Context access$1300(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> m
com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment$1 -> com.easemob.redpacketui.ui.a.l$1:
    com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment$2 -> com.easemob.redpacketui.ui.a.l$2:
    com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment$3 -> com.easemob.redpacketui.ui.a.l$3:
    com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment this$0 -> a
    void <init>(com.easemob.redpacketui.ui.fragment.SendSinglePacketFragment) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.redpacketui.ui.fragment.SingleDetailFragment -> com.easemob.redpacketui.ui.a.m:
    com.easemob.redpacketsdk.bean.RedPacketInfo mMoneyDetail -> g
    void <init>() -> <init>
    com.easemob.redpacketui.ui.fragment.SingleDetailFragment newInstance(com.easemob.redpacketsdk.bean.RedPacketInfo) -> a
    android.view.View getLoadingTargetView() -> b
    void initViewsAndEvents(android.view.View,android.os.Bundle) -> a
    int getContentViewLayoutID() -> c
    void onClick(android.view.View) -> onClick
    com.easemob.redpacketsdk.presenter.IBasePresenter initPresenter() -> g
com.easemob.redpacketui.utils.CircleTransform -> com.easemob.redpacketui.utils.a:
    void <init>(android.content.Context) -> <init>
    android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    android.graphics.Bitmap circleCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> a
    java.lang.String getId() -> getId
com.easemob.redpacketui.utils.ClickUtil -> com.easemob.redpacketui.utils.b:
    long sLastClickTime -> a
    boolean isFastClick() -> a
    void <clinit>() -> <clinit>
com.easemob.redpacketui.utils.DateUtils -> com.easemob.redpacketui.utils.c:
    int getNowYear() -> a
    int getNowMonth() -> b
    int getNowDay() -> c
    int getOldYear(java.util.Calendar) -> a
    int getOldMonth(java.util.Calendar) -> b
    int getOldDay(java.util.Calendar) -> c
    boolean isToday(java.util.Calendar) -> d
    boolean isYesterday(java.util.Calendar) -> e
    java.util.Date stringToDate(java.lang.String) -> a
    java.lang.String dateToString(java.util.Date,java.lang.String) -> a
    java.lang.String getDateFormat(java.lang.String) -> b
com.easemob.redpacketui.utils.NetUtils -> com.easemob.redpacketui.utils.d:
    boolean isNetworkConnected(android.content.Context) -> a
com.easemob.redpacketui.utils.PageUtil -> com.easemob.redpacketui.utils.e:
    com.easemob.redpacketui.utils.PageUtil instance -> a
    void <init>() -> <init>
    com.easemob.redpacketui.utils.PageUtil getInstance() -> a
    int calculateTotalPages(int) -> a
    void <clinit>() -> <clinit>
com.easemob.redpacketui.utils.RPRedPacketUtil -> com.easemob.redpacketui.utils.RPRedPacketUtil:
    com.easemob.redpacketui.utils.RPRedPacketUtil instance -> instance
    com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment mRedPacketDialogFragment -> mRedPacketDialogFragment
    com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment mSRedPacketDialogFragment -> mSRedPacketDialogFragment
    com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment mRandomDetailDialogFragment -> mRandomDetailDialogFragment
    com.easemob.redpacketsdk.presenter.impl.OpenPacketPresenter mOpenPacketPresenter -> mOpenPacketPresenter
    com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter mADPacketPresenter -> mADPacketPresenter
    com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter mCheckRedPacketPresenter -> mCheckRedPacketPresenter
    com.easemob.redpacketui.callback.RandomDetailCallback mRandomDetailCallback -> mRandomDetailCallback
    com.easemob.redpacketui.utils.RPRedPacketUtil getInstance() -> getInstance
    void <init>() -> <init>
    void openRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo,android.support.v4.app.FragmentActivity,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback) -> openRedPacket
    void openADRedPacket(java.lang.String,android.support.v4.app.FragmentActivity,boolean,com.easemob.redpacketsdk.RPADPacketCallback) -> openADRedPacket
    com.easemob.redpacketsdk.presenter.impl.OpenPacketPresenter openPacket(com.easemob.redpacketsdk.bean.RedPacketInfo,android.support.v4.app.FragmentActivity,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback) -> openPacket
    void showAllowingStateLost(android.support.v4.app.DialogFragment,android.support.v4.app.FragmentActivity) -> showAllowingStateLost
    void enterRandomRedPacket(com.easemob.redpacketsdk.bean.RedPacketInfo,android.support.v4.app.FragmentActivity) -> enterRandomRedPacket
    void startRedPacket(android.support.v4.app.FragmentActivity,int,com.easemob.redpacketsdk.bean.RedPacketInfo,com.easemob.redpacketsdk.RPSendPacketCallback) -> startRedPacket
    void checkRedPacketStatus(java.lang.String,com.easemob.redpacketsdk.RPValueCallback) -> checkRedPacketStatus
    void startRecordActivity(android.content.Context) -> startRecordActivity
    void startRecordActivity(android.content.Context,boolean) -> startRecordActivity
    void detachView() -> detachView
    void playSound(android.content.Context) -> playSound
    android.content.res.AssetFileDescriptor isMP3SoundFileExist(android.content.Context) -> isMP3SoundFileExist
    android.content.res.AssetFileDescriptor isWAVSoundFileExist(android.content.Context) -> isWAVSoundFileExist
    com.easemob.redpacketsdk.presenter.impl.OpenPacketPresenter access$000(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.bean.RedPacketInfo,android.support.v4.app.FragmentActivity,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback) -> access$000
    com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter access$102(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter) -> access$102
    void access$200(com.easemob.redpacketui.utils.RPRedPacketUtil,android.support.v4.app.DialogFragment,android.support.v4.app.FragmentActivity) -> access$200
    com.easemob.redpacketsdk.presenter.impl.ADPacketPresenter access$100(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$100
    com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment access$300(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$300
    com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment access$302(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketui.ui.fragment.SRedPacketDialogFragment) -> access$302
    com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment access$400(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$400
    com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment access$402(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketui.ui.fragment.RedPacketDialogFragment) -> access$402
    com.easemob.redpacketui.callback.RandomDetailCallback access$502(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketui.callback.RandomDetailCallback) -> access$502
    com.easemob.redpacketui.callback.RandomDetailCallback access$500(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$500
    com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment access$600(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$600
    com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment access$602(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketui.ui.fragment.RandomDetailDialogFragment) -> access$602
    com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter access$702(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter) -> access$702
    com.easemob.redpacketsdk.presenter.impl.CheckRedPacketPresenter access$700(com.easemob.redpacketui.utils.RPRedPacketUtil) -> access$700
com.easemob.redpacketui.utils.RPRedPacketUtil$1 -> com.easemob.redpacketui.utils.RPRedPacketUtil$1:
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> a
    android.support.v4.app.FragmentActivity val$activity -> b
    com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback val$callBack -> c
    com.easemob.redpacketui.utils.RPRedPacketUtil this$0 -> d
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.bean.RedPacketInfo,android.support.v4.app.FragmentActivity,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback) -> <init>
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.utils.RPRedPacketUtil$2 -> com.easemob.redpacketui.utils.RPRedPacketUtil$2:
    com.easemob.redpacketsdk.RPADPacketCallback val$callBack -> a
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> b
    boolean val$isPlaySound -> c
    android.support.v4.app.FragmentActivity val$activity -> d
    java.lang.String val$redPacketId -> e
    com.easemob.redpacketui.utils.RPRedPacketUtil this$0 -> f
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.RPADPacketCallback,com.easemob.redpacketsdk.bean.RedPacketInfo,boolean,android.support.v4.app.FragmentActivity,java.lang.String) -> <init>
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.utils.RPRedPacketUtil$2$1 -> com.easemob.redpacketui.utils.RPRedPacketUtil$2$1:
    com.easemob.redpacketui.utils.RPRedPacketUtil$2 this$1 -> a
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil$2) -> <init>
    void showADPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showADPacketDetail
    void onDetailError(java.lang.String,java.lang.String) -> onDetailError
    void onReceivePacketSuccess(java.lang.String,java.lang.String,java.lang.String) -> onReceivePacketSuccess
    void showAuthDialog() -> showAuthDialog
    void onReceiveError(java.lang.String,java.lang.String) -> onReceiveError
    void onAuthInfoSuccess(java.lang.String) -> onAuthInfoSuccess
    void onAuthInfoError(java.lang.String,java.lang.String) -> onAuthInfoError
    void onUploadAuthInfoSuccess() -> onUploadAuthInfoSuccess
    void onUploadAuthInfoError(java.lang.String,java.lang.String) -> onUploadAuthInfoError
com.easemob.redpacketui.utils.RPRedPacketUtil$3 -> com.easemob.redpacketui.utils.RPRedPacketUtil$3:
    com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback val$callBack -> a
    android.support.v4.app.FragmentActivity val$activity -> b
    com.easemob.redpacketsdk.bean.RedPacketInfo val$info -> c
    com.easemob.redpacketui.utils.RPRedPacketUtil this$0 -> d
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback,android.support.v4.app.FragmentActivity,com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void openPacketDialog(com.easemob.redpacketsdk.bean.RedPacketInfo,java.lang.String) -> openPacketDialog
    void showPacketDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showPacketDetail
    void onOpenPacketError(java.lang.String,java.lang.String) -> onOpenPacketError
    void showRandomDetail(com.easemob.redpacketsdk.bean.RedPacketInfo) -> showRandomDetail
com.easemob.redpacketui.utils.RPRedPacketUtil$3$1 -> com.easemob.redpacketui.utils.RPRedPacketUtil$3$1:
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> a
    com.easemob.redpacketui.utils.RPRedPacketUtil$3 this$1 -> b
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil$3,com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void onSuccess(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketui.utils.RPRedPacketUtil$3$2 -> com.easemob.redpacketui.utils.RPRedPacketUtil$3$2:
    com.easemob.redpacketsdk.bean.RedPacketInfo val$redPacketInfo -> a
    com.easemob.redpacketui.utils.RPRedPacketUtil$3 this$1 -> b
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil$3,com.easemob.redpacketsdk.bean.RedPacketInfo) -> <init>
    void onSuccess(java.lang.String) -> a
    void onError(java.lang.String,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.redpacketui.utils.RPRedPacketUtil$4 -> com.easemob.redpacketui.utils.RPRedPacketUtil$4:
    com.easemob.redpacketsdk.RPValueCallback val$callback -> a
    java.lang.String val$redPacketId -> b
    com.easemob.redpacketui.utils.RPRedPacketUtil this$0 -> c
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil,com.easemob.redpacketsdk.RPValueCallback,java.lang.String) -> <init>
    void onTokenSuccess() -> onTokenSuccess
    void onSettingSuccess() -> onSettingSuccess
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.utils.RPRedPacketUtil$4$1 -> com.easemob.redpacketui.utils.RPRedPacketUtil$4$1:
    com.easemob.redpacketui.utils.RPRedPacketUtil$4 this$1 -> a
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil$4) -> <init>
    void onCheckStatusSuccess(com.easemob.redpacketsdk.bean.RedPacketInfo) -> onCheckStatusSuccess
    void onCheckStatusError(java.lang.String,java.lang.String) -> onCheckStatusError
com.easemob.redpacketui.utils.RPRedPacketUtil$5 -> com.easemob.redpacketui.utils.RPRedPacketUtil$5:
    com.easemob.redpacketui.utils.RPRedPacketUtil this$0 -> a
    void <init>(com.easemob.redpacketui.utils.RPRedPacketUtil) -> <init>
    void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback -> com.easemob.redpacketui.utils.RPRedPacketUtil$RPOpenPacketCallback:
    void onSuccess(java.lang.String,java.lang.String,java.lang.String) -> onSuccess
    void showLoading() -> showLoading
    void hideLoading() -> hideLoading
    void onError(java.lang.String,java.lang.String) -> onError
com.easemob.redpacketui.widget.ChooseRecordPopupWindow -> com.easemob.redpacketui.widget.a:
    void <init>(android.content.Context,android.view.View$OnClickListener) -> <init>
com.easemob.redpacketui.widget.RPRoundCard -> com.easemob.redpacketui.widget.RPRoundCard:
    int DEFAULT_BACKGROUND_COLOR -> a
    android.graphics.Bitmap mBg -> b
    int mCornerRadius -> c
    int mBgColor -> d
    int mBgType -> e
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void init(android.content.Context,android.util.AttributeSet,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap createRoundImage(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap createRoundImage(int,int) -> a
    void setBGResource(int) -> setBGResource
    void setBGColor(int) -> setBGColor
    void setBGColor(java.lang.String) -> setBGColor
    void setBGBitmap(android.graphics.Bitmap) -> setBGBitmap
    void <clinit>() -> <clinit>
com.easemob.redpacketui.widget.RPSideBar -> com.easemob.redpacketui.widget.RPSideBar:
    com.easemob.redpacketui.widget.RPSideBar$OnTouchingLetterChangedListener onTouchingLetterChangedListener -> b
    java.lang.String[] b -> a
    int choose -> c
    android.graphics.Paint paint -> d
    android.widget.TextView mTextDialog -> e
    android.content.Context mContext -> f
    void setTextView(android.widget.TextView) -> setTextView
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setOnTouchingLetterChangedListener(com.easemob.redpacketui.widget.RPSideBar$OnTouchingLetterChangedListener) -> setOnTouchingLetterChangedListener
    int dip2px(android.content.Context,float) -> a
    void <clinit>() -> <clinit>
com.easemob.redpacketui.widget.RPSideBar$OnTouchingLetterChangedListener -> com.easemob.redpacketui.widget.RPSideBar$a:
    void onTouchingLetterChanged(java.lang.String) -> a
com.easemob.redpacketui.widget.RPTextView -> com.easemob.redpacketui.widget.RPTextView:
    android.graphics.Rect mRect -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
com.easemob.redpacketui.widget.RPTitleBar -> com.easemob.redpacketui.widget.RPTitleBar:
    android.widget.RelativeLayout leftLayout -> a
    android.widget.ImageView leftImage -> b
    android.widget.RelativeLayout rightImageLayout -> c
    android.widget.RelativeLayout rightTextLayout -> d
    android.widget.ImageView rightImage -> e
    android.widget.TextView rightText -> f
    android.widget.TextView titleView -> g
    android.widget.TextView subTitleText -> h
    android.widget.RelativeLayout titleLayout -> i
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context,android.util.AttributeSet) -> a
    void parseStyle(android.content.Context,android.util.AttributeSet) -> b
    void setLeftImageResource(int) -> setLeftImageResource
    void setRightImageResource(int) -> setRightImageResource
    void setLeftLayoutClickListener(android.view.View$OnClickListener) -> setLeftLayoutClickListener
    void setRightImageLayoutClickListener(android.view.View$OnClickListener) -> setRightImageLayoutClickListener
    void setRightTextLayoutClickListener(android.view.View$OnClickListener) -> setRightTextLayoutClickListener
    void setLeftLayoutVisibility(int) -> setLeftLayoutVisibility
    void setRightImageLayoutVisibility(int) -> setRightImageLayoutVisibility
    void setRightTextLayoutVisibility(int) -> setRightTextLayoutVisibility
    void setTitle(java.lang.String) -> setTitle
    void setSubTitle(java.lang.String) -> setSubTitle
    void setTitleColor(int) -> setTitleColor
    void setSubTitleColor(int) -> setSubTitleColor
    void setSubTitleVisibility(int) -> setSubTitleVisibility
    void setRightText(java.lang.String) -> setRightText
    void setBackgroundColor(int) -> setBackgroundColor
    android.widget.RelativeLayout getLeftLayout() -> getLeftLayout
    android.widget.RelativeLayout getRightImageLayout() -> getRightImageLayout
    android.widget.RelativeLayout getRightTextLayout() -> getRightTextLayout
